<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>燃情岁月</title>
  
  <subtitle>嘿嘿嘿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qq1028951741.github.io/"/>
  <updated>2019-02-19T06:30:32.878Z</updated>
  <id>https://qq1028951741.github.io/</id>
  
  <author>
    <name>fufua</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringCloud：服务间调用feign整合oauth鉴权</title>
    <link href="https://qq1028951741.github.io/2019/02/19/SpringCloud%EF%BC%9A%E6%9C%8D%E5%8A%A1%E9%97%B4%E8%B0%83%E7%94%A8Feign%E6%95%B4%E5%90%88oauth%E9%89%B4%E6%9D%83/"/>
    <id>https://qq1028951741.github.io/2019/02/19/SpringCloud：服务间调用Feign整合oauth鉴权/</id>
    <published>2019-02-19T02:54:13.000Z</published>
    <updated>2019-02-19T06:30:32.878Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringCloud：服务间调用Feign整合oauth鉴权"><a href="#SpringCloud：服务间调用Feign整合oauth鉴权" class="headerlink" title="SpringCloud：服务间调用Feign整合oauth鉴权"></a>SpringCloud：服务间调用Feign整合oauth鉴权</h2><blockquote><p>大体思路为把服务配置为资源服务器，feign调用时传递access_token参数，进行oauth鉴权。</p></blockquote><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="/images/feign-oauth1.jpg" alt="&quot;图片描述&quot;"></p><h3 id="zuul-service服务"><a href="#zuul-service服务" class="headerlink" title="zuul-service服务"></a>zuul-service服务</h3><p>增加两个过滤器，PreFilter和PostFilter。PreFilter作用http请求前，为设置参数转发和从cookie里取access_token并设置参数转发。PostFilter为http请求后，对返回内容进行统一封装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.filter;</span><br><span class="line"></span><br><span class="line">import com.netflix.zuul.ZuulFilter;</span><br><span class="line">import com.netflix.zuul.context.RequestContext;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.Cookie;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class PreFilter extends ZuulFilter &#123;</span><br><span class="line"></span><br><span class="line">    private static Logger log = LoggerFactory.getLogger(PreFilter.class);</span><br><span class="line">    @Override</span><br><span class="line">    public String filterType() &#123;</span><br><span class="line">        return &quot;pre&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int filterOrder() &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean shouldFilter() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Object run() &#123;</span><br><span class="line">        RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">        HttpServletRequest request = ctx.getRequest();</span><br><span class="line">        log.info(String.format(&quot;%s &gt;&gt;&gt; %s&quot;, request.getMethod(), request.getRequestURL().toString()));</span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line"></span><br><span class="line">        if(request.getParameter(&quot;access_token&quot;) != null)&#123;</span><br><span class="line">            Map&lt;String, List&lt;String&gt;&gt; map1 = new HashMap&lt;String,List&lt;String&gt;&gt;();</span><br><span class="line">            List&lt;String&gt; list1 = new ArrayList&lt;String&gt;();</span><br><span class="line">            list1.add(request.getParameter(&quot;access_token&quot;));</span><br><span class="line">            map1.put(&quot;access_token&quot;,list1);</span><br><span class="line">            ctx.setRequestQueryParams(map1);</span><br><span class="line">        &#125;else if(cookies != null)&#123;</span><br><span class="line">            for(Cookie cookie:cookies) &#123;</span><br><span class="line">                if(cookie.getName().equals(&quot;Admin-Token&quot;)) &#123;</span><br><span class="line">                    Map&lt;String, List&lt;String&gt;&gt; map = new HashMap&lt;String,List&lt;String&gt;&gt;();</span><br><span class="line">                    List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br><span class="line">                    list.add(cookie.getValue());</span><br><span class="line">                    map.put(&quot;access_token&quot;,list);</span><br><span class="line">                    ctx.setRequestQueryParams(map);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.filter;</span><br><span class="line"></span><br><span class="line">import com.netflix.zuul.ZuulFilter;</span><br><span class="line">import com.netflix.zuul.context.RequestContext;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.ByteArrayOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class PostFilter extends ZuulFilter &#123;</span><br><span class="line"></span><br><span class="line">private static Logger log = LoggerFactory.getLogger(ZuulFilter.class);</span><br><span class="line"></span><br><span class="line">public Object run() &#123;</span><br><span class="line">RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">HttpServletRequest request = ctx.getRequest();</span><br><span class="line">        HttpServletResponse response = ctx.getResponse();</span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">        if(requestURI.contains(&quot;oauth/token&quot;))&#123;</span><br><span class="line">            String responJson = inputStreamConvertString(ctx.getResponseDataStream());</span><br><span class="line">            String responWrap = &quot;&#123;\&quot;ret\&quot;:1,\&quot;msg\&quot;:\&quot;获取access_token成功\&quot;,\&quot;data\&quot;:&quot;;</span><br><span class="line">            String responResult = responWrap+responJson+&quot;&#125;&quot;;</span><br><span class="line">            if(responJson.contains(&quot;error&quot;))&#123;</span><br><span class="line">                response.setStatus(400);</span><br><span class="line">                responWrap = &quot;&#123;\&quot;ret\&quot;:-1,\&quot;msg\&quot;:\&quot;访问失败\&quot;,\&quot;data\&quot;:&quot;;</span><br><span class="line">                responResult = responWrap+responJson+&quot;&#125;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            ctx.setResponseBody(responResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean shouldFilter() &#123;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public int filterOrder() &#123;</span><br><span class="line"></span><br><span class="line">return 999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public String filterType() &#123;</span><br><span class="line"></span><br><span class="line">return &quot;post&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    public String inputStreamConvertString(InputStream inputStream) &#123;</span><br><span class="line">        String jsonStr = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            ByteArrayOutputStream result = new ByteArrayOutputStream();</span><br><span class="line">            byte[] buffer = new byte[1024];</span><br><span class="line">            int length;</span><br><span class="line">            while ((length = inputStream.read(buffer)) != -1) &#123;</span><br><span class="line">                result.write(buffer, 0, length);</span><br><span class="line">            &#125;</span><br><span class="line">            jsonStr = result.toString(StandardCharsets.UTF_8.name());</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return jsonStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="common-module"><a href="#common-module" class="headerlink" title="common-module"></a>common-module</h3><p>在FeignConfig里新增apply方法，使得feign调用带上access_token参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import feign.RequestInterceptor;</span><br><span class="line">import feign.RequestTemplate;</span><br><span class="line">import feign.codec.Encoder;</span><br><span class="line">import feign.form.spring.SpringFormEncoder;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.context.annotation.Scope;</span><br><span class="line">import org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line">import org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">    public class FeignConfig implements RequestInterceptor &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @Primary</span><br><span class="line">    @Scope(&quot;prototype&quot;)</span><br><span class="line">    public Encoder multipartFormEncoder() &#123;</span><br><span class="line">        return new SpringFormEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public feign.Logger.Level multipartLoggerLevel() &#123;</span><br><span class="line">        return feign.Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void apply(RequestTemplate paramRequestTemplate) &#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        //添加token</span><br><span class="line">        paramRequestTemplate.query(&quot;access_token&quot;, request.getParameter(&quot;access_token&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="file-service"><a href="#file-service" class="headerlink" title="file-service"></a>file-service</h3><p>file-service服务配置成资源服务器，具体参考 <code>SpringCloud：基于oauth2.0统一认证授权</code> 里的资源服务配置。</p><h3 id="business-service"><a href="#business-service" class="headerlink" title="business-service"></a>business-service</h3><p>利用原来的接口调用file-service服务的方法</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul><li>测试流程：zuul-service –&gt; business-service –&gt; file-service</li><li><p>测试过程中会发现以下代码RequestContextHolder.getRequestAttributes()为空</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import feign.RequestInterceptor;</span><br><span class="line">import feign.RequestTemplate;</span><br><span class="line">import feign.codec.Encoder;</span><br><span class="line">import feign.form.spring.SpringFormEncoder;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.context.annotation.Scope;</span><br><span class="line">import org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line">import org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">    public class FeignConfig implements RequestInterceptor &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @Primary</span><br><span class="line">    @Scope(&quot;prototype&quot;)</span><br><span class="line">    public Encoder multipartFormEncoder() &#123;</span><br><span class="line">        return new SpringFormEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public feign.Logger.Level multipartLoggerLevel() &#123;</span><br><span class="line">        return feign.Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void apply(RequestTemplate paramRequestTemplate) &#123;</span><br><span class="line">        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">        HttpServletRequest request = attributes.getRequest();</span><br><span class="line">        //添加token</span><br><span class="line">        paramRequestTemplate.query(&quot;access_token&quot;, request.getParameter(&quot;access_token&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>原因：当Feign开启Hystrix支持时，RequestContextHolder.getRequestAttributes()会为空，我们知道，Hystrix有隔离策略：THREAD以及SEMAPHORE。Hystrix的默认隔离策略是THREAD。当隔离策略为 THREAD 时，是没办法拿到 ThreadLocal 中的值的。</p></li><li><p>解决：我们可以将隔离策略设为SEMAPHORE，但该方案不是特别好。原因是Hystrix官方强烈建议使用THREAD作为隔离策略。那么只能自定义并发策略。编写一个类，让其继承HystrixConcurrencyStrategy。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import com.netflix.hystrix.HystrixThreadPoolKey;</span><br><span class="line">import com.netflix.hystrix.HystrixThreadPoolProperties;</span><br><span class="line">import com.netflix.hystrix.strategy.HystrixPlugins;</span><br><span class="line">import com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy;</span><br><span class="line">import com.netflix.hystrix.strategy.concurrency.HystrixRequestVariable;</span><br><span class="line">import com.netflix.hystrix.strategy.concurrency.HystrixRequestVariableLifecycle;</span><br><span class="line">import com.netflix.hystrix.strategy.eventnotifier.HystrixEventNotifier;</span><br><span class="line">import com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook;</span><br><span class="line">import com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisher;</span><br><span class="line">import com.netflix.hystrix.strategy.properties.HystrixPropertiesStrategy;</span><br><span class="line">import com.netflix.hystrix.strategy.properties.HystrixProperty;</span><br><span class="line">import org.apache.juli.logging.Log;</span><br><span class="line">import org.apache.juli.logging.LogFactory;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.context.request.RequestAttributes;</span><br><span class="line">import org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line">import java.util.concurrent.BlockingQueue;</span><br><span class="line">import java.util.concurrent.Callable;</span><br><span class="line">import java.util.concurrent.ThreadPoolExecutor;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class RequestAttributeHystrixConcurrencyStrategy extends HystrixConcurrencyStrategy &#123;</span><br><span class="line">    private static final Log log = LogFactory.getLog(RequestAttributeHystrixConcurrencyStrategy.class);</span><br><span class="line"></span><br><span class="line">    private HystrixConcurrencyStrategy delegate;</span><br><span class="line"></span><br><span class="line">    public RequestAttributeHystrixConcurrencyStrategy() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            this.delegate = HystrixPlugins.getInstance().getConcurrencyStrategy();</span><br><span class="line">            if (this.delegate instanceof RequestAttributeHystrixConcurrencyStrategy) &#123;</span><br><span class="line">                // Welcome to singleton hell...</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            HystrixCommandExecutionHook commandExecutionHook = HystrixPlugins</span><br><span class="line">                    .getInstance().getCommandExecutionHook();</span><br><span class="line">            HystrixEventNotifier eventNotifier = HystrixPlugins.getInstance()</span><br><span class="line">                    .getEventNotifier();</span><br><span class="line">            HystrixMetricsPublisher metricsPublisher = HystrixPlugins.getInstance()</span><br><span class="line">                    .getMetricsPublisher();</span><br><span class="line">            HystrixPropertiesStrategy propertiesStrategy = HystrixPlugins.getInstance()</span><br><span class="line">                    .getPropertiesStrategy();</span><br><span class="line">            this.logCurrentStateOfHystrixPlugins(eventNotifier, metricsPublisher,</span><br><span class="line">                    propertiesStrategy);</span><br><span class="line">            HystrixPlugins.reset();</span><br><span class="line">            HystrixPlugins.getInstance().registerConcurrencyStrategy(this);</span><br><span class="line">            HystrixPlugins.getInstance()</span><br><span class="line">                    .registerCommandExecutionHook(commandExecutionHook);</span><br><span class="line">            HystrixPlugins.getInstance().registerEventNotifier(eventNotifier);</span><br><span class="line">            HystrixPlugins.getInstance().registerMetricsPublisher(metricsPublisher);</span><br><span class="line">            HystrixPlugins.getInstance().registerPropertiesStrategy(propertiesStrategy);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e) &#123;</span><br><span class="line">            log.error(&quot;Failed to register Sleuth Hystrix Concurrency Strategy&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void logCurrentStateOfHystrixPlugins(HystrixEventNotifier eventNotifier,</span><br><span class="line">                                                 HystrixMetricsPublisher metricsPublisher,</span><br><span class="line">                                                 HystrixPropertiesStrategy propertiesStrategy) &#123;</span><br><span class="line">        if (log.isDebugEnabled()) &#123;</span><br><span class="line">            log.debug(&quot;Current Hystrix plugins configuration is [&quot;</span><br><span class="line">                    + &quot;concurrencyStrategy [&quot; + this.delegate + &quot;],&quot; + &quot;eventNotifier [&quot;</span><br><span class="line">                    + eventNotifier + &quot;],&quot; + &quot;metricPublisher [&quot; + metricsPublisher + &quot;],&quot;</span><br><span class="line">                    + &quot;propertiesStrategy [&quot; + propertiesStrategy + &quot;],&quot; + &quot;]&quot;);</span><br><span class="line">            log.debug(&quot;Registering Sleuth Hystrix Concurrency Strategy.&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public &lt;T&gt; Callable&lt;T&gt; wrapCallable(Callable&lt;T&gt; callable) &#123;</span><br><span class="line">        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();</span><br><span class="line">        return new WrappedCallable&lt;&gt;(callable, requestAttributes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ThreadPoolExecutor getThreadPool(HystrixThreadPoolKey threadPoolKey,</span><br><span class="line">                                            HystrixProperty&lt;Integer&gt; corePoolSize,</span><br><span class="line">                                            HystrixProperty&lt;Integer&gt; maximumPoolSize,</span><br><span class="line">                                            HystrixProperty&lt;Integer&gt; keepAliveTime, TimeUnit unit,</span><br><span class="line">                                            BlockingQueue&lt;Runnable&gt; workQueue) &#123;</span><br><span class="line">        return this.delegate.getThreadPool(threadPoolKey, corePoolSize, maximumPoolSize,</span><br><span class="line">                keepAliveTime, unit, workQueue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ThreadPoolExecutor getThreadPool(HystrixThreadPoolKey threadPoolKey,</span><br><span class="line">                                            HystrixThreadPoolProperties threadPoolProperties) &#123;</span><br><span class="line">        return this.delegate.getThreadPool(threadPoolKey, threadPoolProperties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public BlockingQueue&lt;Runnable&gt; getBlockingQueue(int maxQueueSize) &#123;</span><br><span class="line">        return this.delegate.getBlockingQueue(maxQueueSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public &lt;T&gt; HystrixRequestVariable&lt;T&gt; getRequestVariable(</span><br><span class="line">            HystrixRequestVariableLifecycle&lt;T&gt; rv) &#123;</span><br><span class="line">        return this.delegate.getRequestVariable(rv);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static class WrappedCallable&lt;T&gt; implements Callable&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">        private final Callable&lt;T&gt; target;</span><br><span class="line">        private final RequestAttributes requestAttributes;</span><br><span class="line"></span><br><span class="line">        public WrappedCallable(Callable&lt;T&gt; target, RequestAttributes requestAttributes) &#123;</span><br><span class="line">            this.target = target;</span><br><span class="line">            this.requestAttributes = requestAttributes;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public T call() throws Exception &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                RequestContextHolder.setRequestAttributes(requestAttributes);</span><br><span class="line">                return target.call();</span><br><span class="line">            &#125;</span><br><span class="line">            finally &#123;</span><br><span class="line">                RequestContextHolder.resetRequestAttributes();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>wrapCallable 方法拿到 RequestContextHolder.getRequestAttributes() ，也就是我们想传播的对象；</li><li>在 WrappedCallable 类中，我们将要传播的对象作为成员变量，并在其中的call方法中，为静态方法设值。</li><li>这样，在Hystrix包裹的方法中，就可以使用RequestContextHolder.getRequestAttributes() 获取到相关属性——也就是说，可以拿到RequestContextHolder 中的ThreadLocal 属性。</li><li>Hystrix只允许有一个并发策略！这意味着——如果不做任何处理，Sleuth、Spring Security将无法正常拿到上下文！（目前Sleuth、Spring Security都是通过自定义并发策略的方式来传递ThreadLocal对象的）。我们需要将现有的并发策略作为新并发策略的成员变量，在新并发策略中，返回现有并发策略的线程池、Queue。</li></ul></li><li>测试图片<br><img src="/images/feign-oauth.jpg" alt="&quot;图片描述&quot;"><br>通过cookie或者带上access_token参数都可以请求成功。</li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/spring-cloud-demo.git or 右上角github进去，spring-cloud-demo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringCloud 整合系列" scheme="https://qq1028951741.github.io/categories/SpringCloud-%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringCloud" scheme="https://qq1028951741.github.io/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud：Feign增加Hystrix断路器</title>
    <link href="https://qq1028951741.github.io/2018/12/31/SpringCloud%EF%BC%9AFeign%E5%A2%9E%E5%8A%A0Hystrix%E6%96%AD%E8%B7%AF%E5%99%A8/"/>
    <id>https://qq1028951741.github.io/2018/12/31/SpringCloud：Feign增加Hystrix断路器/</id>
    <published>2018-12-31T03:16:54.000Z</published>
    <updated>2019-01-29T11:37:46.733Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringCloud：Feign增加Hystrix断路器"><a href="#SpringCloud：Feign增加Hystrix断路器" class="headerlink" title="SpringCloud：Feign增加Hystrix断路器"></a>SpringCloud：Feign增加Hystrix断路器</h2><blockquote><p>由于网络原因或者自身的原因，服务并不能保证100%可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。为了解决这个问题，业界提出了断路器模型。断路打开后，可用避免连锁故障，fallback方法可以直接返回一个固定值。 </p></blockquote><h3 id="目前SpringCloudDemo结构"><a href="#目前SpringCloudDemo结构" class="headerlink" title="目前SpringCloudDemo结构"></a>目前SpringCloudDemo结构</h3><p><img src="/images/springcloud断路器1.jpg" alt="&quot;图片描述&quot;"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><ul><li><p>在spring-cloud-demo的pom.xml里添加依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>在business-service的bootstrap.yml开启断路器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feign:</span><br><span class="line">  hystrix:</span><br><span class="line">    enabled: true</span><br></pre></td></tr></table></figure></li><li><p>上一章节，我们把feign调用放在common-module了，这样其他模块也能用到这个feign，所以要在公共模块进行修改</p></li></ul><p>  <img src="/images/springcloud断路器2.jpg" alt="&quot;图片描述&quot;"></p><p>  在FileService类的@FeignClient增加 fallback = FileHystric.class</p><p>  <code>@FeignClient(value = &quot;file-service&quot;,fallback = FileHystric.class)</code></p><p>  新增FileHystric类实现FileService接口</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.feignHystric;</span><br><span class="line"></span><br><span class="line">import com.fufu.feignClient.FileService;</span><br><span class="line">import com.fufu.util.Result;</span><br><span class="line">import feign.Response;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class FileHystric implements FileService &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public Result uploadFile(MultipartFile file, String folderName, String fileName) &#123;</span><br><span class="line">        return Result.error(&quot;文件上传服务调用失败！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ResponseEntity&lt;byte[]&gt; downloadFile(String relativePath)&#123;</span><br><span class="line">        return new ResponseEntity&lt;byte[]&gt;(null, null, HttpStatus.NOT_FOUND);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Response httpGetFile(String relativePath)&#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="增加hystrix仪表盘监控"><a href="#增加hystrix仪表盘监控" class="headerlink" title="增加hystrix仪表盘监控"></a>增加hystrix仪表盘监控</h3><ul><li><p>单个实例hystrix监控</p><ul><li><p>添加依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-netflix-hystrix-dashboard&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>application启动类增加注解和servlet注册bean(不然会被拦截)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@EnableHystrixDashboard</span><br><span class="line">@EnableCircuitBreaker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">    public ServletRegistrationBean hystrixMetricsStreamServlet() &#123;</span><br><span class="line">        ServletRegistrationBean registration = new ServletRegistrationBean(new HystrixMetricsStreamServlet());</span><br><span class="line">        registration.addUrlMappings(&quot;/hystrix.stream&quot;);</span><br><span class="line">        return registration;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>访问<a href="http://localhost:port/hystrix" target="_blank" rel="noopener">http://localhost:port/hystrix</a> </p><p><img src="/images/springcloud断路器3.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>第一个长条输入你想访问的stream流 <a href="http://localhost:port/hystrix.stream" target="_blank" rel="noopener">http://localhost:port/hystrix.stream</a> ，点击monitor，出现监控视图</p><p><img src="/images/springcloud断路器4.png" alt="&quot;图片描述&quot;"></p></li></ul></li><li><p>集群hystrix监控</p><ul><li><p>Netflix提供了一个开源项目（Turbine）来提供把多个hystrix.stream的内容聚合为一个数据源供Dashboard展示。 </p></li><li><p>依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-turbine&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-netflix-turbine&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-starter-hystrix-dashboard&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=hystrix-dashboard-turbine</span><br><span class="line">server.port=8001</span><br><span class="line">turbine.appConfig=node01,node02</span><br><span class="line">turbine.aggregator.clusterConfig= default</span><br><span class="line">turbine.clusterNameExpression= new String(&quot;default&quot;)</span><br><span class="line"></span><br><span class="line">eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/</span><br></pre></td></tr></table></figure><ul><li>turbine.appConfig：配置Eureka中的serviceId列表，表明监控哪些服务</li><li>turbine.aggregator.clusterConfig：指定聚合哪些集群，多个使用”,”分割，默认为default。可使用<code>http://.../turbine.stream?cluster={clusterConfig之一}</code>访问</li><li>turbine.clusterNameExpression：<ul><li>clusterNameExpression指定集群名称，默认表达式appName；此时：<code>turbine.aggregator.clusterConfig</code>需要配置想要监控的应用名称；</li><li>当clusterNameExpression: default时，<code>turbine.aggregator.clusterConfig</code>可以不写，因为默认就是default；</li><li>当clusterNameExpression: metadata[‘cluster’]时，假设想要监控的应用配置了<code>eureka.instance.metadata-map.cluster: ABC</code>，则需要配置，同时<code>turbine.aggregator.clusterConfig: ABC</code></li></ul></li></ul></li><li><p>application启动类增加注解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@EnableHystrixDashboard</span><br><span class="line">@EnableTurbine</span><br></pre></td></tr></table></figure></li><li><p>访问<a href="http://localhost:port/turbine.stream" target="_blank" rel="noopener">http://localhost:port/turbine.stream</a> 出现两个监控列表</p></li></ul></li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/spring-cloud-demo.git or 右上角github进去，spring-cloud-demo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringCloud 整合系列" scheme="https://qq1028951741.github.io/categories/SpringCloud-%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringCloud" scheme="https://qq1028951741.github.io/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud：common-module公共模块抽离</title>
    <link href="https://qq1028951741.github.io/2018/12/28/SpringCloud%EF%BC%9Acommon-module%E5%85%AC%E5%85%B1%E6%A8%A1%E5%9D%97%E6%8A%BD%E7%A6%BB/"/>
    <id>https://qq1028951741.github.io/2018/12/28/SpringCloud：common-module公共模块抽离/</id>
    <published>2018-12-28T04:34:12.000Z</published>
    <updated>2019-01-29T09:40:24.258Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringCloud：common-module公共模块抽离"><a href="#SpringCloud：common-module公共模块抽离" class="headerlink" title="SpringCloud：common-module公共模块抽离"></a>SpringCloud：common-module公共模块抽离</h2><p>###新建公共模块common-module</p><ul><li><p>把常用的config类型如swagger-ui、前面提到过的feignconfig、我们的feign接口和工具类放到我们的公共模块里</p></li><li><p>工程结构如下</p><p><img src="/images/springcloud模块抽离1.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;common-module&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;name&gt;common-module&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="父节点spring-cloud-demo修改"><a href="#父节点spring-cloud-demo修改" class="headerlink" title="父节点spring-cloud-demo修改"></a>父节点spring-cloud-demo修改</h3><ul><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;spring-cloud-demo&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.3.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;modules&gt;</span><br><span class="line">        &lt;module&gt;eureka-server&lt;/module&gt;</span><br><span class="line">        &lt;module&gt;file-service&lt;/module&gt;</span><br><span class="line">        &lt;module&gt;business-service&lt;/module&gt;</span><br><span class="line">        &lt;module&gt;common-module&lt;/module&gt;</span><br><span class="line">    &lt;/modules&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">        &lt;spring-cloud.version&gt;Finchley.RELEASE&lt;/spring-cloud.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;common-module&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.github.openfeign.form&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;feign-form-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--swagger2--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.47&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.3.13.RELEASE&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;/version&gt;</span><br><span class="line">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>可以看到所有模块会用到的公共依赖都移到了dependencies里，还多了个common-module模块依赖</p></li></ul><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li><p>以上修改后，我们可以看到工程结构里的模块在编译时会自动把公共模块包含进来，说明分离成功</p><p><img src="/images/springcloud模块抽离2.jpg" alt="&quot;图片描述&quot;"></p></li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/spring-cloud-demo.git or 右上角github进去，spring-cloud-demo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringCloud 整合系列" scheme="https://qq1028951741.github.io/categories/SpringCloud-%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringCloud" scheme="https://qq1028951741.github.io/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud：服务间调用Feign</title>
    <link href="https://qq1028951741.github.io/2018/12/26/SpringCloud%EF%BC%9A%E6%9C%8D%E5%8A%A1%E9%97%B4%E8%B0%83%E7%94%A8Feign/"/>
    <id>https://qq1028951741.github.io/2018/12/26/SpringCloud：服务间调用Feign/</id>
    <published>2018-12-26T11:54:13.000Z</published>
    <updated>2019-01-29T09:49:56.010Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringCloud：服务间调用Feign"><a href="#SpringCloud：服务间调用Feign" class="headerlink" title="SpringCloud：服务间调用Feign"></a>SpringCloud：服务间调用Feign</h2><h3 id="Feign介绍"><a href="#Feign介绍" class="headerlink" title="Feign介绍"></a>Feign介绍</h3><blockquote><p>Feign是一个声明式的伪Http客户端，它使得写Http客户端变得更简单。使用Feign，只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign 注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果</p></blockquote><ul><li>Feign 采用的是基于接口的注解</li><li>Feign 整合了ribbon，具有负载均衡的能力</li><li>整合了Hystrix，具有熔断的能力</li></ul><h3 id="创建business-service模块"><a href="#创建business-service模块" class="headerlink" title="创建business-service模块"></a>创建business-service模块</h3><ul><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;business-service&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;name&gt;business-service&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.github.openfeign.form&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;feign-form-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--swagger2--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.47&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>bootstrap.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: business-service</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: 2002</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://localhost:2000/eureka/</span><br></pre></td></tr></table></figure></li><li><p>BusinessServiceApplication配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.businessservice;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line">import org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaClient</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">@EnableFeignClients</span><br><span class="line">public class BusinessServiceApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(BusinessServiceApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增接口FileService，这个地方是关键，需要配置要调用的服务名称和相应接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.businessservice.feignclient;</span><br><span class="line"></span><br><span class="line">import com.fufu.businessservice.util.Result;</span><br><span class="line">import feign.Response;</span><br><span class="line">import org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">@FeignClient(value = &quot;file-service&quot;)</span><br><span class="line">public interface FileService &#123;</span><br><span class="line"></span><br><span class="line">    @PostMapping(value = &quot;/uploadFile&quot;)</span><br><span class="line">    public Result uploadFile(</span><br><span class="line">            @RequestPart(value = &quot;file&quot;) MultipartFile file,</span><br><span class="line">            @RequestParam(value = &quot;folderName&quot;) String folderName,</span><br><span class="line">            @RequestParam(value = &quot;fileName&quot;) String fileName);</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/downloadFile&quot;)</span><br><span class="line">    public ResponseEntity&lt;byte[]&gt; downloadFile(</span><br><span class="line">            @RequestParam(value = &quot;relativePath&quot;) String relativePath);</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/httpGetFile&quot;)</span><br><span class="line">    public Response httpGetFile(</span><br><span class="line">            @RequestParam(value = &quot;relativePath&quot;) String relativePath);</span><br><span class="line"></span><br><span class="line">    @GetMapping(value=&quot;/test&quot;)</span><br><span class="line">    public String test();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增controller类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.businessservice.controller;</span><br><span class="line"></span><br><span class="line">import com.fufu.businessservice.feignclient.FileService;</span><br><span class="line">import com.fufu.businessservice.util.Result;</span><br><span class="line">import feign.Response;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class BusinessController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired FileService fileService;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;调用file-service进行文件上传&quot;)</span><br><span class="line">    @PostMapping(value = &quot;/uploadFile&quot;)</span><br><span class="line">    public Result uploadFile(MultipartFile file, String folderName, String fileName) &#123;</span><br><span class="line">        return fileService.uploadFile(file, folderName, fileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/downloadFile&quot;)</span><br><span class="line">    public Object downloadFile(String relativePath) &#123;</span><br><span class="line">        ResponseEntity&lt;byte[]&gt; entity = fileService.downloadFile(relativePath);</span><br><span class="line">//        System.out.println( entity.getStatusCode());</span><br><span class="line">        return entity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/httpGetFile&quot;)</span><br><span class="line">    public void httpGetFile(String relativePath, HttpServletResponse response)&#123;</span><br><span class="line">        Response feignResponse = fileService.httpGetFile(relativePath);</span><br><span class="line">        byte[] buffer = new byte[1024];</span><br><span class="line">        try &#123;</span><br><span class="line">            InputStream inputStream = feignResponse.body().asInputStream();</span><br><span class="line">            OutputStream os = response.getOutputStream();</span><br><span class="line">            int i = inputStream.read(buffer);</span><br><span class="line">            while (i != -1) &#123;</span><br><span class="line">                os.write(buffer, 0, i);</span><br><span class="line">                i = inputStream.read(buffer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(value = &quot;/test&quot;)</span><br><span class="line">    public String test() &#123;</span><br><span class="line">        return fileService.test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增FeignConfig配置来支持服务间表单提交请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.businessservice.config;</span><br><span class="line"></span><br><span class="line">import feign.codec.Encoder;</span><br><span class="line">import feign.form.spring.SpringFormEncoder;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.context.annotation.Scope;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class FeignConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @Primary</span><br><span class="line">    @Scope(&quot;prototype&quot;)</span><br><span class="line">    public Encoder multipartFormEncoder() &#123;</span><br><span class="line">        return new SpringFormEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public feign.Logger.Level multipartLoggerLevel() &#123;</span><br><span class="line">        return feign.Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="file-service文件上传服务修改"><a href="#file-service文件上传服务修改" class="headerlink" title="file-service文件上传服务修改"></a>file-service文件上传服务修改</h2><ul><li><p>FileController</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.fileserver.controller;</span><br><span class="line"></span><br><span class="line">import com.fufu.fileserver.service.FileService;</span><br><span class="line">import com.fufu.fileserver.util.FileTypeUtil;</span><br><span class="line">import com.fufu.fileserver.util.Result;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.http.HttpHeaders;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.URLEncoder;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">public class FileController &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;upload.rootPath&#125;&quot;)</span><br><span class="line">    private String rootPath;</span><br><span class="line">    @Autowired</span><br><span class="line">    private FileService fileService;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 单个文件上传</span><br><span class="line">     */</span><br><span class="line">    @ApiOperation(value=&quot;单个文件上传&quot;)</span><br><span class="line">    @PostMapping(value=&quot;/uploadFile&quot;)</span><br><span class="line">    public Result uploadFile(MultipartFile file, String folderName, String fileName) &#123;</span><br><span class="line">        //获取文件后缀名</span><br><span class="line">        String ext= FileTypeUtil.getFileSuffix(file.getOriginalFilename());</span><br><span class="line">        SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyyMMdd&quot;);</span><br><span class="line">        try &#123;</span><br><span class="line">            String filePath = folderName +&quot;/&quot; + sf.format(new Date()) +&quot;/&quot; ;</span><br><span class="line">            String finalName = new Random().nextInt(999999) + &quot;.&quot;+ ext;</span><br><span class="line"></span><br><span class="line">            String finalPath = rootPath + filePath;</span><br><span class="line">            if(fileName != null) &#123;</span><br><span class="line">                finalName = fileName +&quot;_&quot; + finalName ;</span><br><span class="line">            &#125;</span><br><span class="line">            String fullPath = fileService.uploadFile(file.getBytes(), finalPath, finalName);</span><br><span class="line">            if(fullPath.isEmpty()) &#123;</span><br><span class="line">                return null;</span><br><span class="line">            &#125;</span><br><span class="line">            return Result.ok(&quot;上传成功,文件保存路径为:&quot;+filePath + finalName);</span><br><span class="line"></span><br><span class="line">        &#125;catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return Result.error(&quot;uploadimg failure: &quot; + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 文件（二进制数据）下载</span><br><span class="line">     */</span><br><span class="line">    @GetMapping(&quot;/downloadFile&quot;)</span><br><span class="line">    public ResponseEntity&lt;byte[]&gt; downloadFile(String relativePath, HttpServletRequest request )&#123;</span><br><span class="line">        HttpHeaders headers = new HttpHeaders();</span><br><span class="line">        ResponseEntity&lt;byte[]&gt; entity = null;</span><br><span class="line">        InputStream in=null;</span><br><span class="line">        try &#123;</span><br><span class="line">            String fullPath = rootPath + relativePath;</span><br><span class="line">            in=new FileInputStream(new File(fullPath));</span><br><span class="line">            byte[] bytes = new byte[in.available()];</span><br><span class="line">            String[] pathArr = relativePath.split(&quot;/&quot;);</span><br><span class="line">            Integer splitNum = pathArr.length-1;</span><br><span class="line">            String imageName = pathArr[splitNum];</span><br><span class="line">            //处理IE下载文件的中文名称乱码的问题</span><br><span class="line">            String header = request.getHeader(&quot;User-Agent&quot;).toUpperCase();</span><br><span class="line">            if (header.contains(&quot;MSIE&quot;) || header.contains(&quot;TRIDENT&quot;) || header.contains(&quot;EDGE&quot;)) &#123;</span><br><span class="line">                imageName = URLEncoder.encode(imageName, &quot;utf-8&quot;);</span><br><span class="line">                imageName = imageName.replace(&quot;+&quot;, &quot;%20&quot;);    //IE下载文件名空格变+号问题</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                imageName = new String(imageName.getBytes(), &quot;iso-8859-1&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            in.read(bytes);</span><br><span class="line">            headers.add(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot;+imageName);</span><br><span class="line">            entity = new ResponseEntity&lt;byte[]&gt;(bytes, headers, HttpStatus.OK);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            if(in!=null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return entity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * http获取文件</span><br><span class="line">     */</span><br><span class="line">    @GetMapping(&quot;/httpGetFile&quot;)</span><br><span class="line">    public void httpGetFile(String relativePath, HttpServletRequest request, HttpServletResponse response)&#123;</span><br><span class="line">        if (relativePath != null) &#123;</span><br><span class="line">            //当前是从该工程的WEB-INF//File//下获取文件(该目录可以在下面一行代码配置)然后下载到C:\\users\\downloads即本机的默认下载的目录</span><br><span class="line">//            String realPath = request.getServletContext().getRealPath(&quot;//WEB-INF//&quot;);</span><br><span class="line">            String fullPath = rootPath + relativePath;</span><br><span class="line">            File file = new File(fullPath);</span><br><span class="line">            if (file.exists()) &#123;</span><br><span class="line">                byte[] buffer = new byte[1024];</span><br><span class="line">                FileInputStream fis = null;</span><br><span class="line">                BufferedInputStream bis = null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    fis = new FileInputStream(file);</span><br><span class="line">                    bis = new BufferedInputStream(fis);</span><br><span class="line">                    OutputStream os = response.getOutputStream();</span><br><span class="line">                    int i = bis.read(buffer);</span><br><span class="line">                    while (i != -1) &#123;</span><br><span class="line">                        os.write(buffer, 0, i);</span><br><span class="line">                        i = bis.read(buffer);</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(&quot;file download success! &quot;);</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    if (bis != null) &#123;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            bis.close();</span><br><span class="line">                        &#125; catch (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (fis != null) &#123;</span><br><span class="line">                        try &#123;</span><br><span class="line">                            fis.close();</span><br><span class="line">                        &#125; catch (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(value=&quot;/test&quot;)</span><br><span class="line">    public String test() &#123;</span><br><span class="line">        return &quot;Hello World!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>FileService</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.fileserver.service;</span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class FileService &#123;</span><br><span class="line"></span><br><span class="line">public String uploadFile(byte[] file, String finalPath, String finalName)throws IOException&#123;</span><br><span class="line">        File targetFile = new File(finalPath);  </span><br><span class="line">        if(!targetFile.exists())&#123;    </span><br><span class="line">            targetFile.mkdirs();    </span><br><span class="line">        &#125;</span><br><span class="line">        FileOutputStream out;</span><br><span class="line">out = new FileOutputStream(finalPath+finalName);</span><br><span class="line">out.write(file);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">//System.out.println(finalPath + finalName);</span><br><span class="line">return finalPath + finalName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;file-service&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;file-service&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.github.openfeign.form&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;feign-form-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.1.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--swagger2--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.47&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>基本配置的话，增加spring-cloud-starter-openfeign依赖和feign-form-spring表单支持，再来就是application配置@EnableFeignClients，以及FeignConfig类的FormEncoder支持，还需要创建interface加上@FeignClient(value = “file-service”)所要调用的服务名称以及方法。</li><li>这里用简单的文件上传和文件下载来展示feign调用。</li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/spring-cloud-demo.git or 右上角github进去，spring-cloud-demo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringCloud 整合系列" scheme="https://qq1028951741.github.io/categories/SpringCloud-%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringCloud" scheme="https://qq1028951741.github.io/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud：服务注册与发现</title>
    <link href="https://qq1028951741.github.io/2018/12/25/SpringCloud%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
    <id>https://qq1028951741.github.io/2018/12/25/SpringCloud：服务注册与发现/</id>
    <published>2018-12-25T02:43:13.000Z</published>
    <updated>2019-01-29T09:34:14.395Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringCloud：服务注册与发现"><a href="#SpringCloud：服务注册与发现" class="headerlink" title="SpringCloud：服务注册与发现"></a>SpringCloud：服务注册与发现</h2><h3 id="创建maven主工程"><a href="#创建maven主工程" class="headerlink" title="创建maven主工程"></a>创建maven主工程</h3><ul><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;</span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;spring-cloud-demo&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.3.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;modules&gt;</span><br><span class="line">        &lt;module&gt;eureka-server&lt;/module&gt;</span><br><span class="line">        &lt;module&gt;file-server&lt;/module&gt;</span><br><span class="line">    &lt;/modules&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">        &lt;spring-cloud.version&gt;Finchley.RELEASE&lt;/spring-cloud.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;/version&gt;</span><br><span class="line">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建注册中心"><a href="#创建注册中心" class="headerlink" title="创建注册中心"></a>创建注册中心</h3><ul><li><p>创建模块</p><p><img src="/images/服务注册与发现1.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/服务注册与发现2.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/服务注册与发现3.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;eureka-server&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;eureka-server&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">        &lt;spring-cloud.version&gt;Finchley.RELEASE&lt;/spring-cloud.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;/version&gt;</span><br><span class="line">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">    &lt;repositories&gt;</span><br><span class="line">        &lt;repository&gt;</span><br><span class="line">            &lt;id&gt;spring-milestones&lt;/id&gt;</span><br><span class="line">            &lt;name&gt;Spring Milestones&lt;/name&gt;</span><br><span class="line">            &lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;</span><br><span class="line">        &lt;/repository&gt;</span><br><span class="line">    &lt;/repositories&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>EurekaServerApplication 配置服务注册中心</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.eurekaserver;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaServer</span><br><span class="line">public class EurekaServerApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>resource下新增bootstrap.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: eureka-server</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: 2000</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    hostname: localhost</span><br><span class="line">  client:</span><br><span class="line">    registerWithEureka: false</span><br><span class="line">    fetchRegistry: false</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span><br></pre></td></tr></table></figure></li><li><p>跑起来，访问<a href="http://localhost:2000/" target="_blank" rel="noopener">http://localhost:2000/</a></p><p><img src="/images/服务注册与发现4.jpg" alt="&quot;图片描述&quot;"></p></li></ul><h3 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h3><ul><li><p>创建file-server模块</p><p><img src="/images/服务注册与发现5.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/服务注册与发现6.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>pom.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-demo&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;file-server&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;file-server&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>FileServerApplication添加注册客户端配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.fileserver;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaClient</span><br><span class="line">public class FileServerApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(FileServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>resource下新增bootstrap.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: file-server</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: 2001</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://localhost:2000/eureka/</span><br></pre></td></tr></table></figure></li><li><p>启动服务，效果图</p><p><img src="/images/服务注册与发现7.jpg" alt="&quot;图片描述&quot;"></p></li></ul><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ul><li><p>eureka是一个高可用的组件，它没有后端缓存，每一个实例注册之后需要向注册中心发送心跳（因此可以在内存中完成），在默认情况下erureka server也是一个eureka client ,必须要指定一个 server 。</p></li><li><p>当client向server注册时，它会提供一些元数据，例如主机和端口，URL，主页等。Eureka server 从每个client实例接收心跳消息。 如果心跳超时，则通常将该实例从注册server中删除。 </p></li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/spring-cloud-demo.git or 右上角github进去，spring-cloud-demo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringCloud 整合系列" scheme="https://qq1028951741.github.io/categories/SpringCloud-%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringCloud" scheme="https://qq1028951741.github.io/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>Java 对图片进行大小转换</title>
    <link href="https://qq1028951741.github.io/2018/12/25/Java%20%E5%AF%B9%E5%9B%BE%E7%89%87%E8%BF%9B%E8%A1%8C%E5%A4%A7%E5%B0%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>https://qq1028951741.github.io/2018/12/25/Java 对图片进行大小转换/</id>
    <published>2018-12-25T02:18:13.000Z</published>
    <updated>2018-12-25T03:54:53.211Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="Java-对图片进行大小转换"><a href="#Java-对图片进行大小转换" class="headerlink" title="Java 对图片进行大小转换"></a>Java 对图片进行大小转换</h2><h3 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package com.fufua.test;  </span><br><span class="line"></span><br><span class="line">import java.awt.Image;  </span><br><span class="line">import java.awt.image.BufferedImage;  </span><br><span class="line">import java.io.File;  </span><br><span class="line">import java.io.IOException;  </span><br><span class="line">import javax.imageio.ImageIO;  </span><br><span class="line"></span><br><span class="line">public class ImageResize&#123;   </span><br><span class="line">    /**</span><br><span class="line">     * 功能 :调整图片大小 </span><br><span class="line">     * @param ImgPath 图片路径  </span><br><span class="line">     * @param width   转换后图片宽度 </span><br><span class="line">     * @param height  转换后图片高度 </span><br><span class="line"> * @return MultipartFile</span><br><span class="line">     **/  </span><br><span class="line">    public static MultipartFile resizeImage(String imgPath,int width, int height) throws IOException &#123;  </span><br><span class="line">        MultipartFile multipartFile = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            File file = new File(imgPath);</span><br><span class="line">            Image img = ImageIO.read(file);</span><br><span class="line">            BufferedImage buffImg = null;</span><br><span class="line">            buffImg = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">            buffImg.getGraphics().drawImage(</span><br><span class="line">                    img.getScaledInstance(width , height, Image.SCALE_SMOOTH), 0,</span><br><span class="line">                    0, null);</span><br><span class="line">ImageIO.write(buffImg, &quot;JPEG&quot;, file);</span><br><span class="line">FileInputStream input = new FileInputStream(file);</span><br><span class="line">multipartFile = new MockMultipartFile(&quot;file&quot;, file.getName(), &quot;application/x-jpg&quot;, IOUtils.toByteArray(input));</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;  </span><br><span class="line">return multipartFile;</span><br><span class="line">&#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="开发日常记录" scheme="https://qq1028951741.github.io/categories/%E5%BC%80%E5%8F%91%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="图片大小转换" scheme="https://qq1028951741.github.io/tags/%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：Jenkins 实现持续集成</title>
    <link href="https://qq1028951741.github.io/2018/12/19/SpringBoot%EF%BC%9AJenkins%20%E5%AE%9E%E7%8E%B0%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    <id>https://qq1028951741.github.io/2018/12/19/SpringBoot：Jenkins 实现持续集成/</id>
    <published>2018-12-19T02:43:13.000Z</published>
    <updated>2018-12-19T07:50:56.399Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：Jenkins-实现持续集成"><a href="#SpringBoot：Jenkins-实现持续集成" class="headerlink" title="SpringBoot：Jenkins 实现持续集成"></a>SpringBoot：Jenkins 实现持续集成</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li>安装JDK </li><li>配置tomcat </li><li>安装maven </li><li>安装Jenkins  <a href="https://jenkins.io/download/" target="_blank" rel="noopener">https://jenkins.io/download/</a>  (可以选择windows也可选择war包)<ul><li>war 包放进tomcat/webapps目录下 ，启动tomcat访问<a href="http://localhost:8080/jenkins" target="_blank" rel="noopener">http://localhost:8080/jenkins</a> </li><li>windows msi安装包安装好后，会自动在浏览器打开(本文是这种方式)，也可访问 <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a></li></ul></li></ul><h3 id="相关配置"><a href="#相关配置" class="headerlink" title="相关配置"></a>相关配置</h3><ul><li><p>Jenkins初始化后，需要按照提示路径打开密码文件</p><p><img src="/images/jenkins1.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>选择安装推荐插件</p><p><img src="/images/jenkins2.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/jenkins3.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>安装指定插件 Deploy to container、PowerShell、Publish Over SSH、FindBugs 和DOS Trigger (后面用到)</p></li><li><p>创建管理员</p><p><img src="/images/jenkins4.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>改下端口8090(这个可以不用改，貌似没什么差别，都可以用localhost:8080/login登陆)</p><p><img src="/images/jenkins5.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>Welcome to Jenkins!</p><p><img src="/images/jenkins6.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>系统设置</p><p><img src="/images/jenkins7.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/jenkins8.jpg" alt="&quot;图片描述&quot;"></p><p>​    添加utf-8编码环境变量和修改jenkins访问url</p></li><li><p>全局工具配置</p><p><img src="/images/jenkins9.jpg" alt="&quot;图片描述&quot;"></p><p>​    主要配置Maven settings文件路径、JDK、Git、Maven路径</p></li></ul><h3 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h3><ul><li><p>New 任务</p></li><li><p>创建软件项目</p><p><img src="/images/jenkins10.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>General</p><p><img src="/images/jk-general.jpg" alt="&quot;图片描述&quot;"></p><p>​    配置github项目url、丢弃旧的构建、最大保留构建数</p></li><li><p>Source Code Management </p><p><img src="/images/jk-sourcecodemanage.jpg" alt="&quot;图片描述&quot;"></p><p>​    配置仓库地址和github账号密码</p></li><li><p>Build Triggers </p><p><img src="/images/jk-buildtrggers.jpg" alt="&quot;图片描述&quot;"></p><p>​    配置自动构建，星期1-7，每天12：00和23：00</p></li><li><p>Build Environment （Linux ssh远程连接运行jar包）</p><p><img src="/images/jk-buildenvironment.jpg" alt="&quot;图片描述&quot;"></p><p>​    这里的ssh server，进入系统管理 &gt; 系统设置 选择 Publish over SSH 配置</p></li><li><p>Build （这里是window dos命令启动）</p><p><img src="/images/jk-build.jpg" alt="&quot;图片描述&quot;"></p><p>​    配置构建步骤，先杀掉对应jar进程，maven部署，然后再启动jar</p><ul><li>Linux环境下的话，安装PowerShell插件，脚本类似</li></ul><p>​        <code>kill -9 $(ps -ef | grep spring-boot-demo | grep -v grep | awk &#39;{print $2}&#39;)</code> </p><p>​         <code>cd /Users/mengday/.jenkins/workspace/spring-boot-demo/target</code> </p><p>​    配合Build Environment （Linux ssh远程连接运行jar包）</p></li><li><p>Post-build Actions </p><p><img src="/images/jk-postbuildactions.jpg" alt="&quot;图片描述&quot;"></p><p>​    配置FindBugs，这里用默认配置</p><ul><li><p>如果想自动部署war到tomcat下，那么前面安装的插件（Deploy to container）就有用处了</p><p><img src="/images/jk-war.jpg" alt="&quot;图片描述&quot;"></p></li></ul></li><li><p>自动构建</p><p><img src="/images/jk-last1.jpg" alt="&quot;图片描述&quot;"></p><p>​    注意，如果maven是deploy，pom.xml要添加nexus私服，不然会报错</p><p>​    <code>Deployment failed: repository element was not specified in the POM inside distributionManagement element or in -DaltDeploymentRepository=id::layout::url parameter -&gt; [Help 1]</code> </p></li><li><p>构建日志和FindBugs</p><p><img src="/images/jk-consoleoutput.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/jk-findbugsresult.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>杀掉相应端口进程(ANSI编码才不会乱码)</p><p>@echo off<br>setlocal enabledelayedexpansion<br>::set port=9090<br>set /p port=请输入端口号：<br>for /f “tokens=1-5” %%a in (‘netstat -ano ^| find “:%port%”‘) do (<br> if “%%e%” == “” (</p><pre><code>set pid=%%d</code></pre><p> ) else (</p><pre><code>set pid=%%e</code></pre><p> )<br> echo !pid!<br> taskkill /f /pid !pid!<br>)<br>pause</p></li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr><p>  ​    </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：Filter、Listener、Servlet、Interceptor</title>
    <link href="https://qq1028951741.github.io/2018/12/17/SpringBoot%EF%BC%9AFilter%E3%80%81Listener%E3%80%81Servlet%E3%80%81Interceptor/"/>
    <id>https://qq1028951741.github.io/2018/12/17/SpringBoot：Filter、Listener、Servlet、Interceptor/</id>
    <published>2018-12-17T02:49:13.000Z</published>
    <updated>2018-12-17T02:50:19.487Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：Filter、Listener、Servlet、Interceptor"><a href="#SpringBoot：Filter、Listener、Servlet、Interceptor" class="headerlink" title="SpringBoot：Filter、Listener、Servlet、Interceptor"></a>SpringBoot：Filter、Listener、Servlet、Interceptor</h2><h3 id="Filter过滤器"><a href="#Filter过滤器" class="headerlink" title="Filter过滤器"></a>Filter过滤器</h3><blockquote><p>示例为请求和返回的编码处理，和常见的url过滤</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.filter;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import javax.servlet.*;</span><br><span class="line">import javax.servlet.annotation.WebFilter;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">@WebFilter(filterName = &quot;myFilter&quot;, urlPatterns = &quot;/*&quot;)</span><br><span class="line">public class MyFilter implements Filter &#123;</span><br><span class="line"></span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(MyFilter.class);</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void init(FilterConfig filterConfig) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line">        //对request和response进行一些预处理</span><br><span class="line">        request.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">        response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">        response.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br><span class="line">        //请求的地址</span><br><span class="line">        String url = httpRequest.getRequestURI();</span><br><span class="line">        logger.info(&quot;请求的地址: &#123;&#125;&quot;, url);</span><br><span class="line">        //这里可以加过滤条件</span><br><span class="line">        //response.sendRedirect(request.getContextPath()+&quot;/fail.jsp&quot;); 过滤失败可以重定向</span><br><span class="line">        //过滤成功，进入下一个过滤器</span><br><span class="line">        chain.doFilter(httpRequest, httpResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void destroy() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Listener监听器"><a href="#Listener监听器" class="headerlink" title="Listener监听器"></a>Listener监听器</h3><blockquote><p>常见的session监听在线用户各户</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.listener;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletContext;</span><br><span class="line">import javax.servlet.annotation.WebListener;</span><br><span class="line">import javax.servlet.http.HttpSessionEvent;</span><br><span class="line">import javax.servlet.http.HttpSessionListener;</span><br><span class="line"></span><br><span class="line">@WebListener(&quot;MyListener&quot;)</span><br><span class="line">public class MyListener implements HttpSessionListener &#123;</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(MyListener.class);</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void sessionCreated(HttpSessionEvent httpSessionEvent) &#123;</span><br><span class="line">        logger.info(&quot;session监听器启动&quot;);</span><br><span class="line">        ServletContext context = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        Integer onLineCount = (Integer) context.getAttribute(&quot;onLineCount&quot;);</span><br><span class="line">        if(onLineCount==null)&#123;</span><br><span class="line">            context.setAttribute(&quot;onLineCount&quot;, 1);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            onLineCount++;</span><br><span class="line">            context.setAttribute(&quot;onLineCount&quot;, onLineCount);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void sessionDestroyed(HttpSessionEvent httpSessionEvent) &#123;</span><br><span class="line">        logger.info(&quot;session监听器销毁&quot;);</span><br><span class="line">        ServletContext context = httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        Integer onLineCount = (Integer) context.getAttribute(&quot;onLineCount&quot;);</span><br><span class="line">        if(onLineCount==null)&#123;</span><br><span class="line">            context.setAttribute(&quot;onLineCount&quot;, 1);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            onLineCount--;</span><br><span class="line">            context.setAttribute(&quot;onLineCount&quot;, onLineCount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###Servlet</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.sevlet;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line">@WebServlet(name = &quot;myServlet&quot;, urlPatterns = &quot;/myServlet&quot;)</span><br><span class="line">public class MyServlet extends HttpServlet &#123;</span><br><span class="line">    private static Logger logger = LoggerFactory.getLogger(MyServlet.class);</span><br><span class="line">    @Override</span><br><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">        logger.info(&quot;发起servlet请求:&#123;&#125;&quot;,req.getPathInfo());</span><br><span class="line">        PrintWriter writer = resp.getWriter();</span><br><span class="line">        writer.write(&quot;hello world!&quot;);</span><br><span class="line">        writer.flush();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Interceptor拦截器"><a href="#Interceptor拦截器" class="headerlink" title="Interceptor拦截器"></a>Interceptor拦截器</h3><blockquote><p>示例为token鉴权拦截器，拦截有@AuthToken注释的方法进行token鉴权</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.interceptor;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.fufu.annotation.AuthToken;</span><br><span class="line">import com.fufu.constant.SysConstant;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.method.HandlerMethod;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * token鉴权拦截器</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class AuthorizationInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    private final static Logger log = LoggerFactory.getLogger(AuthorizationInterceptor.class);</span><br><span class="line">    //存放鉴权信息的Header名称，默认是Authorization</span><br><span class="line">    private String httpHeaderName = &quot;token&quot;;</span><br><span class="line">    //鉴权失败后返回的错误信息，默认为401 unauthorized</span><br><span class="line">    private String unauthorizedErrorMessage = &quot;401 unauthorized&quot;;</span><br><span class="line">    //鉴权失败后返回的HTTP错误码，默认为401</span><br><span class="line">    private int unauthorizedErrorCode = HttpServletResponse.SC_UNAUTHORIZED;</span><br><span class="line">    /**</span><br><span class="line">     * 存放登录用户模型Key的Request Key</span><br><span class="line">     */</span><br><span class="line">    public static final String REQUEST_CURRENT_KEY = &quot;REQUEST_CURRENT_KEY&quot;;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123;</span><br><span class="line">        if (!(handler instanceof HandlerMethod)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        HandlerMethod handlerMethod = (HandlerMethod) handler;</span><br><span class="line">        Method method = handlerMethod.getMethod();</span><br><span class="line">        // 如果打上了AuthToken注解则需要验证token</span><br><span class="line">        if (method.getAnnotation(AuthToken.class) != null || handlerMethod.getBeanType().getAnnotation(AuthToken.class) != null) &#123;</span><br><span class="line">            String token = request.getHeader(httpHeaderName)==null?request.getParameter(httpHeaderName):request.getHeader(httpHeaderName);</span><br><span class="line">            log.info(&quot;token is &#123;&#125;&quot;, token);</span><br><span class="line">            String username = &quot;&quot;;</span><br><span class="line">            Jedis jedis = new Jedis(&quot;localhost&quot;, 6379);</span><br><span class="line">            if (token != null &amp;&amp; token.length() != 0) &#123;</span><br><span class="line">                username = jedis.get(token);</span><br><span class="line">                log.info(&quot;username is &#123;&#125;&quot;, username);</span><br><span class="line">            &#125;</span><br><span class="line">            if (username != null &amp;&amp; !username.trim().equals(&quot;&quot;)) &#123;</span><br><span class="line">                //log.info(&quot;token birth time is: &#123;&#125;&quot;,jedis.get(username+token));</span><br><span class="line">                Long tokeBirthTime = Long.valueOf(jedis.get(token + username));</span><br><span class="line">                log.info(&quot;token Birth time is: &#123;&#125;&quot;, tokeBirthTime);</span><br><span class="line">                Long diff = System.currentTimeMillis() - tokeBirthTime;</span><br><span class="line">                log.info(&quot;token is exist : &#123;&#125; ms&quot;, diff);</span><br><span class="line">                if (diff &gt; SysConstant.TOKEN_RESET_TIME) &#123;</span><br><span class="line">                    jedis.expire(username, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    jedis.expire(token, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    log.info(&quot;Reset expire time success!&quot;);</span><br><span class="line">                    Long newBirthTime = System.currentTimeMillis();</span><br><span class="line">                    jedis.set(token + username, newBirthTime.toString());</span><br><span class="line">                &#125;</span><br><span class="line">                //用完关闭</span><br><span class="line">                jedis.close();</span><br><span class="line">                request.setAttribute(REQUEST_CURRENT_KEY, username);</span><br><span class="line">                return true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                JSONObject jsonObject = new JSONObject();</span><br><span class="line">                PrintWriter out = null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    response.setStatus(unauthorizedErrorCode);</span><br><span class="line">                    response.setContentType(MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">                    jsonObject.put(&quot;ret&quot;, ((HttpServletResponse) response).getStatus());</span><br><span class="line">                    jsonObject.put(&quot;msg&quot;, HttpStatus.UNAUTHORIZED);</span><br><span class="line">                    out = response.getWriter();</span><br><span class="line">                    out.println(jsonObject);</span><br><span class="line">                    return false;</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    if (null != out) &#123;</span><br><span class="line">                        out.flush();</span><br><span class="line">                        out.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        request.setAttribute(REQUEST_CURRENT_KEY, null);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h3><p>Filter、Listener、Servlet的config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import com.fufu.filter.MyFilter;</span><br><span class="line">import com.fufu.listener.MyListener;</span><br><span class="line">import com.fufu.sevlet.MyServlet;</span><br><span class="line">import org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletListenerRegistrationBean;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class WebConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public FilterRegistrationBean myFilter()&#123;</span><br><span class="line">        FilterRegistrationBean registrationBean = new FilterRegistrationBean();</span><br><span class="line">        MyFilter filter = new MyFilter();</span><br><span class="line">        registrationBean.setFilter(filter);</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; urlPatterns = new ArrayList&lt;&gt;();</span><br><span class="line">        urlPatterns.add(&quot;/*&quot;);</span><br><span class="line">        registrationBean.setUrlPatterns(urlPatterns);</span><br><span class="line">        registrationBean.setOrder(1);</span><br><span class="line"></span><br><span class="line">        return registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ServletRegistrationBean myServlet() &#123;</span><br><span class="line">        MyServlet demoServlet = new MyServlet();</span><br><span class="line">        ServletRegistrationBean registrationBean = new ServletRegistrationBean();</span><br><span class="line">        registrationBean.setServlet(demoServlet);</span><br><span class="line">        List&lt;String&gt; urlMappings = new ArrayList&lt;String&gt;();</span><br><span class="line">        urlMappings.add(&quot;/myServlet&quot;);////访问，可以添加多个</span><br><span class="line">        registrationBean.setUrlMappings(urlMappings);</span><br><span class="line">        registrationBean.setLoadOnStartup(1);</span><br><span class="line">        return registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ServletListenerRegistrationBean myListener() &#123;</span><br><span class="line">        ServletListenerRegistrationBean registrationBean</span><br><span class="line">                = new ServletListenerRegistrationBean&lt;&gt;();</span><br><span class="line">        registrationBean.setListener(new MyListener());</span><br><span class="line">        registrationBean.setOrder(1);</span><br><span class="line">        return registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Interceptor的config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import com.fufu.interceptor.AuthorizationInterceptor;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class WebAppConfiguration implements WebMvcConfigurer &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">        String[] patterns = new String[] &#123; &quot;/loginToken&quot;,&quot;/*.html&quot;,&quot;/swagger-resources/**&quot;&#125;;</span><br><span class="line">        registry.addInterceptor(new AuthorizationInterceptor()).addPathPatterns(&quot;/**&quot;).excludePathPatterns(patterns);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）</title>
    <link href="https://qq1028951741.github.io/2018/12/06/SpringBoot%EF%BC%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBToken%E6%A0%A1%E9%AA%8C%EF%BC%88Redis%E9%89%B4%E6%9D%83%E6%88%90%E5%8A%9F%E8%87%AA%E5%8A%A8%E5%BB%B6%E9%95%BF%E6%9C%9F%E9%99%90%EF%BC%89/"/>
    <id>https://qq1028951741.github.io/2018/12/06/SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）/</id>
    <published>2018-12-06T02:43:13.000Z</published>
    <updated>2018-12-06T02:30:33.656Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）"><a href="#SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）" class="headerlink" title="SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）"></a>SpringBoot：前后端分离Token校验（Redis鉴权成功自动延长期限）</h2><h3 id="pom-xml引入jedis"><a href="#pom-xml引入jedis" class="headerlink" title="pom.xml引入jedis"></a>pom.xml引入jedis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/redis.clients/jedis --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.0&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="token鉴权拦截器"><a href="#token鉴权拦截器" class="headerlink" title="token鉴权拦截器"></a>token鉴权拦截器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.interceptor;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.fufu.annotation.AuthToken;</span><br><span class="line">import com.fufu.constant.SysConstant;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.method.HandlerMethod;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * token鉴权拦截器</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class AuthorizationInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    private final static Logger log = LoggerFactory.getLogger(AuthorizationInterceptor.class);</span><br><span class="line">    //存放鉴权信息的Header名称，默认是Authorization</span><br><span class="line">    private String httpHeaderName = &quot;token&quot;;</span><br><span class="line">    //鉴权失败后返回的错误信息，默认为401 unauthorized</span><br><span class="line">    private String unauthorizedErrorMessage = &quot;401 unauthorized&quot;;</span><br><span class="line">    //鉴权失败后返回的HTTP错误码，默认为401</span><br><span class="line">    private int unauthorizedErrorCode = HttpServletResponse.SC_UNAUTHORIZED;</span><br><span class="line">    /**</span><br><span class="line">     * 存放登录用户模型Key的Request Key</span><br><span class="line">     */</span><br><span class="line">    public static final String REQUEST_CURRENT_KEY = &quot;REQUEST_CURRENT_KEY&quot;;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123;</span><br><span class="line">        if (!(handler instanceof HandlerMethod)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        HandlerMethod handlerMethod = (HandlerMethod) handler;</span><br><span class="line">        Method method = handlerMethod.getMethod();</span><br><span class="line">        // 如果打上了AuthToken注解则需要验证token</span><br><span class="line">        if (method.getAnnotation(AuthToken.class) != null || handlerMethod.getBeanType().getAnnotation(AuthToken.class) != null) &#123;</span><br><span class="line">            String token = request.getHeader(httpHeaderName);</span><br><span class="line">            log.info(&quot;token is &#123;&#125;&quot;, token);</span><br><span class="line">            String username = &quot;&quot;;</span><br><span class="line">            Jedis jedis = new Jedis(&quot;localhost&quot;, 6379);</span><br><span class="line">            if (token != null &amp;&amp; token.length() != 0) &#123;</span><br><span class="line">                username = jedis.get(token);</span><br><span class="line">                log.info(&quot;username is &#123;&#125;&quot;, username);</span><br><span class="line">            &#125;</span><br><span class="line">            if (username != null &amp;&amp; !username.trim().equals(&quot;&quot;)) &#123;</span><br><span class="line">                //log.info(&quot;token birth time is: &#123;&#125;&quot;,jedis.get(username+token));</span><br><span class="line">                Long tokeBirthTime = Long.valueOf(jedis.get(token + username));</span><br><span class="line">                log.info(&quot;token Birth time is: &#123;&#125;&quot;, tokeBirthTime);</span><br><span class="line">                Long diff = System.currentTimeMillis() - tokeBirthTime;</span><br><span class="line">                log.info(&quot;token is exist : &#123;&#125; ms&quot;, diff);</span><br><span class="line">                if (diff &gt; SysConstant.TOKEN_RESET_TIME) &#123;</span><br><span class="line">                    jedis.expire(username, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    jedis.expire(token, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    log.info(&quot;Reset expire time success!&quot;);</span><br><span class="line">                    Long newBirthTime = System.currentTimeMillis();</span><br><span class="line">                    jedis.set(token + username, newBirthTime.toString());</span><br><span class="line">                &#125;</span><br><span class="line">                //用完关闭</span><br><span class="line">                jedis.close();</span><br><span class="line">                request.setAttribute(REQUEST_CURRENT_KEY, username);</span><br><span class="line">                return true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                JSONObject jsonObject = new JSONObject();</span><br><span class="line">                PrintWriter out = null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    response.setStatus(unauthorizedErrorCode);</span><br><span class="line">                    response.setContentType(MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">                    jsonObject.put(&quot;ret&quot;, ((HttpServletResponse) response).getStatus());</span><br><span class="line">                    jsonObject.put(&quot;msg&quot;, HttpStatus.UNAUTHORIZED);</span><br><span class="line">                    out = response.getWriter();</span><br><span class="line">                    out.println(jsonObject);</span><br><span class="line">                    return false;</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    if (null != out) &#123;</span><br><span class="line">                        out.flush();</span><br><span class="line">                        out.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        request.setAttribute(REQUEST_CURRENT_KEY, null);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="拦截器添加"><a href="#拦截器添加" class="headerlink" title="拦截器添加"></a>拦截器添加</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.interceptor;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.fufu.annotation.AuthToken;</span><br><span class="line">import com.fufu.constant.SysConstant;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.method.HandlerMethod;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * token鉴权拦截器</span><br><span class="line"> */</span><br><span class="line">@Component</span><br><span class="line">public class AuthorizationInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    private final static Logger log = LoggerFactory.getLogger(AuthorizationInterceptor.class);</span><br><span class="line">    //存放鉴权信息的Header名称，默认是Authorization</span><br><span class="line">    private String httpHeaderName = &quot;token&quot;;</span><br><span class="line">    //鉴权失败后返回的错误信息，默认为401 unauthorized</span><br><span class="line">    private String unauthorizedErrorMessage = &quot;401 unauthorized&quot;;</span><br><span class="line">    //鉴权失败后返回的HTTP错误码，默认为401</span><br><span class="line">    private int unauthorizedErrorCode = HttpServletResponse.SC_UNAUTHORIZED;</span><br><span class="line">    /**</span><br><span class="line">     * 存放登录用户模型Key的Request Key</span><br><span class="line">     */</span><br><span class="line">    public static final String REQUEST_CURRENT_KEY = &quot;REQUEST_CURRENT_KEY&quot;;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception &#123;</span><br><span class="line">        if (!(handler instanceof HandlerMethod)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        HandlerMethod handlerMethod = (HandlerMethod) handler;</span><br><span class="line">        Method method = handlerMethod.getMethod();</span><br><span class="line">        // 如果打上了AuthToken注解则需要验证token</span><br><span class="line">        if (method.getAnnotation(AuthToken.class) != null || handlerMethod.getBeanType().getAnnotation(AuthToken.class) != null) &#123;</span><br><span class="line">            String token = request.getHeader(httpHeaderName);</span><br><span class="line">            log.info(&quot;token is &#123;&#125;&quot;, token);</span><br><span class="line">            String username = &quot;&quot;;</span><br><span class="line">            Jedis jedis = new Jedis(&quot;localhost&quot;, 6379);</span><br><span class="line">            if (token != null &amp;&amp; token.length() != 0) &#123;</span><br><span class="line">                username = jedis.get(token);</span><br><span class="line">                log.info(&quot;username is &#123;&#125;&quot;, username);</span><br><span class="line">            &#125;</span><br><span class="line">            if (username != null &amp;&amp; !username.trim().equals(&quot;&quot;)) &#123;</span><br><span class="line">                //log.info(&quot;token birth time is: &#123;&#125;&quot;,jedis.get(username+token));</span><br><span class="line">                Long tokeBirthTime = Long.valueOf(jedis.get(token + username));</span><br><span class="line">                log.info(&quot;token Birth time is: &#123;&#125;&quot;, tokeBirthTime);</span><br><span class="line">                Long diff = System.currentTimeMillis() - tokeBirthTime;</span><br><span class="line">                log.info(&quot;token is exist : &#123;&#125; ms&quot;, diff);</span><br><span class="line">                if (diff &gt; SysConstant.TOKEN_RESET_TIME) &#123;</span><br><span class="line">                    jedis.expire(username, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    jedis.expire(token, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">                    log.info(&quot;Reset expire time success!&quot;);</span><br><span class="line">                    Long newBirthTime = System.currentTimeMillis();</span><br><span class="line">                    jedis.set(token + username, newBirthTime.toString());</span><br><span class="line">                &#125;</span><br><span class="line">                //用完关闭</span><br><span class="line">                jedis.close();</span><br><span class="line">                request.setAttribute(REQUEST_CURRENT_KEY, username);</span><br><span class="line">                return true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                JSONObject jsonObject = new JSONObject();</span><br><span class="line">                PrintWriter out = null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    response.setStatus(unauthorizedErrorCode);</span><br><span class="line">                    response.setContentType(MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">                    jsonObject.put(&quot;ret&quot;, ((HttpServletResponse) response).getStatus());</span><br><span class="line">                    jsonObject.put(&quot;msg&quot;, HttpStatus.UNAUTHORIZED);</span><br><span class="line">                    out = response.getWriter();</span><br><span class="line">                    out.println(jsonObject);</span><br><span class="line">                    return false;</span><br><span class="line">                &#125; catch (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; finally &#123;</span><br><span class="line">                    if (null != out) &#123;</span><br><span class="line">                        out.flush();</span><br><span class="line">                        out.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        request.setAttribute(REQUEST_CURRENT_KEY, null);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.constant;</span><br><span class="line"></span><br><span class="line">public final class SysConstant &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 设置删除标志为真</span><br><span class="line">     */</span><br><span class="line">    public static final Integer DEL_FLAG_TRUE = 1;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 设置删除标志为假</span><br><span class="line">     */</span><br><span class="line">    public static final Integer DEL_FLAG_FALSE = 0;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * redis存储token设置的过期时间</span><br><span class="line">     */</span><br><span class="line">    public static final Integer TOKEN_EXPIRE_TIME = 60 * 2;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 设置可以重置token过期时间的时间界限</span><br><span class="line">     */</span><br><span class="line">    public static final Integer TOKEN_RESET_TIME = 1000 * 100;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MD5生成token"><a href="#MD5生成token" class="headerlink" title="MD5生成token"></a>MD5生成token</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.tools;</span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public interface TokenGenerator &#123;</span><br><span class="line"></span><br><span class="line">    public String generate(String... strings);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.tools;</span><br><span class="line"></span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.util.DigestUtils;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class Md5TokenGenerator implements TokenGenerator &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String generate(String... strings) &#123;</span><br><span class="line">        long   timestamp = System.currentTimeMillis();</span><br><span class="line">        String tokenMeta = &quot;&quot;;</span><br><span class="line">        for (String s : strings) &#123;</span><br><span class="line">            tokenMeta = tokenMeta + s;</span><br><span class="line">        &#125;</span><br><span class="line">        tokenMeta = tokenMeta + timestamp;</span><br><span class="line">        String token = DigestUtils.md5DigestAsHex(tokenMeta.getBytes());</span><br><span class="line">        return token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@ApiOperation(value=&quot;token鉴权&quot;, notes=&quot;token鉴权&quot;)</span><br><span class="line">    @GetMapping(value=&quot;loginToken&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String login(String username, String password, HttpServletResponse response) &#123;</span><br><span class="line">        User user =  loginService.findByUsername(username);</span><br><span class="line">        if (user != null &amp;&amp; user.getPassword().equals(password)) &#123;</span><br><span class="line">            Jedis jedis = new Jedis(&quot;localhost&quot;, 6379);</span><br><span class="line">            String token = tokenGenerator.generate(username, password);</span><br><span class="line">            jedis.set(username, token);</span><br><span class="line">            jedis.expire(username, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">            jedis.set(token, username);</span><br><span class="line">            jedis.expire(token, SysConstant.TOKEN_EXPIRE_TIME);</span><br><span class="line">            Long currentTime = System.currentTimeMillis();</span><br><span class="line">            jedis.set(token + username, currentTime.toString());</span><br><span class="line">            //用完关闭</span><br><span class="line">            jedis.close();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;token&quot;, token).pushData();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;token校验失败&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/images/token鉴权1.png" alt="&quot;图片描述&quot;"></p><p><img src="/images/token鉴权2.png" alt="&quot;图片描述&quot;"></p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：前后端分离Token校验（JWT）</title>
    <link href="https://qq1028951741.github.io/2018/12/06/SpringBoot%EF%BC%9A%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBToken%E6%A0%A1%E9%AA%8C%EF%BC%88JWT%EF%BC%89/"/>
    <id>https://qq1028951741.github.io/2018/12/06/SpringBoot：前后端分离Token校验（JWT）/</id>
    <published>2018-12-06T02:43:13.000Z</published>
    <updated>2018-12-06T02:30:41.049Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：前后端分离Token校验（JWT）"><a href="#SpringBoot：前后端分离Token校验（JWT）" class="headerlink" title="SpringBoot：前后端分离Token校验（JWT）"></a>SpringBoot：前后端分离Token校验（JWT）</h2><blockquote><p>前言：我们这个token校验是用SpringBoot集成JWT实现token验证。Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于<code>JSON</code>的开放标准（(RFC 7519)定义了一种简洁的，自包含的方法用于通信双方之间以JSON对象的形式安全的传递信息。因为数字签名的存在，这些信息是可信的，JWT可以使用HMAC算法或者是RSA的公私秘钥对进行签名。</p></blockquote><h3 id="pom-xml引入"><a href="#pom-xml引入" class="headerlink" title="pom.xml引入"></a>pom.xml引入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- JWT --&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;com.auth0&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;java-jwt&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;3.2.0&lt;/version&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br><span class="line">       &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;jjwt&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;0.7.0&lt;/version&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="拦截器配置"><a href="#拦截器配置" class="headerlink" title="拦截器配置"></a>拦截器配置</h3><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.interceptor;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 拦截配置--调用链</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class WebAppConfigurer implements WebMvcConfigurer&#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public HandlerInterceptor getLoginInterceptor()&#123;</span><br><span class="line">        return new SysInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry)&#123;</span><br><span class="line">        String[] patterns = new String[] &#123; &quot;/loginToken&quot;,&quot;/*.html&quot;,&quot;/swagger-resources/**&quot;,&quot;/error&quot;,&quot;/static/*&quot;&#125;;</span><br><span class="line">        registry.addInterceptor(getLoginInterceptor())</span><br><span class="line">                .addPathPatterns(&quot;/**&quot;)</span><br><span class="line">                .excludePathPatterns(patterns);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry)&#123;</span><br><span class="line">        registry.addResourceHandler(&quot;/static/**&quot;)</span><br><span class="line">                .addResourceLocations(&quot;classpath:/static/&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addCorsMappings(CorsRegistry registry) &#123;</span><br><span class="line">        registry.addMapping(&quot;/**&quot;)//设置允许跨域的路径</span><br><span class="line">                .allowedOrigins(&quot;*&quot;)//设置允许跨域请求的域名</span><br><span class="line">                .allowCredentials(true)//是否允许证书 不再默认开启</span><br><span class="line">                .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;)//设置允许的方法</span><br><span class="line">                .maxAge(3600);//跨域允许时间</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.interceptor;</span><br><span class="line"></span><br><span class="line">import com.fufu.constant.SystemConstant;</span><br><span class="line">import com.fufu.entity.CheckResult;</span><br><span class="line">import com.fufu.tools.JsonUtil;</span><br><span class="line">import com.fufu.tools.JwtUtils;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.util.StringUtils;</span><br><span class="line">import org.springframework.web.method.HandlerMethod;</span><br><span class="line">import org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 拦截器 用户权限校验</span><br><span class="line"> */</span><br><span class="line">public class SysInterceptor implements HandlerInterceptor &#123;</span><br><span class="line">    </span><br><span class="line">private static final Logger logger = LoggerFactory.getLogger(SysInterceptor.class);</span><br><span class="line"></span><br><span class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)</span><br><span class="line">            throws Exception &#123;  </span><br><span class="line">    if (handler instanceof HandlerMethod)&#123;</span><br><span class="line">    String authHeader = request.getHeader(&quot;token&quot;);</span><br><span class="line">        if (StringUtils.isEmpty(authHeader)) &#123;</span><br><span class="line">          logger.info(&quot;Token不存在&quot;);</span><br><span class="line">          print(response, JsonUtil.getInstance().putData(&quot;ret&quot;, SystemConstant.JWT_ERRCODE_NULL).putData(&quot;msg&quot;, &quot;Token不存在&quot;).pushData());</span><br><span class="line">              return false;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">            //验证JWT的签名，返回CheckResult对象</span><br><span class="line">                CheckResult checkResult = JwtUtils.validateJWT(authHeader);</span><br><span class="line">                if (checkResult.isSuccess()) &#123;</span><br><span class="line">                return true;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    switch (checkResult.getErrCode()) &#123;</span><br><span class="line">                    // 签名验证不通过</span><br><span class="line">                    case SystemConstant.JWT_ERRCODE_FAIL:</span><br><span class="line">                    logger.info(&quot;签名验证不通过&quot;);</span><br><span class="line">                    print(response,JsonUtil.getInstance().putData(&quot;ret&quot;, checkResult.getErrCode()).putData(&quot;msg&quot;, &quot;Token验证不通过&quot;).pushData());</span><br><span class="line">                    break;</span><br><span class="line">                     // 签名过期，返回过期提示码</span><br><span class="line">                    case SystemConstant.JWT_ERRCODE_EXPIRE:</span><br><span class="line">                    logger.info(&quot;签名过期&quot;);</span><br><span class="line">                    print(response,JsonUtil.getInstance().putData(&quot;ret&quot;, checkResult.getErrCode()).putData(&quot;msg&quot;, &quot;Token过期&quot;).pushData());</span><br><span class="line">                    break;</span><br><span class="line">                    default:</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;  </span><br><span class="line">    public void print(HttpServletResponse response, Object message)&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">response.setStatus(HttpStatus.OK.value());</span><br><span class="line">response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);</span><br><span class="line">response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache, must-revalidate&quot;);</span><br><span class="line">PrintWriter writer = response.getWriter();</span><br><span class="line">writer.write(message.toString());</span><br><span class="line">writer.flush();</span><br><span class="line">writer.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,</span><br><span class="line">                           ModelAndView modelAndView) throws Exception &#123;</span><br><span class="line">        if(response.getStatus()==500)&#123;  </span><br><span class="line">            modelAndView.setViewName(&quot;/error/500&quot;);  </span><br><span class="line">        &#125;else if(response.getStatus()==404)&#123;  </span><br><span class="line">            modelAndView.setViewName(&quot;/error/404&quot;);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    /**  </span><br><span class="line">     * 该方法也是需要当前对应的Interceptor的preHandle方法的返回值为true时才会执行。该方法将在整个请求完成之后，也就是DispatcherServlet渲染了视图执行，  </span><br><span class="line">     * 这个方法的主要作用是用于清理资源的，当然这个方法也只能在当前这个Interceptor的preHandle方法的返回值为true时才会执行。  </span><br><span class="line">     */    </span><br><span class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span><br><span class="line">            throws Exception &#123;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.entity;</span><br><span class="line"></span><br><span class="line">import io.jsonwebtoken.Claims;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 验证信息 </span><br><span class="line"> */</span><br><span class="line">public class CheckResult &#123;</span><br><span class="line">private int errCode;</span><br><span class="line"></span><br><span class="line">private boolean success;</span><br><span class="line"></span><br><span class="line">private Claims claims;</span><br><span class="line"></span><br><span class="line">public int getErrCode() &#123;</span><br><span class="line">return errCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setErrCode(int errCode) &#123;</span><br><span class="line">this.errCode = errCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean isSuccess() &#123;</span><br><span class="line">return success;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSuccess(boolean success) &#123;</span><br><span class="line">this.success = success;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Claims getClaims() &#123;</span><br><span class="line">return claims;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setClaims(Claims claims) &#123;</span><br><span class="line">this.claims = claims;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="constant"><a href="#constant" class="headerlink" title="constant"></a>constant</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.constant;</span><br><span class="line">/**</span><br><span class="line"> * 系统级静态变量</span><br><span class="line"> */</span><br><span class="line">public class SystemConstant &#123;</span><br><span class="line">    /**</span><br><span class="line"> * token</span><br><span class="line"> */</span><br><span class="line">public static final int RESCODE_REFTOKEN_MSG = 1006;//刷新TOKEN(有返回数据)</span><br><span class="line">public static final int RESCODE_REFTOKEN = 1007;//刷新TOKEN</span><br><span class="line"></span><br><span class="line">public static final int JWT_ERRCODE_NULL = 4000;//Token不存在</span><br><span class="line">public static final int JWT_ERRCODE_EXPIRE = 4001;//Token过期</span><br><span class="line">public static final int JWT_ERRCODE_FAIL = 4002;//验证不通过</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * JWT</span><br><span class="line"> */</span><br><span class="line">public static final String JWT_SECERT = &quot;8677df7fc3a34e26a61c034d5ec8245d&quot;;//密匙</span><br><span class="line">public static final long JWT_TTL = 60 * 60 * 1000;//token有效时间</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="tools"><a href="#tools" class="headerlink" title="tools"></a>tools</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.tools;</span><br><span class="line"></span><br><span class="line">import com.fufu.constant.SystemConstant;</span><br><span class="line">import com.fufu.entity.CheckResult;</span><br><span class="line">import io.jsonwebtoken.*;</span><br><span class="line">import org.bouncycastle.util.encoders.Base64;</span><br><span class="line">import javax.crypto.SecretKey;</span><br><span class="line">import javax.crypto.spec.SecretKeySpec;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * jwt加密和解密的工具类 </span><br><span class="line"> */</span><br><span class="line">public class JwtUtils &#123;</span><br><span class="line">/**</span><br><span class="line"> * 签发JWT</span><br><span class="line"> */</span><br><span class="line">public static String createJWT(String id, String subject, long ttlMillis) &#123;</span><br><span class="line">SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;</span><br><span class="line">long nowMillis = System.currentTimeMillis();</span><br><span class="line">Date now = new Date(nowMillis);</span><br><span class="line">SecretKey secretKey = generalKey();</span><br><span class="line">JwtBuilder builder = Jwts.builder()</span><br><span class="line">.setId(id)</span><br><span class="line">.setSubject(subject)   // 主题</span><br><span class="line">.setIssuer(&quot;fufu&quot;)     // 签发者</span><br><span class="line">.setIssuedAt(now)      // 签发时间</span><br><span class="line">.signWith(signatureAlgorithm, secretKey); // 签名算法以及密匙</span><br><span class="line">if (ttlMillis &gt;= 0) &#123;</span><br><span class="line">long expMillis = nowMillis + ttlMillis;</span><br><span class="line">Date expDate = new Date(expMillis);</span><br><span class="line">builder.setExpiration(expDate); // 过期时间</span><br><span class="line">&#125;</span><br><span class="line">return builder.compact();</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 验证JWT</span><br><span class="line"> */</span><br><span class="line">public static CheckResult validateJWT(String jwtStr) &#123;</span><br><span class="line">CheckResult checkResult = new CheckResult();</span><br><span class="line">Claims claims = null;</span><br><span class="line">try &#123;</span><br><span class="line">claims = parseJWT(jwtStr);</span><br><span class="line">checkResult.setSuccess(true);</span><br><span class="line">checkResult.setClaims(claims);</span><br><span class="line">&#125; catch (ExpiredJwtException e) &#123;</span><br><span class="line">checkResult.setErrCode(SystemConstant.JWT_ERRCODE_EXPIRE);</span><br><span class="line">checkResult.setSuccess(false);</span><br><span class="line">&#125; catch (SignatureException e) &#123;</span><br><span class="line">checkResult.setErrCode(SystemConstant.JWT_ERRCODE_FAIL);</span><br><span class="line">checkResult.setSuccess(false);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">checkResult.setErrCode(SystemConstant.JWT_ERRCODE_FAIL);</span><br><span class="line">checkResult.setSuccess(false);</span><br><span class="line">&#125;</span><br><span class="line">return checkResult;</span><br><span class="line">&#125;</span><br><span class="line">public static SecretKey generalKey() &#123;</span><br><span class="line">byte[] encodedKey = Base64.decode(SystemConstant.JWT_SECERT);</span><br><span class="line">    SecretKey key = new SecretKeySpec(encodedKey, 0, encodedKey.length, &quot;AES&quot;);</span><br><span class="line">    return key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 解析JWT字符串</span><br><span class="line"> */</span><br><span class="line">public static Claims parseJWT(String jwt) throws Exception &#123;</span><br><span class="line">SecretKey secretKey = generalKey();</span><br><span class="line">return Jwts.parser()</span><br><span class="line">.setSigningKey(secretKey)</span><br><span class="line">.parseClaimsJws(jwt)</span><br><span class="line">.getBody();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value=&quot;loginToken&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String login(String username, String password, HttpServletResponse response) &#123;</span><br><span class="line">        User user =  loginService.findByUsername(username);</span><br><span class="line">        if(user!=null)&#123;</span><br><span class="line">            if(user.getPassword().equals(password))&#123;</span><br><span class="line">                //把token返回给客户端--&gt;客户端保存至cookie--&gt;客户端每次请求附带cookie参数</span><br><span class="line">                String JWT = JwtUtils.createJWT(&quot;1&quot;, username, SystemConstant.JWT_TTL);</span><br><span class="line">                return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;token&quot;, JWT).pushData();</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;token校验失败&quot;).pushData();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;token校验失败&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ul><li>新增loginToken接口</li><li>把token返回给客户端</li><li>客户端保存至cookie</li><li>客户端每次请求附带cookie参数通过拦截器进行校验</li></ul><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：文件上传接收&amp;&amp;http图片获取</title>
    <link href="https://qq1028951741.github.io/2018/11/29/SpringBoot%EF%BC%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%8E%A5%E6%94%B6&amp;&amp;http%E5%9B%BE%E7%89%87%E8%8E%B7%E5%8F%96/"/>
    <id>https://qq1028951741.github.io/2018/11/29/SpringBoot：文件上传接收&amp;&amp;http图片获取/</id>
    <published>2018-11-29T02:43:13.000Z</published>
    <updated>2018-12-03T07:06:12.804Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：文件上传接收-amp-amp-http图片获取"><a href="#SpringBoot：文件上传接收-amp-amp-http图片获取" class="headerlink" title="SpringBoot：文件上传接收&amp;&amp;http图片获取"></a>SpringBoot：文件上传接收&amp;&amp;http图片获取</h2><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upload:</span><br><span class="line">  filePath: D:/test/</span><br><span class="line">serviceIP: 127.0.0.1</span><br><span class="line">servicePort: 8090</span><br><span class="line">rootPath: D:\</span><br></pre></td></tr></table></figure><h3 id="FileController"><a href="#FileController" class="headerlink" title="FileController"></a>FileController</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.controller;</span><br><span class="line"></span><br><span class="line">import com.fufu.service.FileService;</span><br><span class="line">import com.fufu.tools.FileTypeUtil;</span><br><span class="line">import com.fufu.tools.HttpClient;</span><br><span class="line">import com.fufu.tools.UrlUtil;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.util.Base64Utils;</span><br><span class="line">import org.springframework.util.FileCopyUtils;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.Part;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/test1&quot;)</span><br><span class="line">public class FileController &#123;</span><br><span class="line">    private static final Logger log = LoggerFactory.getLogger(FileController.class);</span><br><span class="line">    @Value(&quot;$&#123;upload.filePath&#125;&quot;)</span><br><span class="line">    private String filePath;</span><br><span class="line">    @Value(&quot;$&#123;serviceIP&#125;&quot;)</span><br><span class="line">    private String serviceIP;</span><br><span class="line">    @Value(&quot;$&#123;servicePort&#125;&quot;)</span><br><span class="line">    private String servicePort;</span><br><span class="line">    @Value(&quot;$&#123;rootPath&#125;&quot;)</span><br><span class="line">    private String rootPath;</span><br><span class="line">    @Autowired FileService fileService;</span><br><span class="line">    //接收单个file</span><br><span class="line">    @PostMapping(&quot;/test/upload1&quot;)</span><br><span class="line">    public Map&lt;String, String&gt; upload1(@RequestParam(&quot;file&quot;) MultipartFile file) throws IOException &#123;</span><br><span class="line">        log.info(&quot;[文件类型] - [&#123;&#125;]&quot;, file.getContentType());</span><br><span class="line">        log.info(&quot;[文件名称] - [&#123;&#125;]&quot;, file.getOriginalFilename());</span><br><span class="line">        log.info(&quot;[文件大小] - [&#123;&#125;]&quot;, file.getSize());</span><br><span class="line">        try &#123;</span><br><span class="line">            file.transferTo(new File(filePath + file.getOriginalFilename()));</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String, String&gt; result = new HashMap&lt;&gt;(16);</span><br><span class="line">        result.put(&quot;contentType&quot;, file.getContentType());</span><br><span class="line">        result.put(&quot;fileName&quot;, file.getOriginalFilename());</span><br><span class="line">        result.put(&quot;fileSize&quot;, file.getSize() + &quot;&quot;);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //接收多个file</span><br><span class="line">    @PostMapping(&quot;/test/upload2&quot;)</span><br><span class="line">    public List&lt;Map&lt;String, String&gt;&gt; upload2(@RequestParam(&quot;file&quot;) MultipartFile[] files) throws IOException &#123;</span><br><span class="line">        if (files == null || files.length == 0) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Map&lt;String, String&gt;&gt; results = new ArrayList&lt;&gt;();</span><br><span class="line">        for (MultipartFile file : files) &#123;</span><br><span class="line">            file.transferTo(new File(filePath + file.getOriginalFilename()));</span><br><span class="line">            Map&lt;String, String&gt; map = new HashMap&lt;&gt;(16);</span><br><span class="line">            map.put(&quot;contentType&quot;, file.getContentType());</span><br><span class="line">            map.put(&quot;fileName&quot;, file.getOriginalFilename());</span><br><span class="line">            map.put(&quot;fileSize&quot;, file.getSize() + &quot;&quot;);</span><br><span class="line">            results.add(map);</span><br><span class="line">        &#125;</span><br><span class="line">        return results;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //接收base64图片字符串</span><br><span class="line">    @RequestMapping(&quot;/test/upload3&quot;)</span><br><span class="line">    public void upload2(String base64) throws IOException &#123;</span><br><span class="line">        final File tempFile = new File(filePath+&quot;upload3.jpg&quot;);</span><br><span class="line">        //防止有的没传 data:image/jpeg;base64, 的情况</span><br><span class="line">        String[] d = base64.split(&quot;base64,&quot;);</span><br><span class="line">        final byte[] bytes = Base64Utils.decodeFromString(d.length &gt; 1 ? d[1] : d[0]);</span><br><span class="line">        FileCopyUtils.copy(bytes, tempFile);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //根据http协议下载图片</span><br><span class="line">    @RequestMapping(&quot;/test/upload4&quot;)</span><br><span class="line">    public String downloadFileByURL(String urlStr) throws IOException &#123;</span><br><span class="line">        URL url = new URL(UrlUtil.toUtf8String(urlStr));</span><br><span class="line">        String picPath = filePath+&quot;upload4.jpg&quot;;</span><br><span class="line">        File file = new File(picPath);</span><br><span class="line">        // 打开链接</span><br><span class="line">        HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line">        // 设置请求方式为&quot;GET&quot;</span><br><span class="line">        conn.setRequestMethod(&quot;GET&quot;);</span><br><span class="line">        // 超时响应时间为5秒</span><br><span class="line">        conn.setConnectTimeout(5 * 1000);</span><br><span class="line">        conn.setRequestProperty(&quot;Connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class="line">        conn.setRequestProperty(&quot;Content-Type&quot;, &quot;text/xml;charset=UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">        // 通过输入流获取图片数据</span><br><span class="line">        InputStream inStream = conn.getInputStream();</span><br><span class="line">        ByteArrayOutputStream outStream = new ByteArrayOutputStream();</span><br><span class="line">        // 创建一个Buffer字符串</span><br><span class="line">        byte[] buffer = new byte[1024];</span><br><span class="line">        // 每次读取的字符串长度，如果为-1，代表全部读取完毕</span><br><span class="line">        int len = 0;</span><br><span class="line">        // 使用一个输入流从buffer里把数据读取出来</span><br><span class="line">        while ((len = inStream.read(buffer)) != -1) &#123;</span><br><span class="line">            // 用输出流往buffer里写入数据，中间参数代表从哪个位置开始读，len代表读取的长度</span><br><span class="line">            outStream.write(buffer, 0, len);</span><br><span class="line">        &#125;</span><br><span class="line">        // 关闭输入流</span><br><span class="line">        inStream.close();</span><br><span class="line">        // 创建输出流</span><br><span class="line">        FileOutputStream outStream2 = new FileOutputStream(file);</span><br><span class="line">        // 写入数据</span><br><span class="line">        outStream2.write(outStream.toByteArray());</span><br><span class="line">        // 关闭输出流</span><br><span class="line">        outStream2.close();</span><br><span class="line"></span><br><span class="line">        return picPath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //实现从本地取图片上传到对应服务器上</span><br><span class="line">    @GetMapping(value=&quot;/uploadLocalFile&quot;)</span><br><span class="line">    public void uploadLocalFile()&#123;</span><br><span class="line">        String relativePath = &quot;test/haha.jpg&quot;;</span><br><span class="line">        String picUrl = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            picUrl = HttpClient.getInstance().uploadFileImpl(&quot;http://&quot;+serviceIP+&quot;:&quot;+servicePort+&quot;/test1/uploadFile&quot;, rootPath + relativePath, &quot;aTestFileName&quot;, null);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;-----picUrl:&quot;+picUrl+&quot;-----&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 单个文件上传</span><br><span class="line">     * @param file</span><br><span class="line">     * @param folder 文件夹根据上传文件type自动生成</span><br><span class="line">     * @param id</span><br><span class="line">     * @param request</span><br><span class="line">     * @return</span><br><span class="line">     * @throws ServletException</span><br><span class="line">     * @throws IOException</span><br><span class="line">     */</span><br><span class="line">    @ApiOperation(value = &quot;单个文件上传&quot;, notes= &quot;根据type值将所上传图片分文件夹存放，如type=我是一个莫得感情的文件夹，文件路径将为“/我是一个莫得感情的文件夹/20181111/110.jpg”&quot;)</span><br><span class="line">    @PostMapping(value=&quot;/uploadFile&quot;)</span><br><span class="line">    public @ResponseBody String uploadFile( MultipartFile file, @RequestParam(defaultValue = &quot;Common&quot;) String type, HttpServletRequest request) throws IOException, ServletException &#123;</span><br><span class="line">        SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyyMMdd&quot;);</span><br><span class="line">        String relativePath = null;</span><br><span class="line">        String finalName = null;</span><br><span class="line">        if(file != null) &#123;</span><br><span class="line">            String fileName = file.getOriginalFilename();</span><br><span class="line">            //获取文件后缀名</span><br><span class="line">            String ext= FileTypeUtil.getFileSuffix(fileName);</span><br><span class="line">            if(!&quot;jpg&quot;.equalsIgnoreCase(ext)&amp;&amp; !&quot;png&quot;.equalsIgnoreCase(ext)&amp;&amp; !&quot;bmp&quot;.equalsIgnoreCase(ext) &amp;&amp; !&quot;jpeg&quot;.equalsIgnoreCase(ext))</span><br><span class="line">                return &quot;上传的图片文件格式不正确&quot;;</span><br><span class="line">            relativePath = type + &quot;/&quot; + sf.format(new Date()) +&quot;/&quot;;</span><br><span class="line">            String finalPath = filePath + relativePath;</span><br><span class="line">            try &#123;</span><br><span class="line">                finalName = new Random().nextInt(999999) + &quot;.&quot;+ ext;</span><br><span class="line">                String fullPath = fileService.uploadFile(file.getBytes(), finalPath, finalName);</span><br><span class="line">                if(fullPath.isEmpty()) &#123;</span><br><span class="line">                    return null;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                return &quot;uploadimg failure: &quot; + e.getMessage();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            Collection&lt;Part&gt; parts = request.getParts();</span><br><span class="line">            for (Iterator&lt;Part&gt; iterator = parts.iterator(); iterator.hasNext();) &#123;</span><br><span class="line">                Part part = iterator.next();</span><br><span class="line">                finalName = part.getSubmittedFileName();</span><br><span class="line">                relativePath = part.getName() + &quot;/&quot; + sf.format(new Date()) + &quot;/&quot;;</span><br><span class="line">                String finalPath = filePath + relativePath;</span><br><span class="line">                fileService.uploadFile(part.getInputStream(), finalPath, finalName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return relativePath + finalName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HttpClient"><a href="#HttpClient" class="headerlink" title="HttpClient"></a>HttpClient</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.tools;</span><br><span class="line"></span><br><span class="line">import org.apache.http.HttpEntity;</span><br><span class="line">import org.apache.http.NameValuePair;</span><br><span class="line">import org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line">import org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line">import org.apache.http.client.methods.HttpGet;</span><br><span class="line">import org.apache.http.client.methods.HttpPost;</span><br><span class="line">import org.apache.http.entity.ContentType;</span><br><span class="line">import org.apache.http.entity.mime.MultipartEntityBuilder;</span><br><span class="line">import org.apache.http.entity.mime.content.FileBody;</span><br><span class="line">import org.apache.http.entity.mime.content.StringBody;</span><br><span class="line">import org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line">import org.apache.http.impl.client.HttpClients;</span><br><span class="line">import org.apache.http.message.BasicNameValuePair;</span><br><span class="line">import org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.Set;</span><br><span class="line">import java.util.concurrent.ExecutorService;</span><br><span class="line">import java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * HttpClient</span><br><span class="line"> */</span><br><span class="line">public class HttpClient &#123;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 最大线程池</span><br><span class="line"> */</span><br><span class="line">public static final int THREAD_POOL_SIZE = 5;</span><br><span class="line"> </span><br><span class="line">public interface HttpClientDownLoadProgress &#123;</span><br><span class="line">public void onProgress(int progress);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">private static HttpClient httpClientDownload;</span><br><span class="line"> </span><br><span class="line">private ExecutorService downloadExcutorService;</span><br><span class="line"> </span><br><span class="line">private HttpClient() &#123;</span><br><span class="line">downloadExcutorService = Executors.newFixedThreadPool(THREAD_POOL_SIZE);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public static HttpClient getInstance() &#123;</span><br><span class="line">if (httpClientDownload == null) &#123;</span><br><span class="line">httpClientDownload = new HttpClient();</span><br><span class="line">&#125;</span><br><span class="line">return httpClientDownload;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 下载文件</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @param filePath</span><br><span class="line"> */</span><br><span class="line">public void download(final String url, final String filePath) &#123;</span><br><span class="line">downloadExcutorService.execute(new Runnable() &#123;</span><br><span class="line"> </span><br><span class="line">@Override</span><br><span class="line">public void run() &#123;</span><br><span class="line">httpDownloadFile(url, filePath, null, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 下载文件</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @param filePath</span><br><span class="line"> * @param progress</span><br><span class="line"> *            进度回调</span><br><span class="line"> */</span><br><span class="line">public void download(final String url, final String filePath,</span><br><span class="line">                         final HttpClientDownLoadProgress progress) &#123;</span><br><span class="line">downloadExcutorService.execute(new Runnable() &#123;</span><br><span class="line"> </span><br><span class="line">@Override</span><br><span class="line">public void run() &#123;</span><br><span class="line">httpDownloadFile(url, filePath, progress, null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 下载文件</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @param filePath</span><br><span class="line"> */</span><br><span class="line">private void httpDownloadFile(String url, String filePath,</span><br><span class="line">                                  HttpClientDownLoadProgress progress, Map&lt;String, String&gt; headMap) &#123;</span><br><span class="line">CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">try &#123;</span><br><span class="line">HttpGet httpGet = new HttpGet(url);</span><br><span class="line">setGetHead(httpGet, headMap);</span><br><span class="line">CloseableHttpResponse response1 = httpclient.execute(httpGet);</span><br><span class="line">try &#123;</span><br><span class="line">System.out.println(response1.getStatusLine());</span><br><span class="line">HttpEntity httpEntity = response1.getEntity();</span><br><span class="line">long contentLength = httpEntity.getContentLength();</span><br><span class="line">InputStream is = httpEntity.getContent();</span><br><span class="line">// 根据InputStream 下载文件</span><br><span class="line">ByteArrayOutputStream output = new ByteArrayOutputStream();</span><br><span class="line">byte[] buffer = new byte[4096];</span><br><span class="line">int r = 0;</span><br><span class="line">long totalRead = 0;</span><br><span class="line">while ((r = is.read(buffer)) &gt; 0) &#123;</span><br><span class="line">output.write(buffer, 0, r);</span><br><span class="line">totalRead += r;</span><br><span class="line">if (progress != null) &#123;// 回调进度</span><br><span class="line">progress.onProgress((int) (totalRead * 100 / contentLength));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">FileOutputStream fos = new FileOutputStream(filePath);</span><br><span class="line">output.writeTo(fos);</span><br><span class="line">output.flush();</span><br><span class="line">output.close();</span><br><span class="line">fos.close();</span><br><span class="line">EntityUtils.consume(httpEntity);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">response1.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">try &#123;</span><br><span class="line">httpclient.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * get请求</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public String httpGet(String url) &#123;</span><br><span class="line">return httpGet(url, null);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * http get请求</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public String httpGet(String url, Map&lt;String, String&gt; headMap) &#123;</span><br><span class="line">String responseContent = null;</span><br><span class="line">CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">try &#123;</span><br><span class="line">HttpGet httpGet = new HttpGet(url);</span><br><span class="line">CloseableHttpResponse response1 = httpclient.execute(httpGet);</span><br><span class="line">setGetHead(httpGet, headMap);</span><br><span class="line">try &#123;</span><br><span class="line">System.out.println(response1.getStatusLine());</span><br><span class="line">HttpEntity entity = response1.getEntity();</span><br><span class="line">responseContent = getRespString(entity);</span><br><span class="line">System.out.println(&quot;debug:&quot; + responseContent);</span><br><span class="line">EntityUtils.consume(entity);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">response1.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">try &#123;</span><br><span class="line">httpclient.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return responseContent;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">public String httpPost(String url, Map&lt;String, String&gt; paramsMap) &#123;</span><br><span class="line">return httpPost(url, paramsMap, null);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * http的post请求</span><br><span class="line"> * </span><br><span class="line"> * @param url</span><br><span class="line"> * @param paramsMap</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public String httpPost(String url, Map&lt;String, String&gt; paramsMap,</span><br><span class="line">                           Map&lt;String, String&gt; headMap) &#123;</span><br><span class="line">String responseContent = null;</span><br><span class="line">CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">try &#123;</span><br><span class="line">HttpPost httpPost = new HttpPost(url);</span><br><span class="line">setPostHead(httpPost, headMap);</span><br><span class="line">setPostParams(httpPost, paramsMap);</span><br><span class="line">CloseableHttpResponse response = httpclient.execute(httpPost);</span><br><span class="line">try &#123;</span><br><span class="line">System.out.println(response.getStatusLine());</span><br><span class="line">HttpEntity entity = response.getEntity();</span><br><span class="line">responseContent = getRespString(entity);</span><br><span class="line">EntityUtils.consume(entity);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">response.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">try &#123;</span><br><span class="line">httpclient.close();</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;responseContent = &quot; + responseContent);</span><br><span class="line">return responseContent;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 设置POST的参数</span><br><span class="line"> * </span><br><span class="line"> * @param httpPost</span><br><span class="line"> * @param paramsMap</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">private void setPostParams(HttpPost httpPost, Map&lt;String, String&gt; paramsMap)</span><br><span class="line">throws Exception &#123;</span><br><span class="line">if (paramsMap != null &amp;&amp; paramsMap.size() &gt; 0) &#123;</span><br><span class="line">List&lt;NameValuePair&gt; nvps = new ArrayList&lt;NameValuePair&gt;();</span><br><span class="line">Set&lt;String&gt; keySet = paramsMap.keySet();</span><br><span class="line">for (String key : keySet) &#123;</span><br><span class="line">nvps.add(new BasicNameValuePair(key, paramsMap.get(key)));</span><br><span class="line">&#125;</span><br><span class="line">httpPost.setEntity(new UrlEncodedFormEntity(nvps));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 设置http的HEAD</span><br><span class="line"> * </span><br><span class="line"> * @param httpPost</span><br><span class="line"> * @param headMap</span><br><span class="line"> */</span><br><span class="line">private void setPostHead(HttpPost httpPost, Map&lt;String, String&gt; headMap) &#123;</span><br><span class="line">if (headMap != null &amp;&amp; headMap.size() &gt; 0) &#123;</span><br><span class="line">Set&lt;String&gt; keySet = headMap.keySet();</span><br><span class="line">for (String key : keySet) &#123;</span><br><span class="line">httpPost.addHeader(key, headMap.get(key));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 设置http的HEAD</span><br><span class="line"> * </span><br><span class="line"> * @param httpGet</span><br><span class="line"> * @param headMap</span><br><span class="line"> */</span><br><span class="line">private void setGetHead(HttpGet httpGet, Map&lt;String, String&gt; headMap) &#123;</span><br><span class="line">if (headMap != null &amp;&amp; headMap.size() &gt; 0) &#123;</span><br><span class="line">Set&lt;String&gt; keySet = headMap.keySet();</span><br><span class="line">for (String key : keySet) &#123;</span><br><span class="line">httpGet.addHeader(key, headMap.get(key));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 上传文件</span><br><span class="line"> * </span><br><span class="line"> * @param serverUrl</span><br><span class="line"> *            服务器地址</span><br><span class="line"> * @param localFilePath</span><br><span class="line"> *            本地文件路径</span><br><span class="line"> * @param serverFieldName</span><br><span class="line"> * @param params</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">public String uploadFileImpl(String serverUrl, String localFilePath,</span><br><span class="line">                                 String serverFieldName, Map&lt;String, String&gt; params)</span><br><span class="line">throws Exception &#123;</span><br><span class="line">String respStr = null;</span><br><span class="line">CloseableHttpClient httpclient = HttpClients.createDefault();</span><br><span class="line">try &#123;</span><br><span class="line">HttpPost httppost = new HttpPost(serverUrl);</span><br><span class="line">FileBody binFileBody = new FileBody(new File(localFilePath));</span><br><span class="line"> </span><br><span class="line">MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder</span><br><span class="line">.create();</span><br><span class="line">// add the file params</span><br><span class="line">multipartEntityBuilder.addPart(serverFieldName, binFileBody);</span><br><span class="line">// 设置上传的其他参数</span><br><span class="line">setUploadParams(multipartEntityBuilder, params);</span><br><span class="line"> </span><br><span class="line">HttpEntity reqEntity = multipartEntityBuilder.build();</span><br><span class="line">httppost.setEntity(reqEntity);</span><br><span class="line"> </span><br><span class="line">CloseableHttpResponse response = httpclient.execute(httppost);</span><br><span class="line">try &#123;</span><br><span class="line">System.out.println(response.getStatusLine());</span><br><span class="line">HttpEntity resEntity = response.getEntity();</span><br><span class="line">respStr = getRespString(resEntity);</span><br><span class="line">EntityUtils.consume(resEntity);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">response.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">httpclient.close();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;resp=&quot; + respStr);</span><br><span class="line">return respStr;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 设置上传文件时所附带的其他参数</span><br><span class="line"> * </span><br><span class="line"> * @param multipartEntityBuilder</span><br><span class="line"> * @param params</span><br><span class="line"> */</span><br><span class="line">private void setUploadParams(MultipartEntityBuilder multipartEntityBuilder,</span><br><span class="line">Map&lt;String, String&gt; params) &#123;</span><br><span class="line">if (params != null &amp;&amp; params.size() &gt; 0) &#123;</span><br><span class="line">Set&lt;String&gt; keys = params.keySet();</span><br><span class="line">for (String key : keys) &#123;</span><br><span class="line">multipartEntityBuilder</span><br><span class="line">.addPart(key, new StringBody(params.get(key),</span><br><span class="line">ContentType.TEXT_PLAIN));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * 将返回结果转化为String</span><br><span class="line"> * </span><br><span class="line"> * @param entity</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">private String getRespString(HttpEntity entity) throws Exception &#123;</span><br><span class="line">if (entity == null) &#123;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line">InputStream is = entity.getContent();</span><br><span class="line">StringBuffer strBuf = new StringBuffer();</span><br><span class="line">byte[] buffer = new byte[4096];</span><br><span class="line">int r = 0;</span><br><span class="line">while ((r = is.read(buffer)) &gt; 0) &#123;</span><br><span class="line">strBuf.append(new String(buffer, 0, r, &quot;UTF-8&quot;));</span><br><span class="line">&#125;</span><br><span class="line">return strBuf.toString();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FileService"><a href="#FileService" class="headerlink" title="FileService"></a>FileService</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.service;</span><br><span class="line"></span><br><span class="line">import com.fufu.tools.UrlUtil;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import java.io.*;</span><br><span class="line">import java.net.HttpURLConnection;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class FileService &#123;</span><br><span class="line"></span><br><span class="line">@Value(&quot;$&#123;upload.filePath&#125;&quot;)</span><br><span class="line">private String filePath;</span><br><span class="line"></span><br><span class="line">public String uploadFile(byte[] file, String finalPath, String finalName)&#123;</span><br><span class="line">        File targetFile = new File(finalPath);</span><br><span class="line">        if(!targetFile.exists())&#123;    </span><br><span class="line">            targetFile.mkdirs();    </span><br><span class="line">        &#125;       </span><br><span class="line">        FileOutputStream out;</span><br><span class="line">try &#123;</span><br><span class="line">out = new FileOutputStream(finalPath+finalName);</span><br><span class="line"></span><br><span class="line">out.write(file);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">        </span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">return &quot;uploadimg failure: &quot; + e.getMessage();</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">System.out.println(finalPath + finalName);</span><br><span class="line">return finalPath + finalName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public void uploadFile(InputStream in, String finalPath,</span><br><span class="line">                           String finalName) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">File targetFile = new File(finalPath);</span><br><span class="line">        if(!targetFile.exists())&#123;    </span><br><span class="line">            targetFile.mkdirs();    </span><br><span class="line">        &#125;  </span><br><span class="line">    //创建一个文件输出流</span><br><span class="line">    FileOutputStream out = new FileOutputStream(finalPath + finalName);</span><br><span class="line">    //创建一个缓冲区</span><br><span class="line">        byte buffer[] = new byte[1024];</span><br><span class="line">        //判断输入流中的数据是否已经读完的标识</span><br><span class="line">          int len = 0;</span><br><span class="line">          //循环将输入流读入到缓冲区当中，(len=in.read(buffer))&gt;0就表示in里面还有数据</span><br><span class="line">          while((len=in.read(buffer))&gt;0)&#123;</span><br><span class="line">              //使用FileOutputStream输出流将缓冲区的数据写入到指定的目录(savePath + &quot;\\&quot; + filename)当中</span><br><span class="line">              out.write(buffer, 0, len);</span><br><span class="line">          &#125;</span><br><span class="line">        in.close();</span><br><span class="line">        //关闭输出流</span><br><span class="line">        out.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String uploadFileByURL(String folder, String urlStr) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sf = new SimpleDateFormat(&quot;yyyyMMdd&quot;);</span><br><span class="line">String suffix = HttpURLConnection.guessContentTypeFromName(urlStr).split(&quot;/&quot;)[1];</span><br><span class="line">String fileName = UUID.randomUUID()+&quot;.&quot;+suffix;</span><br><span class="line">String relativePath = folder +&quot;/&quot; + sf.format(new Date()) +&quot;/&quot;;</span><br><span class="line">String absolutePath=filePath.replace(&quot;\\&quot;, &quot;/&quot;) + relativePath;</span><br><span class="line"></span><br><span class="line">File targetFile = new File(absolutePath);</span><br><span class="line">if(!targetFile.exists())&#123;    </span><br><span class="line">            targetFile.mkdirs();    </span><br><span class="line">        &#125; </span><br><span class="line">URL url = new URL(UrlUtil.toUtf8String(urlStr));</span><br><span class="line"></span><br><span class="line">File file = new File(absolutePath+fileName);</span><br><span class="line"></span><br><span class="line"> // 打开链接</span><br><span class="line">        HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line">        // 设置请求方式为&quot;GET&quot;</span><br><span class="line">        conn.setRequestMethod(&quot;GET&quot;);</span><br><span class="line">        // 超时响应时间为5秒</span><br><span class="line">        conn.setConnectTimeout(5 * 1000);</span><br><span class="line">        conn.setRequestProperty(&quot;Connection&quot;, &quot;Keep-Alive&quot;);</span><br><span class="line">        conn.setRequestProperty(&quot;Content-Type&quot;, &quot;text/xml;charset=UTF-8&quot;);</span><br><span class="line">        conn.setRequestProperty(&quot;User-Agent&quot;, &quot;Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)&quot;); </span><br><span class="line">        </span><br><span class="line">        // 通过输入流获取图片数据</span><br><span class="line">        InputStream inStream = conn.getInputStream();</span><br><span class="line">        System.out.println(HttpURLConnection.guessContentTypeFromStream(inStream));</span><br><span class="line">        ByteArrayOutputStream outStream = new ByteArrayOutputStream();</span><br><span class="line">        // 创建一个Buffer字符串</span><br><span class="line">        byte[] buffer = new byte[1024];</span><br><span class="line">        // 每次读取的字符串长度，如果为-1，代表全部读取完毕</span><br><span class="line">        int len = 0;</span><br><span class="line">        // 使用一个输入流从buffer里把数据读取出来</span><br><span class="line">        while ((len = inStream.read(buffer)) != -1) &#123;</span><br><span class="line">            // 用输出流往buffer里写入数据，中间参数代表从哪个位置开始读，len代表读取的长度</span><br><span class="line">            outStream.write(buffer, 0, len);</span><br><span class="line">        &#125;</span><br><span class="line">        // 关闭输入流</span><br><span class="line">        inStream.close();</span><br><span class="line">        // 创建输出流</span><br><span class="line">        FileOutputStream outStream2 = new FileOutputStream(file);</span><br><span class="line">        // 写入数据</span><br><span class="line">        outStream2.write(outStream.toByteArray());</span><br><span class="line">        // 关闭输出流</span><br><span class="line">        outStream2.close();</span><br><span class="line">        </span><br><span class="line">        return relativePath+fileName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>简单的文件上传下载示例，具体代码可以下载github下来看看</code></p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/images/springboot文件接收.jpg" alt="&quot;图片描述&quot;"></p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-blog域名解析</title>
    <link href="https://qq1028951741.github.io/2018/11/28/Hexo-blog%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    <id>https://qq1028951741.github.io/2018/11/28/Hexo-blog域名解析/</id>
    <published>2018-11-28T02:18:13.000Z</published>
    <updated>2018-11-28T01:44:55.595Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="Hexo-blog域名解析"><a href="#Hexo-blog域名解析" class="headerlink" title="Hexo-blog域名解析"></a>Hexo-blog域名解析</h2><h3 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h3><p>我这边是在腾讯云买的</p><p><img src="/images/域名设置1.jpg" alt="&quot;图片描述&quot;"></p><h3 id="实名认证"><a href="#实名认证" class="headerlink" title="实名认证"></a>实名认证</h3><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p><img src="/images/域名设置2.jpg" alt="&quot;图片描述&quot;"></p><blockquote><p>一般wwww CNAME对应hexo-blog项目github登录地址</p></blockquote><blockquote><p>@ A则对应github提供的两个ip地址 <code>192.30.252.154</code> 和 <code>192.30.252.153</code> </p></blockquote><h3 id="hexo项目"><a href="#hexo项目" class="headerlink" title="hexo项目"></a>hexo项目</h3><ul><li><p>根目录下source下添加CNAME文件（无后缀）内容为你申请的域名</p></li><li><p>然后部署到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo三部曲:</span><br><span class="line">    hexo clean </span><br><span class="line">    hexo generate</span><br><span class="line">    hexo deploy</span><br></pre></td></tr></table></figure></li></ul><h3 id="接下来就可以用买来的域名试试了，ENDing"><a href="#接下来就可以用买来的域名试试了，ENDing" class="headerlink" title="接下来就可以用买来的域名试试了，ENDing"></a>接下来就可以用买来的域名试试了，ENDing</h3><p><img src="/images/域名解析1.jpg" alt="&quot;图片描述&quot;"></p><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="hexo-blog" scheme="https://qq1028951741.github.io/categories/hexo-blog/"/>
    
    
      <category term="hexo" scheme="https://qq1028951741.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：整合websocket实现消息推送</title>
    <link href="https://qq1028951741.github.io/2018/11/27/SpringBoot%EF%BC%9A%E6%95%B4%E5%90%88websocket%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    <id>https://qq1028951741.github.io/2018/11/27/SpringBoot：整合websocket实现消息推送/</id>
    <published>2018-11-27T11:43:13.000Z</published>
    <updated>2018-11-27T11:46:35.770Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：整合websocket实现消息推送"><a href="#SpringBoot：整合websocket实现消息推送" class="headerlink" title="SpringBoot：整合websocket实现消息推送"></a>SpringBoot：整合websocket实现消息推送</h2><h3 id="惯例先上pom-xml"><a href="#惯例先上pom-xml" class="headerlink" title="惯例先上pom.xml"></a>惯例先上pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springbootdemo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;springbootdemo&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.1.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- springboot-aop包,AOP切面注解,Aspectd等相关注解 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- json --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.31&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- swagger2 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 分页插件 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- alibaba的druid数据库连接池 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.9&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-datatype-joda&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-module-parameter-names&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- shiro core --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- shiro权限控制框架 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 引入Spring Boot 内嵌的Tomcat对jsp的解析包--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- servlet 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jsp 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jstl标签 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--redis数据库--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--spring2.0集成redis所需common-pool2--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.4.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 提供API给Java程式对Microsoft Office格式档案读和写的功能 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.13&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.13&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 上传文件需要的依赖 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- websocket --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- thymeleaf --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p>新增</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- websocket --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- thymeleaf --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="application-yml这边新增thymeleaf配置，注意该配置适合SpringBoot2-0以上"><a href="#application-yml这边新增thymeleaf配置，注意该配置适合SpringBoot2-0以上" class="headerlink" title="application.yml这边新增thymeleaf配置，注意该配置适合SpringBoot2.0以上"></a>application.yml这边新增thymeleaf配置，注意该配置适合SpringBoot2.0以上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># Spring configuration</span><br><span class="line">spring:</span><br><span class="line">  thymeleaf:</span><br><span class="line">    #开启模板缓存（默认值：true）</span><br><span class="line">    cache: false</span><br><span class="line">    #Check that the template exists before rendering it.</span><br><span class="line">    check-template: true</span><br><span class="line">    #检查模板位置是否正确（默认值:true）</span><br><span class="line">    check-template-location: true</span><br><span class="line">    #开启MVC Thymeleaf视图解析（默认值：true）</span><br><span class="line">    enabled: true</span><br><span class="line">    #模板编码</span><br><span class="line">    encoding: UTF-8</span><br><span class="line">    #要被排除在解析之外的视图名称列表，用逗号分隔</span><br><span class="line">    spring.thymeleaf.excluded-view-names:</span><br><span class="line">    #要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)</span><br><span class="line">    mode: HTML5</span><br><span class="line">    #在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）</span><br><span class="line">    prefix: classpath:/templates/</span><br><span class="line">    #在构建URL时添加到视图名称后的后缀（默认值：.html）</span><br><span class="line">    suffix: .html</span><br><span class="line">    #Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，</span><br><span class="line">    #只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。</span><br><span class="line">    template-resolver-order:</span><br><span class="line">    #可解析的视图名称列表，用逗号分隔</span><br><span class="line">    spring.thymeleaf.view-names:</span><br></pre></td></tr></table></figure><h3 id="websocket新增配置类"><a href="#websocket新增配置类" class="headerlink" title="websocket新增配置类"></a>websocket新增配置类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.websocket;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.socket.server.standard.ServerEndpointExporter;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 开启WebSocket支持</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class WebSocketConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ServerEndpointExporter serverEndpointExporter() &#123;</span><br><span class="line">        return new ServerEndpointExporter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.websocket;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.concurrent.CopyOnWriteArraySet;</span><br><span class="line">import javax.websocket.OnClose;</span><br><span class="line">import javax.websocket.OnError;</span><br><span class="line">import javax.websocket.OnMessage;</span><br><span class="line">import javax.websocket.OnOpen;</span><br><span class="line">import javax.websocket.Session;</span><br><span class="line">import javax.websocket.server.PathParam;</span><br><span class="line">import javax.websocket.server.ServerEndpoint;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">@ServerEndpoint(&quot;/websocket/&#123;sid&#125;&quot;)</span><br><span class="line">@Component</span><br><span class="line">public class WebSocketServer &#123;</span><br><span class="line"></span><br><span class="line">    private final static Logger log = LoggerFactory.getLogger(WebSocketServer.class);</span><br><span class="line">    //静态变量，用来记录当前在线连接数。应该把它设计成线程安全的。</span><br><span class="line">    private static int onlineCount = 0;</span><br><span class="line">    //concurrent包的线程安全Set，用来存放每个客户端对应的MyWebSocket对象。</span><br><span class="line">    private static CopyOnWriteArraySet&lt;WebSocketServer&gt; webSocketSet = new CopyOnWriteArraySet&lt;WebSocketServer&gt;();</span><br><span class="line"></span><br><span class="line">    //与某个客户端的连接会话，需要通过它来给客户端发送数据</span><br><span class="line">    private Session session;</span><br><span class="line"></span><br><span class="line">    //接收sid</span><br><span class="line">    private String sid=&quot;&quot;;</span><br><span class="line">    /**</span><br><span class="line">     * 连接建立成功调用的方法*/</span><br><span class="line">    @OnOpen</span><br><span class="line">    public void onOpen(Session session,@PathParam(&quot;sid&quot;) String sid) &#123;</span><br><span class="line">        this.session = session;</span><br><span class="line">        webSocketSet.add(this);     //加入set中</span><br><span class="line">        addOnlineCount();           //在线数加1</span><br><span class="line">        log.info(&quot;有新窗口开始监听:&quot;+sid+&quot;,当前在线人数为&quot; + getOnlineCount());</span><br><span class="line">        this.sid=sid;</span><br><span class="line">        try &#123;</span><br><span class="line">            sendMessage(&quot;连接成功&quot;);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            log.error(&quot;websocket IO异常&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 连接关闭调用的方法</span><br><span class="line">     */</span><br><span class="line">    @OnClose</span><br><span class="line">    public void onClose() &#123;</span><br><span class="line">        webSocketSet.remove(this);  //从set中删除</span><br><span class="line">        subOnlineCount();           //在线数减1</span><br><span class="line">        log.info(&quot;有一连接关闭！当前在线人数为&quot; + getOnlineCount());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 收到客户端消息后调用的方法</span><br><span class="line">     *</span><br><span class="line">     * @param message 客户端发送过来的消息*/</span><br><span class="line">    @OnMessage</span><br><span class="line">    public void onMessage(String message, Session session) &#123;</span><br><span class="line">        log.info(&quot;收到来自窗口&quot;+sid+&quot;的信息:&quot;+message);</span><br><span class="line">        //群发消息</span><br><span class="line">        for (WebSocketServer item : webSocketSet) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                item.sendMessage(message);</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * @param session</span><br><span class="line">     * @param error</span><br><span class="line">     */</span><br><span class="line">    @OnError</span><br><span class="line">    public void onError(Session session, Throwable error) &#123;</span><br><span class="line">        log.error(&quot;发生错误&quot;);</span><br><span class="line">        error.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 实现服务器主动推送</span><br><span class="line">     */</span><br><span class="line">    public void sendMessage(String message) throws IOException &#123;</span><br><span class="line">        this.session.getBasicRemote().sendText(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 群发自定义消息</span><br><span class="line">     * */</span><br><span class="line">    public static void sendInfo(String message,@PathParam(&quot;sid&quot;) String sid) throws IOException &#123;</span><br><span class="line">        log.info(&quot;推送消息到窗口&quot;+sid+&quot;，推送内容:&quot;+message);</span><br><span class="line">        for (WebSocketServer item : webSocketSet) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                //这里可以设定只推送给这个sid的，为null则全部推送</span><br><span class="line">                if(sid==null) &#123;</span><br><span class="line">                    item.sendMessage(message);</span><br><span class="line">                &#125;else if(item.sid.equals(sid))&#123;</span><br><span class="line">                    item.sendMessage(message);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static synchronized int getOnlineCount() &#123;</span><br><span class="line">        return onlineCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static synchronized void addOnlineCount() &#123;</span><br><span class="line">        WebSocketServer.onlineCount++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static synchronized void subOnlineCount() &#123;</span><br><span class="line">        WebSocketServer.onlineCount--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="shiroFilter放开websocket"><a href="#shiroFilter放开websocket" class="headerlink" title="shiroFilter放开websocket"></a>shiroFilter放开websocket</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filterChainDefinitionMap.put(&quot;/websocket/**&quot;, &quot;anon&quot;);</span><br><span class="line">filterChainDefinitionMap.put(&quot;/socket/**&quot;, &quot;anon&quot;);</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.controller;</span><br><span class="line"></span><br><span class="line">import com.fufu.config.websocket.WebSocketServer;</span><br><span class="line">import com.fufu.tools.JsonUtil;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">@RequestMapping(&quot;/websocket&quot;)</span><br><span class="line">public class MessagePushController &#123;</span><br><span class="line">    //页面请求</span><br><span class="line">    @GetMapping(&quot;/requestPage&quot;)</span><br><span class="line">    public String websocket() &#123;</span><br><span class="line">        return &quot;websocket&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    //推送数据接口</span><br><span class="line">    @ResponseBody</span><br><span class="line">    @RequestMapping(&quot;/socket/push/&#123;cid&#125;&quot;)</span><br><span class="line">    public String pushToWeb(@PathVariable String cid, String message) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            WebSocketServer.sendInfo(message,cid);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, cid+&quot;#&quot;+e.getMessage()).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;msg&quot;, &quot;推送成功cid为：&quot;+cid).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Scheduled(cron = &quot;0/5 * * * * ?&quot;)</span><br><span class="line">    public void autoPushToWeb() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            WebSocketServer.sendInfo(&quot;我是一条5秒一次向web推送的消息~&quot;,&quot;20&quot;);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="html测试websocket"><a href="#html测试websocket" class="headerlink" title="html测试websocket"></a>html测试websocket</h3><p>在resources下的templates新建websocket.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;title&gt;websocket测试&lt;/title&gt;</span><br><span class="line">    &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">    &lt;link rel=&quot;shortcut icon&quot; href=&quot;/static/img/favicon.ico&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;google-site-verification&quot; content=&quot;tW0wHpS5SAbFhl5Nt9o2G1uXV-G4YIHClYuX5lr1-ZE&quot; /&gt;</span><br><span class="line">    &lt;script src=&quot;https://libs.cdnjs.net/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/bootstrap/css/bootstrap.min.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/css/offcanvas.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;alternate&quot; hreflang=&quot;en&quot;</span><br><span class="line">          href=&quot;http://coolaf.com/en&quot; /&gt;</span><br><span class="line">    &lt;link rel=&quot;alternate&quot; hreflang=&quot;zh&quot;</span><br><span class="line">          href=&quot;http://coolaf.com/zh&quot; /&gt;</span><br><span class="line">    &lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;container&quot; style=&apos;width:1300px&apos;&gt;</span><br><span class="line">    &lt;div class=&quot;row row-offcanvas row-offcanvas-right main-contain&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12 col-sm-8&quot;&gt;</span><br><span class="line">            &lt;style&gt;</span><br><span class="line">                .newmessage&#123;</span><br><span class="line">                    width:100%;</span><br><span class="line">                &#125;</span><br><span class="line">                .bubble&#123;</span><br><span class="line">                    background-color:lightgreen</span><br><span class="line">                    position: relative;</span><br><span class="line">                    max-width: 240px;</span><br><span class="line">                    word-wrap: break-word;</span><br><span class="line">                    text-align: left;</span><br><span class="line">                    margin-left: 16px;</span><br><span class="line">                    margin-right: 16px;</span><br><span class="line">                    border-radius: 9px;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                .bubble:after&#123;</span><br><span class="line">                    position: absolute;</span><br><span class="line">                    border: 4.8px solid transparent;</span><br><span class="line">                    content: &quot; &quot;;</span><br><span class="line">                    top: 20px;</span><br><span class="line">                &#125;</span><br><span class="line">            &lt;/style&gt;</span><br><span class="line">            &lt;h2&gt;&lt;/h2&gt;</span><br><span class="line">            &lt;div style=&quot;&quot;&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;input type=&apos;text&apos; value=&apos;ws://123.207.167.163:9010/ajaxchattest&apos; class=&quot;form-control&quot; style=&apos;width:390px;display:inline&apos;id=&apos;wsaddr&apos;/&gt;</span><br><span class="line">                    &lt;div class=&quot;btn-group&quot; role=&quot;group&quot; aria-label=&quot;...&quot;&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;addsocket();&apos;&gt;连接&lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;closesocket();&apos;&gt;断开&lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;$(&quot;#wsaddr&quot;).val(&quot;&quot;)&apos;&gt;清空&lt;/button&gt;</span><br><span class="line">                        &lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;$(&quot;#wsaddr&quot;).val(&quot;ws://localhost:9010/ajaxchattest&quot;)&apos;&gt;示例&lt;/button&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div style=&apos;margin-top:10px;margin-button:10px&apos;&gt;</span><br><span class="line">        &lt;pre&gt;本工具主要是为了测试服务端websocket功能是否完善可用而开发，主要是利用html5 的websocket去连接服务端的websocket,因此，</span><br><span class="line">        无论你是内网还是外网都可使用!服务端只是实现了接受和发送，这里只是测试而已！&lt;/pre&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div id=&quot;output&quot; style=&quot;border:1px solid #ccc;height:365px;overflow: auto;margin-left:0px&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;row&quot; &gt;</span><br><span class="line">                    &lt;div class=&quot;col-lg-6&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;input-group&quot; style=&apos;&apos;&gt;</span><br><span class="line">                            &lt;input type=&quot;text&quot;id=&apos;message&apos;  class=&quot;form-control&quot; style=&apos;width:810px&apos; placeholder=&quot;待发信息&quot; onkeydown=&quot;en(event);&quot;&gt;</span><br><span class="line">                            &lt;span class=&quot;input-group-btn&quot;&gt;&lt;button class=&quot;btn btn-default&quot; type=&quot;button&quot; onclick=&quot;doSend();&quot;&gt;发送&lt;/button&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;script language=&quot;javascript&quot;type=&quot;text/javascript&quot;&gt;</span><br><span class="line">                function   formatDate(now)   &#123;</span><br><span class="line">                    var   year=now.getFullYear();</span><br><span class="line">                    var   month=now.getMonth()+1;</span><br><span class="line">                    var   date=now.getDate();</span><br><span class="line">                    var   hour=now.getHours();</span><br><span class="line">                    var   minute=now.getMinutes();</span><br><span class="line">                    var   second=now.getSeconds();</span><br><span class="line">                    return   year+&quot;-&quot;+(month=month&lt;10?(&quot;0&quot;+month):month)+&quot;-&quot;+(date=date&lt;10?(&quot;0&quot;+date):date)+&quot; &quot;+(hour=hour&lt;10?(&quot;0&quot;+hour):hour)+&quot;:&quot;+(minute=minute&lt;10?(&quot;0&quot;+minute):minute)+&quot;:&quot;+(second=second&lt;10?(&quot;0&quot;+second):second);</span><br><span class="line">                &#125;</span><br><span class="line">                var output;</span><br><span class="line">                var websocket;</span><br><span class="line">                function init() &#123;</span><br><span class="line">                    output = document.getElementById(&quot;output&quot;);</span><br><span class="line">                    testWebSocket();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                function addsocket() &#123;</span><br><span class="line">                    var wsaddr = $(&quot;#wsaddr&quot;).val();</span><br><span class="line">                    if (wsaddr==&apos;&apos;) &#123;</span><br><span class="line">                        alert(&quot;请填写websocket的地址&quot;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                    StartWebSocket(wsaddr);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                function closesocket() &#123;</span><br><span class="line">                    websocket.close();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                function StartWebSocket(wsUri) &#123;</span><br><span class="line">                    websocket = new WebSocket(wsUri);</span><br><span class="line">                    websocket.onopen = function(evt) &#123; onOpen(evt) &#125;;</span><br><span class="line">                    websocket.onclose = function(evt) &#123; onClose(evt) &#125;;</span><br><span class="line">                    websocket.onmessage = function(evt) &#123; onMessage(evt) &#125;;</span><br><span class="line">                    websocket.onerror = function(evt) &#123; onError(evt) &#125;; &#125;</span><br><span class="line"></span><br><span class="line">                function onOpen(evt) &#123;</span><br><span class="line">                    writeToScreen(&quot;&lt;span style=&apos;color:red&apos;&gt;连接成功，现在你可以发送信息啦！！！&lt;/span&gt;&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                function onClose(evt) &#123;</span><br><span class="line">                    writeToScreen(&quot;&lt;span style=&apos;color:red&apos;&gt;websocket连接已断开!!!&lt;/span&gt;&quot;);</span><br><span class="line">                    websocket.close();</span><br><span class="line">                &#125;</span><br><span class="line">                function onMessage(evt) &#123;</span><br><span class="line">                    writeToScreen(&apos;&lt;span style=&quot;color:blue&quot;&gt;服务端回应&amp;nbsp;&apos;+formatDate(new Date())+&apos;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;bubble&quot;&gt;&apos;+ evt.data+&apos;&lt;/span&gt;&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">                function onError(evt) &#123;</span><br><span class="line">                    writeToScreen(&apos;&lt;span style=&quot;color: red;&quot;&gt;发生错误:&lt;/span&gt; &apos;+ evt.data);</span><br><span class="line">                &#125;</span><br><span class="line">                function doSend() &#123;</span><br><span class="line">                    var message=$(&quot;#message&quot;).val();</span><br><span class="line">                    if (message==&apos;&apos;) &#123;</span><br><span class="line">                        alert(&quot;请先填写发送信息&quot;);</span><br><span class="line">                        $(&quot;#message&quot;).focus();</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (typeof websocket===&quot;undefined&quot;)&#123;</span><br><span class="line">                        alert(&quot;websocket还没有连接，或者连接失败，请检测&quot;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (websocket.readyState==3) &#123;</span><br><span class="line">                        alert(&quot;websocket已经关闭，请重新连接&quot;);</span><br><span class="line">                        return false;</span><br><span class="line">                    &#125;</span><br><span class="line">                    console.log(websocket);</span><br><span class="line">                    $(&quot;#message&quot;).val(&apos;&apos;);</span><br><span class="line">                    writeToScreen(&apos;&lt;span style=&quot;color:green&quot;&gt;你发送的信息&amp;nbsp;&apos;+formatDate(new Date())+&apos;&lt;/span&gt;&lt;br/&gt;&apos;+ message);</span><br><span class="line">                    websocket.send(message);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                function writeToScreen(message) &#123;</span><br><span class="line">                    var div = &quot;&lt;div class=&apos;newmessage&apos;&gt;&quot;+message+&quot;&lt;/div&gt;&quot;;</span><br><span class="line">                    var d = $(&quot;#output&quot;);</span><br><span class="line">                    var d=d[0];</span><br><span class="line">                    var doScroll = d.scrollTop == d.scrollHeight - d.clientHeight;</span><br><span class="line">                    $(&quot;#output&quot;).append(div);</span><br><span class="line">                    if (doScroll) &#123;</span><br><span class="line">                        d.scrollTop = d.scrollHeight - d.clientHeight;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                function en(event)&#123;</span><br><span class="line">                    var evt=evt?evt:(window.event?window.event:null);</span><br><span class="line">                    if (evt.keyCode==13)&#123;</span><br><span class="line">                        doSend()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &lt;/script&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><blockquote><p>浏览器访问 <code>http://127.0.0.1:8080/websocket/requestPage</code></p></blockquote><p><img src="/images/websocket效果图.png" alt="&quot;图片描述&quot;"></p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：Excel文件解析</title>
    <link href="https://qq1028951741.github.io/2018/11/27/SpringBoot%EF%BC%9AExcel%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/"/>
    <id>https://qq1028951741.github.io/2018/11/27/SpringBoot：Excel文件解析/</id>
    <published>2018-11-27T03:18:13.000Z</published>
    <updated>2018-11-27T06:11:25.170Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：上传Excel文件并转换成javabean保存到数据库"><a href="#SpringBoot：上传Excel文件并转换成javabean保存到数据库" class="headerlink" title="SpringBoot：上传Excel文件并转换成javabean保存到数据库"></a>SpringBoot：上传Excel文件并转换成javabean保存到数据库</h2><h3 id="pom-xml引入"><a href="#pom-xml引入" class="headerlink" title="pom.xml引入"></a>pom.xml引入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 提供API给Java程式对Microsoft Office格式档案读和写的功能 --&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;3.13&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;3.13&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">   &lt;!-- 上传文件需要的依赖 --&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;1.4&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">   &lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;1.3.1&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="新增工具类"><a href="#新增工具类" class="headerlink" title="新增工具类"></a>新增工具类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.excel;</span><br><span class="line"></span><br><span class="line">import java.lang.annotation.ElementType;</span><br><span class="line">import java.lang.annotation.Retention;</span><br><span class="line">import java.lang.annotation.RetentionPolicy;</span><br><span class="line">import java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Excel注解，用以生成Excel表格文件</span><br><span class="line"> */</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="line">@Target(&#123;ElementType.FIELD, ElementType.TYPE&#125;)</span><br><span class="line">public @interface Excel &#123;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 列名</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">String name() default &quot;&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 宽度</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">int width() default 20;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 忽略该字段</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">boolean skip() default false;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 日期格式 默认yyyy-MM-dd HH:mm:ss</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">String dateFormat() default &quot;yyyy-MM-dd HH:mm:ss&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 浮点数的精度</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">int precision() default -1;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 四舍五入</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">boolean round() default true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.excel;</span><br><span class="line"></span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Excel导入导出数据定义转换&lt;br&gt;</span><br><span class="line"> * 举例:&lt;br&gt;</span><br><span class="line"> * 数据导出， &#123;lock,&#123;0:正常，1:锁定&#125;&#125;&lt;br&gt;</span><br><span class="line"> * 数据导入,&#123;lock,&#123;正常:0，锁定:1&#125;&#125;</span><br><span class="line"> */</span><br><span class="line">public class ExcelDataFormatter &#123;</span><br><span class="line">/**</span><br><span class="line"> * K:&#123;V1:V2&#125;</span><br><span class="line"> */</span><br><span class="line">private Map&lt;String,Map&lt;String,String&gt;&gt; formatter=new HashMap&lt;String, Map&lt;String,String&gt;&gt;();</span><br><span class="line"></span><br><span class="line">public void set(String key, Map&lt;String,String&gt; map)&#123;</span><br><span class="line">formatter.put(key, map);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Map&lt;String,String&gt; get(String key)&#123;</span><br><span class="line">return formatter.get(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.excel;</span><br><span class="line"></span><br><span class="line">import org.apache.poi.hssf.usermodel.HSSFDateUtil;</span><br><span class="line">import org.apache.poi.ss.usermodel.*;</span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFCell;</span><br><span class="line">import org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.math.BigDecimal;</span><br><span class="line">import java.text.NumberFormat;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Excel内容转化成Bean</span><br><span class="line"> */</span><br><span class="line">public class ExcelToBean &#123;</span><br><span class="line"></span><br><span class="line">private static int etimes = 0;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 从文件读取数据，最好是所有的单元格都是文本格式，日期格式要求yyyy-MM-dd HH:mm:ss,布尔类型0：真，1：假</span><br><span class="line"> * </span><br><span class="line"> * @param edf</span><br><span class="line"> *            数据格式化</span><br><span class="line"> * </span><br><span class="line"> * @param file</span><br><span class="line"> *            Excel文件，支持xlsx后缀，xls的没写，基本一样</span><br><span class="line"> * @return</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">@SuppressWarnings(&quot;unchecked&quot;)</span><br><span class="line">public static &lt;E&gt; List&lt;E&gt; readFromFile(ExcelDataFormatter edf, InputStream is, Class&lt;?&gt; clazz) throws Exception &#123;</span><br><span class="line">Field[] fields = ReflectionUtils.getClassFieldsAndSuperClassFields(clazz);</span><br><span class="line"></span><br><span class="line">Map&lt;String, String&gt; textToKey = new HashMap&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line">Excel _excel = null;</span><br><span class="line">for (Field field : fields) &#123;</span><br><span class="line">_excel = field.getAnnotation(Excel.class);</span><br><span class="line">if (_excel == null || _excel.skip() == true) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">textToKey.put(_excel.name(), field.getName());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Workbook wb = new XSSFWorkbook(is);</span><br><span class="line"></span><br><span class="line">Sheet sheet = wb.getSheetAt(0);</span><br><span class="line">Row title = sheet.getRow(0);</span><br><span class="line">// 标题数组，后面用到，根据索引去标题名称，通过标题名称去字段名称用到 textToKey</span><br><span class="line">String[] titles = new String[title.getPhysicalNumberOfCells()];</span><br><span class="line">for (int i = 0; i &lt; title.getPhysicalNumberOfCells(); i++) &#123;</span><br><span class="line">titles[i] = title.getCell(i).getStringCellValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List&lt;E&gt; list = new ArrayList&lt;E&gt;();</span><br><span class="line"></span><br><span class="line">E e = null;</span><br><span class="line"></span><br><span class="line">int rowIndex = 0;</span><br><span class="line">int columnCount = titles.length;</span><br><span class="line">Cell cell = null;</span><br><span class="line">Row row = null;</span><br><span class="line"></span><br><span class="line">for (Iterator&lt;Row&gt; it = sheet.rowIterator(); it.hasNext();) &#123;</span><br><span class="line"></span><br><span class="line">row = it.next();</span><br><span class="line">if (rowIndex++ == 0) &#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (row == null) &#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">e = (E)clazz.newInstance();</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; columnCount; i++) &#123;</span><br><span class="line">cell = row.getCell(i);</span><br><span class="line">etimes = 0;</span><br><span class="line">readCellContent(textToKey.get(titles[i]), fields, cell, e, edf);</span><br><span class="line">&#125;</span><br><span class="line">list.add(e);</span><br><span class="line">&#125;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 从单元格读取数据，根据不同的数据类型，使用不同的方式读取&lt;br&gt;</span><br><span class="line"> * 有时候POI自作聪明，经常和我们期待的数据格式不一样，会报异常，&lt;br&gt;</span><br><span class="line"> * 我们这里采取强硬的方式&lt;br&gt;</span><br><span class="line"> * 使用各种方法，知道尝试到读到数据为止，然后根据Bean的数据类型，进行相应的转换&lt;br&gt;</span><br><span class="line"> * 如果尝试完了（总共7次），还是不能得到数据，那么抛个异常出来，没办法了</span><br><span class="line"> * </span><br><span class="line"> * @param key</span><br><span class="line"> *            当前单元格对应的Bean字段</span><br><span class="line"> * @param fields</span><br><span class="line"> *            Bean所有的字段数组</span><br><span class="line"> * @param cell</span><br><span class="line"> *            单元格对象</span><br><span class="line"> * @param obj</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">public static void readCellContent(String key, Field[] fields, Cell cell, Object obj, ExcelDataFormatter edf) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">Object o = null;</span><br><span class="line">try &#123;</span><br><span class="line">switch (cell.getCellType()) &#123;</span><br><span class="line">case XSSFCell.CELL_TYPE_BOOLEAN:</span><br><span class="line">o = cell.getBooleanCellValue();</span><br><span class="line">break;</span><br><span class="line">case XSSFCell.CELL_TYPE_NUMERIC:</span><br><span class="line">o = cell.getNumericCellValue();</span><br><span class="line">NumberFormat nf = NumberFormat.getInstance();</span><br><span class="line">String s = nf.format(o);</span><br><span class="line">if (s.indexOf(&quot;,&quot;) &gt;= 0) &#123;</span><br><span class="line">s = s.replace(&quot;,&quot;, &quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">o = s;</span><br><span class="line">if (HSSFDateUtil.isCellDateFormatted(cell)) &#123;</span><br><span class="line">o = DateUtil.getJavaDate(cell.getNumericCellValue());</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">case XSSFCell.CELL_TYPE_STRING:</span><br><span class="line">o = cell.getStringCellValue();</span><br><span class="line">break;</span><br><span class="line">case XSSFCell.CELL_TYPE_ERROR:</span><br><span class="line">o = cell.getErrorCellValue();</span><br><span class="line">break;</span><br><span class="line">case XSSFCell.CELL_TYPE_BLANK:</span><br><span class="line">o = null;</span><br><span class="line">break;</span><br><span class="line">case XSSFCell.CELL_TYPE_FORMULA:</span><br><span class="line">o = cell.getCellFormula();</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">o = null;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (o == null)</span><br><span class="line">return;</span><br><span class="line"></span><br><span class="line">for (Field field : fields) &#123;</span><br><span class="line">field.setAccessible(true);</span><br><span class="line">if (field.getName().equals(key)) &#123;</span><br><span class="line">Boolean bool = true;</span><br><span class="line">Map&lt;String, String&gt; map = null;</span><br><span class="line">if (edf == null) &#123;</span><br><span class="line">bool = false;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">map = edf.get(field.getName());</span><br><span class="line">if (map == null) &#123;</span><br><span class="line">bool = false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (field.getType().equals(Date.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Date.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);</span><br><span class="line">field.set(obj, sdf.parse(o.toString()));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(String.class)) &#123;</span><br><span class="line">if (o.getClass().equals(String.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, o.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(Long.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Long.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, Long.parseLong(o.toString()));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(Integer.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Integer.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// 检查是否需要转换</span><br><span class="line">if (bool) &#123;</span><br><span class="line">field.set(obj, map.get(o.toString()) != null ? Integer.parseInt(map.get(o.toString())) : Integer.parseInt(o.toString()));</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if(!o.getClass().equals(Double.class))</span><br><span class="line">field.set(obj, Integer.parseInt(o.toString()));</span><br><span class="line">else</span><br><span class="line">field.set(obj,  Integer.parseInt(new java.text.DecimalFormat(&quot;0&quot;).format(o)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(BigDecimal.class)) &#123;</span><br><span class="line">if (o.getClass().equals(BigDecimal.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, BigDecimal.valueOf(Double.parseDouble(o.toString())));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(Boolean.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Boolean.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">// 检查是否需要转换</span><br><span class="line">if (bool) &#123;</span><br><span class="line">field.set(obj, map.get(o.toString()) != null ? Boolean.parseBoolean(map.get(o.toString())) : Boolean.parseBoolean(o.toString()));</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, Boolean.parseBoolean(o.toString()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(Float.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Float.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, Float.parseFloat(o.toString()));</span><br><span class="line">&#125;</span><br><span class="line">&#125; else if (field.getType().equals(Double.class)) &#123;</span><br><span class="line">if (o.getClass().equals(Double.class)) &#123;</span><br><span class="line">field.set(obj, o);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">field.set(obj, Double.parseDouble(o.toString()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception ex) &#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">// 如果还是读到的数据格式还是不对，只能放弃了</span><br><span class="line">if (etimes &gt; 7) &#123;</span><br><span class="line">throw ex;</span><br><span class="line">&#125;</span><br><span class="line">etimes++;</span><br><span class="line">if (o == null) &#123;</span><br><span class="line">readCellContent(key, fields, cell, obj, edf);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config.excel;</span><br><span class="line"></span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.apache.commons.lang3.Validate;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 反射工具类.</span><br><span class="line"> * </span><br><span class="line"> * 提供调用getter/setter方法, 访问私有变量, 调用私有方法, 获取泛型类型Class, 被AOP过的真实类等工具函数.</span><br><span class="line"> * </span><br><span class="line"> * @author lwh</span><br><span class="line"> */</span><br><span class="line">public class ReflectionUtils &#123;</span><br><span class="line">private static final String SETTER_PREFIX = &quot;set&quot;;</span><br><span class="line"></span><br><span class="line">private static final String GETTER_PREFIX = &quot;get&quot;;</span><br><span class="line"></span><br><span class="line">private static final String CGLIB_CLASS_SEPARATOR = &quot;$$&quot;;</span><br><span class="line"></span><br><span class="line">private static Logger logger = LoggerFactory.getLogger(ReflectionUtils.class);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 调用Getter方法</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param propertyName 属性名称</span><br><span class="line"> * @return obj</span><br><span class="line"> */</span><br><span class="line">public static Object invokeGetter(Object obj, String propertyName) &#123;</span><br><span class="line">String getterMethodName = GETTER_PREFIX + StringUtils.capitalize(propertyName);</span><br><span class="line">return invokeMethod(obj, getterMethodName, new Class[] &#123;&#125;, new Object[] &#123;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 调用Setter方法, 仅匹配方法名</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param propertyName 属性名称</span><br><span class="line"> * @param value 新值</span><br><span class="line"> */</span><br><span class="line">public static void invokeSetter(Object obj, String propertyName, Object value) &#123;</span><br><span class="line">String setterMethodName = SETTER_PREFIX + StringUtils.capitalize(propertyName);</span><br><span class="line">invokeMethodByName(obj, setterMethodName, new Object[] &#123; value &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取所有的成员变量,包括父类</span><br><span class="line"> * </span><br><span class="line"> * @param clazz</span><br><span class="line"> * @return 属性集合</span><br><span class="line"> * @throws Exception</span><br><span class="line"> */</span><br><span class="line">public static &lt;T&gt; Field[] getClassFieldsAndSuperClassFields(Class&lt;T&gt; clazz) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">if (clazz.getSuperclass() == null) &#123;</span><br><span class="line">throw new Exception(clazz.getName() + &quot;没有父类&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Field[] superFields = clazz.getSuperclass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">Field[] allFields = new Field[fields.length + superFields.length];</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; fields.length; i++) &#123;</span><br><span class="line">allFields[i] = fields[i];</span><br><span class="line">&#125;</span><br><span class="line">for (int i = 0; i &lt; superFields.length; i++) &#123;</span><br><span class="line">allFields[fields.length + i] = superFields[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return allFields;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 直接读取对象属性值, 无视private/protected修饰符, 不经过getter函数</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param fieldName 属性名称</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static Object getFieldValue(final Object obj, final String fieldName) &#123;</span><br><span class="line">Field field = getAccessibleField(obj, fieldName);</span><br><span class="line"></span><br><span class="line">if (field == null) &#123;</span><br><span class="line">throw new IllegalArgumentException(&quot;Could not find field [&quot; + fieldName + &quot;] on target [&quot; + obj + &quot;]&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Object result = null;</span><br><span class="line">try &#123;</span><br><span class="line">result = field.get(obj);</span><br><span class="line">&#125; catch (IllegalAccessException e) &#123;</span><br><span class="line">logger.error(&quot;不可能抛出的异常&#123;&#125;&quot;, e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 直接设置对象属性值, 无视private/protected修饰符, 不经过setter函数</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param fieldName 属性名称</span><br><span class="line"> * @param value 新值</span><br><span class="line"> */</span><br><span class="line">public static void setFieldValue(final Object obj, final String fieldName, final Object value) &#123;</span><br><span class="line">Field field = getAccessibleField(obj, fieldName);</span><br><span class="line"></span><br><span class="line">if (field == null) &#123;</span><br><span class="line">throw new IllegalArgumentException(&quot;Could not find field [&quot; + fieldName + &quot;] on target [&quot; + obj + &quot;]&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">field.set(obj, value);</span><br><span class="line">&#125; catch (IllegalAccessException e) &#123;</span><br><span class="line">logger.error(&quot;不可能抛出的异常:&#123;&#125;&quot;, e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 直接调用对象方法, 无视private/protected修饰符.</span><br><span class="line"> * 用于一次性调用的情况，否则应使用getAccessibleMethod()函数获得Method后反复调用.</span><br><span class="line"> * 同时匹配方法名+参数类型，</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param methodName 方法名称</span><br><span class="line"> * @param parameterTypes 参数类型</span><br><span class="line"> * @param args 参数</span><br><span class="line"> * @return obj</span><br><span class="line"> */</span><br><span class="line">public static Object invokeMethod(final Object obj, final String methodName, final Class&lt;?&gt;[] parameterTypes,</span><br><span class="line">                                      final Object[] args) &#123;</span><br><span class="line">Method method = getAccessibleMethod(obj, methodName, parameterTypes);</span><br><span class="line">if (method == null) &#123;</span><br><span class="line">throw new IllegalArgumentException(&quot;Could not find method [&quot; + methodName + &quot;] on target [&quot; + obj + &quot;]&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">return method.invoke(obj, args);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">throw convertReflectionExceptionToUnchecked(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 直接调用对象方法, 无视private/protected修饰符，</span><br><span class="line"> * 用于一次性调用的情况，否则应使用getAccessibleMethodByName()函数获得Method后反复调用.</span><br><span class="line"> * 只匹配函数名，如果有多个同名函数调用第一个。</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param methodName 方法名称</span><br><span class="line"> * @param args 参数</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static Object invokeMethodByName(final Object obj, final String methodName, final Object[] args) &#123;</span><br><span class="line">Method method = getAccessibleMethodByName(obj, methodName);</span><br><span class="line">if (method == null) &#123;</span><br><span class="line">throw new IllegalArgumentException(&quot;Could not find method [&quot; + methodName + &quot;] on target [&quot; + obj + &quot;]&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">return method.invoke(obj, args);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">throw convertReflectionExceptionToUnchecked(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 循环向上转型, 获取对象的DeclaredField, 并强制设置为可访问.</span><br><span class="line"> * </span><br><span class="line"> * 如向上转型到Object仍无法找到, 返回null.</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param fieldName 属性名称</span><br><span class="line"> * @return 属性</span><br><span class="line"> */</span><br><span class="line">public static Field getAccessibleField(final Object obj, final String fieldName) &#123;</span><br><span class="line">Validate.notNull(obj, &quot;object can&apos;t be null&quot;);</span><br><span class="line">Validate.notBlank(fieldName, &quot;fieldName can&apos;t be blank&quot;);</span><br><span class="line">for (Class&lt;?&gt; superClass = obj.getClass(); superClass != Object.class; superClass = superClass.getSuperclass()) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">Field field = superClass.getDeclaredField(fieldName);</span><br><span class="line">makeAccessible(field);</span><br><span class="line">return field;</span><br><span class="line">&#125; catch (NoSuchFieldException e) &#123;// NOSONAR</span><br><span class="line">// Field不在当前类定义,继续向上转型</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 循环向上转型, 获取对象的DeclaredMethod,并强制设置为可访问.</span><br><span class="line"> * 如向上转型到Object仍无法找到, 返回null.</span><br><span class="line"> * 匹配函数名+参数类型。</span><br><span class="line"> * </span><br><span class="line"> * 用于方法需要被多次调用的情况. 先使用本函数先取得Method,然后调用Method.invoke(Object obj, Object... args)</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param methodName 方法名称</span><br><span class="line"> * @param parameterTypes 参数类型</span><br><span class="line"> * @return 方法</span><br><span class="line"> */</span><br><span class="line">public static Method getAccessibleMethod(final Object obj, final String methodName,</span><br><span class="line">                                             final Class&lt;?&gt;... parameterTypes) &#123;</span><br><span class="line">Validate.notNull(obj, &quot;object can&apos;t be null&quot;);</span><br><span class="line">Validate.notBlank(methodName, &quot;methodName can&apos;t be blank&quot;);</span><br><span class="line"></span><br><span class="line">for (Class&lt;?&gt; searchType = obj.getClass(); searchType != Object.class; searchType = searchType.getSuperclass()) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">Method method = searchType.getDeclaredMethod(methodName, parameterTypes);</span><br><span class="line">makeAccessible(method);</span><br><span class="line">return method;</span><br><span class="line">&#125; catch (NoSuchMethodException e) &#123;</span><br><span class="line">// Method不在当前类定义,继续向上转型</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 循环向上转型, 获取对象的DeclaredMethod,并强制设置为可访问.</span><br><span class="line"> * 如向上转型到Object仍无法找到, 返回null.</span><br><span class="line"> * 只匹配函数名。</span><br><span class="line"> * </span><br><span class="line"> * 用于方法需要被多次调用的情况. 先使用本函数先取得Method,然后调用Method.invoke(Object obj, Object... args)</span><br><span class="line"> * @param obj 对象</span><br><span class="line"> * @param methodName 方法名称</span><br><span class="line"> * @return 方法</span><br><span class="line"> */</span><br><span class="line">public static Method getAccessibleMethodByName(final Object obj, final String methodName) &#123;</span><br><span class="line">Validate.notNull(obj, &quot;object can&apos;t be null&quot;);</span><br><span class="line">Validate.notBlank(methodName, &quot;methodName can&apos;t be blank&quot;);</span><br><span class="line"></span><br><span class="line">for (Class&lt;?&gt; searchType = obj.getClass(); searchType != Object.class; searchType = searchType.getSuperclass()) &#123;</span><br><span class="line">Method[] methods = searchType.getDeclaredMethods();</span><br><span class="line">for (Method method : methods) &#123;</span><br><span class="line">if (method.getName().equals(methodName)) &#123;</span><br><span class="line">makeAccessible(method);</span><br><span class="line">return method;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 改变private/protected的方法为public，尽量不调用实际改动的语句，避免JDK的SecurityManager抱怨。</span><br><span class="line"> * @param method 对象方法</span><br><span class="line"> */</span><br><span class="line">public static void makeAccessible(Method method) &#123;</span><br><span class="line">if ((!Modifier.isPublic(method.getModifiers()) || !Modifier.isPublic(method.getDeclaringClass().getModifiers()))</span><br><span class="line">&amp;&amp; !method.isAccessible()) &#123;</span><br><span class="line">method.setAccessible(true);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 改变private/protected的成员变量为public，尽量不调用实际改动的语句，避免JDK的SecurityManager抱怨。</span><br><span class="line"> * @param field 对象属性</span><br><span class="line"> */</span><br><span class="line">public static void makeAccessible(Field field) &#123;</span><br><span class="line">if ((!Modifier.isPublic(field.getModifiers()) || !Modifier.isPublic(field.getDeclaringClass().getModifiers()) || Modifier</span><br><span class="line">.isFinal(field.getModifiers())) &amp;&amp; !field.isAccessible()) &#123;</span><br><span class="line">field.setAccessible(true);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 通过反射, 获得Class定义中声明的泛型参数的类型, 注意泛型必须定义在父类处</span><br><span class="line"> * 如无法找到, 返回Object.class.</span><br><span class="line"> * eg.</span><br><span class="line"> * public UserDao extends HibernateDao&lt;User&gt;</span><br><span class="line"> * </span><br><span class="line"> * @param clazz The class to introspect</span><br><span class="line"> * @return the first generic declaration, or Object.class if cannot be determined</span><br><span class="line"> */</span><br><span class="line">public static &lt;T&gt; Class&lt;T&gt; getClassGenricType(final Class clazz) &#123;</span><br><span class="line">return getClassGenricType(clazz, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 通过反射, 获得Class定义中声明的父类的泛型参数的类型.</span><br><span class="line"> * 如无法找到, 返回Object.class.</span><br><span class="line"> * </span><br><span class="line"> * 如public UserDao extends HibernateDao&lt;User,Long&gt;</span><br><span class="line"> * </span><br><span class="line"> * @param clazz clazz The class to introspect</span><br><span class="line"> * @param index the Index of the generic ddeclaration,start from 0.</span><br><span class="line"> * @return the index generic declaration, or Object.class if cannot be determined</span><br><span class="line"> */</span><br><span class="line">public static Class getClassGenricType(final Class clazz, final int index) &#123;</span><br><span class="line"></span><br><span class="line">Type genType = clazz.getGenericSuperclass();</span><br><span class="line"></span><br><span class="line">if (!(genType instanceof ParameterizedType)) &#123;</span><br><span class="line">logger.warn(clazz.getSimpleName() + &quot;&apos;s superclass not ParameterizedType&quot;);</span><br><span class="line">return Object.class;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Type[] params = ((ParameterizedType) genType).getActualTypeArguments();</span><br><span class="line"></span><br><span class="line">if ((index &gt;= params.length) || (index &lt; 0)) &#123;</span><br><span class="line">logger.warn(&quot;Index: &quot; + index + &quot;, Size of &quot; + clazz.getSimpleName() + &quot;&apos;s Parameterized Type: &quot;</span><br><span class="line">+ params.length);</span><br><span class="line">return Object.class;</span><br><span class="line">&#125;</span><br><span class="line">if (!(params[index] instanceof Class)) &#123;</span><br><span class="line">logger.warn(clazz.getSimpleName() + &quot; not set the actual class on superclass generic parameter&quot;);</span><br><span class="line">return Object.class;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return (Class) params[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 获取父类</span><br><span class="line"> * @param instance 对象实例</span><br><span class="line"> * @return 父类</span><br><span class="line"> */</span><br><span class="line">public static Class&lt;?&gt; getUserClass(Object instance) &#123;</span><br><span class="line">Class clazz = instance.getClass();</span><br><span class="line">if ((clazz != null) &amp;&amp; clazz.getName().contains(CGLIB_CLASS_SEPARATOR)) &#123;</span><br><span class="line">Class&lt;?&gt; superClass = clazz.getSuperclass();</span><br><span class="line">if ((superClass != null) &amp;&amp; !Object.class.equals(superClass)) &#123;</span><br><span class="line">return superClass;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return clazz;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 将反射时的checked exception转换为unchecked exception</span><br><span class="line"> * @param e exception</span><br><span class="line"> * @return unchecked exception</span><br><span class="line"> */</span><br><span class="line">public static RuntimeException convertReflectionExceptionToUnchecked(Exception e) &#123;</span><br><span class="line">if ((e instanceof IllegalAccessException) || (e instanceof IllegalArgumentException)</span><br><span class="line">|| (e instanceof NoSuchMethodException)) &#123;</span><br><span class="line">return new IllegalArgumentException(e);</span><br><span class="line">&#125; else if (e instanceof InvocationTargetException) &#123;</span><br><span class="line">return new RuntimeException(((InvocationTargetException) e).getTargetException());</span><br><span class="line">&#125; else if (e instanceof RuntimeException) &#123;</span><br><span class="line">return (RuntimeException) e;</span><br><span class="line">&#125;</span><br><span class="line">return new RuntimeException(&quot;Unexpected Checked Exception.&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@PostMapping(value = &quot;/excelUpload&quot;)</span><br><span class="line">   @ResponseBody</span><br><span class="line">   public String uploadExcel(@RequestParam(&quot;file&quot;) MultipartFile file) throws Exception &#123;</span><br><span class="line">       if(file==null || file.isEmpty())&#123;</span><br><span class="line">           return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;上传文件不能为空！&quot;).pushData();</span><br><span class="line">       &#125;</span><br><span class="line">       try&#123;</span><br><span class="line">           return restfulService.uploadSatelliteExcel(file);</span><br><span class="line">       &#125;catch(Exception e)&#123;</span><br><span class="line">           return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, e.getMessage()).pushData();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 上传卫星excel文件</span><br><span class="line">     */</span><br><span class="line">    public String uploadSatelliteExcel(MultipartFile excelFile)&#123;</span><br><span class="line">        ExcelDataFormatter edf = new ExcelDataFormatter();</span><br><span class="line">        InputStream is = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            is = excelFile.getInputStream();</span><br><span class="line"></span><br><span class="line">        List&lt;Satellite&gt; list = ExcelToBean.readFromFile(edf,is, Satellite.class);</span><br><span class="line">        satelliteMapper.deleteAll();</span><br><span class="line">        for(Satellite satellite : list)&#123;</span><br><span class="line">            satelliteMapper.insert(satellite);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, e.getMessage()).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;msg&quot;, &quot;上传成功！&quot;).pushData();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.entity;</span><br><span class="line"></span><br><span class="line">import com.fufu.config.excel.Excel;</span><br><span class="line"></span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">public class Satellite implements java.io.Serializable&#123;</span><br><span class="line">private Long id;</span><br><span class="line">@Excel(name = &quot;卫星名称&quot;)</span><br><span class="line">private String satelliteName;</span><br><span class="line">@Excel(name = &quot;编号&quot;)</span><br><span class="line">private String satelliteNo;</span><br><span class="line">@Excel(name = &quot;国别&quot;)</span><br><span class="line">private String country;</span><br><span class="line">@Excel(name = &quot;类别&quot;)</span><br><span class="line">private Integer satelliteType;</span><br><span class="line">@Excel(name = &quot;时间段开始&quot;)</span><br><span class="line">private Date startTime;</span><br><span class="line">@Excel(name = &quot;时间段结束&quot;)</span><br><span class="line">private Date endTime;</span><br><span class="line">@Excel(name = &quot;安全时长&quot;)</span><br><span class="line">private Integer safeTime;</span><br><span class="line"></span><br><span class="line">public Long getId() &#123;</span><br><span class="line">return id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setId(Long id) &#123;</span><br><span class="line">this.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSatelliteName() &#123;</span><br><span class="line">return satelliteName;</span><br><span class="line">&#125;</span><br><span class="line">public void setSatelliteName(String satelliteName) &#123;</span><br><span class="line">this.satelliteName = satelliteName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSatelliteNo() &#123;</span><br><span class="line">return satelliteNo;</span><br><span class="line">&#125;</span><br><span class="line">public void setSatelliteNo(String satelliteNo) &#123;</span><br><span class="line">this.satelliteNo = satelliteNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getCountry() &#123;</span><br><span class="line">return country;</span><br><span class="line">&#125;</span><br><span class="line">public void setCountry(String country) &#123;</span><br><span class="line">this.country = country;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Integer getSatelliteType() &#123;</span><br><span class="line">return satelliteType;</span><br><span class="line">&#125;</span><br><span class="line">public void setSatelliteType(Integer satelliteType) &#123;</span><br><span class="line">this.satelliteType = satelliteType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Date getStartTime() &#123;</span><br><span class="line">return startTime;</span><br><span class="line">&#125;</span><br><span class="line">public void setStartTime(Date startTime) &#123;</span><br><span class="line">this.startTime = startTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Date getEndTime() &#123;</span><br><span class="line">return endTime;</span><br><span class="line">&#125;</span><br><span class="line">public void setEndTime(Date endTime) &#123;</span><br><span class="line">this.endTime = endTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Integer getSafeTime() &#123;</span><br><span class="line">return safeTime;</span><br><span class="line">&#125;</span><br><span class="line">public void setSafeTime(Integer safeTime) &#123;</span><br><span class="line">this.safeTime = safeTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的注解对应Excel的第一行，如图</p><p><img src="/images/exceltobean效果图.jpg" alt="&quot;图片描述&quot;"></p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：开启logback默认日志组件</title>
    <link href="https://qq1028951741.github.io/2018/11/27/SpringBoot%EF%BC%9A%E5%BC%80%E5%90%AFlogback%E9%BB%98%E8%AE%A4%E6%97%A5%E5%BF%97%E7%BB%84%E4%BB%B6/"/>
    <id>https://qq1028951741.github.io/2018/11/27/SpringBoot：开启logback默认日志组件/</id>
    <published>2018-11-27T02:18:13.000Z</published>
    <updated>2018-11-26T12:57:31.410Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：开启logback默认日志组件"><a href="#SpringBoot：开启logback默认日志组件" class="headerlink" title="SpringBoot：开启logback默认日志组件"></a>SpringBoot：开启logback默认日志组件</h2><h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#输出日志文件，默认不输出</span><br><span class="line">logging:</span><br><span class="line">  file: /SpringBootLog.txt</span><br><span class="line">#修改日志级别，默认为INFO</span><br><span class="line">  level:</span><br><span class="line">    root: DEBUG</span><br></pre></td></tr></table></figure><h3 id="在resources下添加logback-spring-xml"><a href="#在resources下添加logback-spring-xml" class="headerlink" title="在resources下添加logback-spring.xml"></a>在resources下添加logback-spring.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;!-- appender是配置输出终端，ConsoleAppender是控制台,name是自定义名 --&gt;</span><br><span class="line">    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;!-- 配置日志格式，这是一个比较通用的格式 --&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 输出终端是滚动文件 --&gt;</span><br><span class="line">    &lt;appender name=&quot;WARN&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!-- 基于时间滚动，就是每天的日志输出到不同的文件 --&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;!-- 输出日志的目录文件名，window中默认分区为当前程序的硬盘分区，%d&#123;yyyy-MM-dd&#125;是当前日期 --&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;/log/warn/warn.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;!-- 最大保存99个文件，超出的历史文件会被删除 --&gt;</span><br><span class="line">            &lt;maxHistory&gt;99&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;!-- 按照日志级别进行过滤 --&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;!-- 只收集WARN级别的日志，其他高级别和低级别的日志都放弃 --&gt;</span><br><span class="line">            &lt;level&gt;WARN&lt;/level&gt;</span><br><span class="line">            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</span><br><span class="line">            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 除了filter，其他 配置和上面一样， 只是name和文件路径不同--&gt;</span><br><span class="line">    &lt;appender name=&quot;ERROR&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;/log/error/error.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;maxHistory&gt;99&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;!-- 阈值过滤器 --&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;</span><br><span class="line">            &lt;!-- 收集ERROR及ERROR以上级别的日志 --&gt;</span><br><span class="line">            &lt;level&gt;ERROR&lt;/level&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- root是根日志打印器，只有一个，负责整个系统的日志输出  --&gt;</span><br><span class="line">    &lt;root level=&quot;INFO&quot;&gt;</span><br><span class="line">        &lt;!-- 将上面三个输出终端配置到根打印器，将对整个系统 生效。 --&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;STDOUT&quot; /&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;WARN&quot; /&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;ERROR&quot; /&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- logger是root的子打印器，可以有多个，输出name配置的包中的日志。 --&gt;</span><br><span class="line">    &lt;!-- hello.dao是我的mybatis映射dao的包名，设置为debug可以打印mybatis的sql语句 --&gt;</span><br><span class="line">    &lt;logger name=&quot;com.fufu.mapper&quot; level=&quot;DEBUG&quot; /&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>这个配置分别打印warn和error，可以有效定位问题。</p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：简单整合redis</title>
    <link href="https://qq1028951741.github.io/2018/11/26/SpringBoot%EF%BC%9A%E7%AE%80%E5%8D%95%E6%95%B4%E5%90%88redis/"/>
    <id>https://qq1028951741.github.io/2018/11/26/SpringBoot：简单整合redis/</id>
    <published>2018-11-26T09:18:13.000Z</published>
    <updated>2018-11-26T09:41:35.109Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：简单整合redis"><a href="#SpringBoot：简单整合redis" class="headerlink" title="SpringBoot：简单整合redis"></a>SpringBoot：简单整合redis</h2><h3 id="application-yml添加配置"><a href="#application-yml添加配置" class="headerlink" title="application.yml添加配置"></a>application.yml添加配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">redis:</span><br><span class="line">        host: 127.0.0.1</span><br><span class="line">        port: 6379</span><br><span class="line">        database: 0</span><br><span class="line">        timeout: 60s  # 数据库连接超时时间，2.0 中该参数的类型为Duration，这里在配置的时候需要指明单位</span><br><span class="line">        # 连接池配置，2.0中直接使用jedis或者lettuce配置连接池</span><br><span class="line">        jedis:</span><br><span class="line">          pool:</span><br><span class="line">            # 最大空闲连接数</span><br><span class="line">            max-idle: 500</span><br><span class="line">            # 最小空闲连接数</span><br><span class="line">            min-idle: 50</span><br><span class="line">            # 等待可用连接的最大时间，负数为不限制</span><br><span class="line">            max-wait:  -1s</span><br><span class="line">            # 最大活跃连接数，负数为不限制</span><br><span class="line">            max-active: -1</span><br></pre></td></tr></table></figure><p><code>这里的配置主要针对SpringBoot2.0以上的版本。</code></p><h3 id="RedisDao"><a href="#RedisDao" class="headerlink" title="RedisDao"></a>RedisDao</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.dao;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line">import org.springframework.data.redis.core.ValueOperations;</span><br><span class="line">import org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">@Repository</span><br><span class="line">public class RedisDao &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private StringRedisTemplate template;</span><br><span class="line"></span><br><span class="line">    public  void setKey(String key,String value)&#123;</span><br><span class="line">        ValueOperations&lt;String, String&gt; ops = template.opsForValue();</span><br><span class="line">        ops.set(key,value,1, TimeUnit.MINUTES);//1分钟过期</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getValue(String key)&#123;</span><br><span class="line">        ValueOperations&lt;String, String&gt; ops = this.template.opsForValue();</span><br><span class="line">        return ops.get(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Autowired RedisDao redisDao;</span><br><span class="line">    @Test</span><br><span class="line">    public void testRedis()&#123;</span><br><span class="line">        redisDao.setKey(&quot;name&quot;,&quot;fufu&quot;);</span><br><span class="line">        redisDao.setKey(&quot;age&quot;,&quot;18&quot;);</span><br><span class="line">        System.out.println(redisDao.getValue(&quot;name&quot;));</span><br><span class="line">        System.out.println(redisDao.getValue(&quot;age&quot;));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>除了StringRedisTemplate，还有其他template大家可以自己尝试下。</code></p></blockquote><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot：整合Shiro鉴权登录与权限管理</title>
    <link href="https://qq1028951741.github.io/2018/11/26/SpringBoot%EF%BC%9A%E6%95%B4%E5%90%88Shiro%E9%89%B4%E6%9D%83%E7%99%BB%E5%BD%95%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <id>https://qq1028951741.github.io/2018/11/26/SpringBoot：整合Shiro鉴权登录与权限管理/</id>
    <published>2018-11-26T02:18:13.000Z</published>
    <updated>2018-11-26T09:43:18.741Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：整合Shiro鉴权登录与权限管理"><a href="#SpringBoot：整合Shiro鉴权登录与权限管理" class="headerlink" title="SpringBoot：整合Shiro鉴权登录与权限管理"></a>SpringBoot：整合Shiro鉴权登录与权限管理</h2><h3 id="惯例，到目前文章位置的pom-xml"><a href="#惯例，到目前文章位置的pom-xml" class="headerlink" title="惯例，到目前文章位置的pom.xml"></a>惯例，到目前文章位置的pom.xml</h3><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springbootdemo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;springbootdemo&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.1.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- springboot-aop包,AOP切面注解,Aspectd等相关注解 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- json --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.31&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- swagger2 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 分页插件 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- alibaba的druid数据库连接池 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.9&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-datatype-joda&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-module-parameter-names&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- shiro core --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- shiro权限控制框架 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 引入Spring Boot 内嵌的Tomcat对jsp的解析包--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- servlet 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jsp 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jstl标签 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></li><li><p>新增部分主要为以下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- shiro core --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- shiro权限控制框架 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;shiro-spring&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 引入Spring Boot 内嵌的Tomcat对jsp的解析包--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- servlet 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jsp 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.3.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jstl标签 依赖的jar包start--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>主要为shiro和jsp登录界面服务</p></li></ul><h3 id="接下来配置shiro类"><a href="#接下来配置shiro类" class="headerlink" title="接下来配置shiro类"></a>接下来配置shiro类</h3><ul><li><p>配置文件夹新增AuthRealm类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import com.fufu.entity.Permission;</span><br><span class="line">import com.fufu.entity.Role;</span><br><span class="line">import com.fufu.entity.User;</span><br><span class="line">import com.fufu.service.LoginService;</span><br><span class="line">import org.apache.shiro.authc.*;</span><br><span class="line">import org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line">import org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line">import org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line">import org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line">import org.apache.shiro.util.ByteSource;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import java.util.Collection;</span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">public class AuthRealm extends AuthorizingRealm &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private LoginService loginService;</span><br><span class="line">    /**</span><br><span class="line">     * 为用户授权</span><br><span class="line">     * @param principals</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) &#123;</span><br><span class="line">        //获取前端输入的用户信息，封装为User对象</span><br><span class="line">        User userweb = (User) principals.getPrimaryPrincipal();</span><br><span class="line">        //获取前端输入的用户名</span><br><span class="line">        String username = userweb.getUsername();</span><br><span class="line">        //根据前端输入的用户名查询数据库中对应的记录</span><br><span class="line">        User user = loginService.findByUsername(username);</span><br><span class="line">        //如果数据库中有该用户名对应的记录，就进行授权操作</span><br><span class="line">        if (user != null)&#123;</span><br><span class="line">            SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();</span><br><span class="line">            //因为addRoles和addStringPermissions方法需要的参数类型是Collection</span><br><span class="line">            //所以先创建两个collection集合</span><br><span class="line">            Collection&lt;String&gt; rolesCollection = new HashSet&lt;String&gt;();</span><br><span class="line">            Collection&lt;String&gt; perStringCollection = new HashSet&lt;String&gt;();</span><br><span class="line">            //获取user的Role的set集合</span><br><span class="line">            Set&lt;Role&gt; roles = user.getRoles();</span><br><span class="line">            //遍历集合</span><br><span class="line">            for (Role role : roles)&#123;</span><br><span class="line">                //将每一个role的name装进collection集合</span><br><span class="line">                rolesCollection.add(role.getName());</span><br><span class="line">                //获取每一个Role的permission的set集合</span><br><span class="line">                Set&lt;Permission&gt; permissionSet =  role.getPermissions();</span><br><span class="line">                //遍历集合</span><br><span class="line">                for (Permission permission : permissionSet)&#123;</span><br><span class="line">                    //将每一个permission的name装进collection集合</span><br><span class="line">                    perStringCollection.add(permission.getName());</span><br><span class="line">                &#125;</span><br><span class="line">                //为用户授权</span><br><span class="line">                info.addStringPermissions(perStringCollection);</span><br><span class="line">            &#125;</span><br><span class="line">            //为用户授予角色</span><br><span class="line">            info.addRoles(rolesCollection);</span><br><span class="line">            return info;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 认证登录</span><br><span class="line">     * @param token</span><br><span class="line">     * @return</span><br><span class="line">     * @throws AuthenticationException</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException &#123;</span><br><span class="line">        //token携带了用户信息</span><br><span class="line">        UsernamePasswordToken usernamePasswordToken = (UsernamePasswordToken) token;</span><br><span class="line">        //获取前端输入的用户名</span><br><span class="line">        String userName  = usernamePasswordToken.getUsername();</span><br><span class="line">        //根据用户名查询数据库中对应的记录</span><br><span class="line">        User user = loginService.findByUsername(userName);</span><br><span class="line">        //当前realm对象的name</span><br><span class="line">        String realmName = getName();</span><br><span class="line">        //盐值</span><br><span class="line">        ByteSource credentialsSalt = ByteSource.Util.bytes(user.getUsername());</span><br><span class="line">        //封装用户信息，构建AuthenticationInfo对象并返回</span><br><span class="line">        AuthenticationInfo authcInfo = new SimpleAuthenticationInfo(user, user.getPassword(),</span><br><span class="line">                credentialsSalt, realmName);</span><br><span class="line">        return authcInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增ShiroConfiguration类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.authc.credential.HashedCredentialsMatcher;</span><br><span class="line">import org.apache.shiro.spring.LifecycleBeanPostProcessor;</span><br><span class="line">import org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor;</span><br><span class="line">import org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line">import org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line">import org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.DependsOn;</span><br><span class="line">import java.util.LinkedHashMap;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class ShiroConfiguration &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 密码校验规则HashedCredentialsMatcher</span><br><span class="line">     * 这个类是为了对密码进行编码的 ,</span><br><span class="line">     * 防止密码在数据库里明码保存 , 当然在登陆认证的时候 ,</span><br><span class="line">     * 这个类也负责对form里输入的密码进行编码</span><br><span class="line">     * 处理认证匹配处理器：如果自定义需要实现继承HashedCredentialsMatcher</span><br><span class="line">     */</span><br><span class="line">    @Bean(&quot;hashedCredentialsMatcher&quot;)</span><br><span class="line">    public HashedCredentialsMatcher hashedCredentialsMatcher() &#123;</span><br><span class="line">        HashedCredentialsMatcher credentialsMatcher = new HashedCredentialsMatcher();</span><br><span class="line">        //指定加密方式为MD5</span><br><span class="line">        credentialsMatcher.setHashAlgorithmName(&quot;MD5&quot;);</span><br><span class="line">        //加密次数</span><br><span class="line">        credentialsMatcher.setHashIterations(1024);</span><br><span class="line">        credentialsMatcher.setStoredCredentialsHexEncoded(true);</span><br><span class="line">        return credentialsMatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Bean(&quot;authRealm&quot;)</span><br><span class="line">    @DependsOn(&quot;lifecycleBeanPostProcessor&quot;)//可选</span><br><span class="line">    public AuthRealm authRealm(@Qualifier(&quot;hashedCredentialsMatcher&quot;) HashedCredentialsMatcher matcher) &#123;</span><br><span class="line">        AuthRealm authRealm = new AuthRealm();</span><br><span class="line">        authRealm.setAuthorizationCachingEnabled(false);</span><br><span class="line">        authRealm.setCredentialsMatcher(matcher);</span><br><span class="line">        return authRealm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 定义安全管理器securityManager,注入自定义的realm</span><br><span class="line">     * @param authRealm</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean(&quot;securityManager&quot;)</span><br><span class="line">    public DefaultWebSecurityManager securityManager(@Qualifier(&quot;authRealm&quot;) AuthRealm authRealm) &#123;</span><br><span class="line">        DefaultWebSecurityManager manager = new DefaultWebSecurityManager();</span><br><span class="line">        manager.setRealm(authRealm);</span><br><span class="line">        return manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 定义shiroFilter过滤器并注入securityManager</span><br><span class="line">     * @param manager</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean(&quot;shiroFilter&quot;)</span><br><span class="line">    public ShiroFilterFactoryBean shiroFilter(@Qualifier(&quot;securityManager&quot;) DefaultWebSecurityManager manager) &#123;</span><br><span class="line">        ShiroFilterFactoryBean bean = new ShiroFilterFactoryBean();</span><br><span class="line">        //设置securityManager</span><br><span class="line">        bean.setSecurityManager(manager);</span><br><span class="line">        //设置登录页面</span><br><span class="line">        //可以写路由也可以写jsp页面的访问路径</span><br><span class="line">        bean.setLoginUrl(&quot;/login&quot;);</span><br><span class="line">        //设置登录成功跳转的页面</span><br><span class="line">        bean.setSuccessUrl(&quot;/pages/index.jsp&quot;);</span><br><span class="line">        //设置未授权跳转的页面</span><br><span class="line">        bean.setUnauthorizedUrl(&quot;/pages/unauthorized.jsp&quot;);</span><br><span class="line">        //定义过滤器</span><br><span class="line">        LinkedHashMap&lt;String, String&gt; filterChainDefinitionMap = new LinkedHashMap&lt;&gt;();</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/index&quot;, &quot;authc&quot;);</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/login&quot;, &quot;anon&quot;);</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/loginUser&quot;, &quot;anon&quot;);</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/admin&quot;, &quot;roles[admin]&quot;);</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/edit&quot;, &quot;perms[delete]&quot;);</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/druid/**&quot;, &quot;anon&quot;);</span><br><span class="line">        //需要登录访问的资源 , 一般将/**放在最下边</span><br><span class="line">        filterChainDefinitionMap.put(&quot;/**&quot;, &quot;authc&quot;);</span><br><span class="line">        bean.setFilterChainDefinitionMap(filterChainDefinitionMap);</span><br><span class="line">        return bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Spring的一个bean , 由Advisor决定对哪些类的方法进行AOP代理 .</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() &#123;</span><br><span class="line">        DefaultAdvisorAutoProxyCreator creator = new DefaultAdvisorAutoProxyCreator();</span><br><span class="line">        creator.setProxyTargetClass(true);</span><br><span class="line">        return creator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 配置shiro跟spring的关联</span><br><span class="line">     * @param securityManager</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(@Qualifier(&quot;securityManager&quot;) DefaultWebSecurityManager securityManager) &#123;</span><br><span class="line">        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();</span><br><span class="line">        advisor.setSecurityManager(securityManager);</span><br><span class="line">        return advisor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * lifecycleBeanPostProcessor是负责生命周期的 , 初始化和销毁的类</span><br><span class="line">     * (可选)</span><br><span class="line">     */</span><br><span class="line">    @Bean(&quot;lifecycleBeanPostProcessor&quot;)</span><br><span class="line">    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() &#123;</span><br><span class="line">        return new LifecycleBeanPostProcessor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="接下来MVC三层"><a href="#接下来MVC三层" class="headerlink" title="接下来MVC三层"></a>接下来MVC三层</h3><ul><li><p>entity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.entity;</span><br><span class="line"></span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">public class User &#123;</span><br><span class="line">    private  Integer uid;</span><br><span class="line">    private  String username;</span><br><span class="line">    private  String password;</span><br><span class="line">    private Set&lt;Role&gt; roles = new HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public Integer getUid() &#123;</span><br><span class="line">        return uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUid(Integer uid) &#123;</span><br><span class="line">        this.uid = uid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getUsername() &#123;</span><br><span class="line">        return username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUsername(String username) &#123;</span><br><span class="line">        this.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPassword() &#123;</span><br><span class="line">        return password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPassword(String password) &#123;</span><br><span class="line">        this.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Set&lt;Role&gt; getRoles() &#123;</span><br><span class="line">        return roles;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setRoles(Set&lt;Role&gt; roles) &#123;</span><br><span class="line">        this.roles = roles;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.entity;</span><br><span class="line"></span><br><span class="line">import java.util.HashSet;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">public class Role &#123;</span><br><span class="line">    private  Integer rid;</span><br><span class="line">    private  String name;</span><br><span class="line">    private Set&lt;Permission&gt; permissions = new HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public Integer getRid() &#123;</span><br><span class="line">        return rid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setRid(Integer rid) &#123;</span><br><span class="line">        this.rid = rid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Set&lt;Permission&gt; getPermissions() &#123;</span><br><span class="line">        return permissions;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPermissions(Set&lt;Permission&gt; permissions) &#123;</span><br><span class="line">        this.permissions = permissions;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.entity;</span><br><span class="line"></span><br><span class="line">public class Permission &#123;</span><br><span class="line">    private  Integer pid;</span><br><span class="line">    private  String  name;</span><br><span class="line">    public Integer getPid() &#123;</span><br><span class="line">        return pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPid(Integer pid) &#123;</span><br><span class="line">        this.pid = pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>controller</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.controller;</span><br><span class="line"></span><br><span class="line">import org.apache.shiro.SecurityUtils;</span><br><span class="line">import org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line">import org.apache.shiro.authz.annotation.RequiresRoles;</span><br><span class="line">import org.apache.shiro.crypto.hash.SimpleHash;</span><br><span class="line">import org.apache.shiro.subject.Subject;</span><br><span class="line">import org.apache.shiro.util.ByteSource;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line">public class LoginController&#123;</span><br><span class="line"></span><br><span class="line">    //用户登录</span><br><span class="line">    @RequestMapping(&quot;/loginUser&quot;)</span><br><span class="line">    public String loginUser(@RequestParam(&quot;username&quot;) String username,</span><br><span class="line">                            @RequestParam(&quot;password&quot;) String password,</span><br><span class="line">                            HttpSession session) &#123;</span><br><span class="line">        //把前端输入的username和password封装为token</span><br><span class="line">        UsernamePasswordToken token = new UsernamePasswordToken(username, password);</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        try &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            session.setAttribute(&quot;user&quot;, subject.getPrincipal());</span><br><span class="line">            return &quot;index&quot;;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            return &quot;login&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //退出登录</span><br><span class="line">    @RequestMapping(&quot;/logout&quot;)</span><br><span class="line">    public String logout() &#123;</span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        if (subject != null) &#123;</span><br><span class="line">            subject.logout();</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;login&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //访问login时跳到login.jsp</span><br><span class="line">    @RequestMapping(&quot;/login&quot;)</span><br><span class="line">    public String login() &#123;</span><br><span class="line">        return &quot;login&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //admin角色才能访问</span><br><span class="line">    @RequestMapping(&quot;/admin&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String admin() &#123;</span><br><span class="line">        return &quot;admin success&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //有delete权限才能访问</span><br><span class="line">    @RequestMapping(&quot;/edit&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String edit() &#123;</span><br><span class="line">        return &quot;edit success&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/test&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    @RequiresRoles(&quot;guest&quot;)</span><br><span class="line">    public String test()&#123;</span><br><span class="line">        return &quot;test success&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.service;</span><br><span class="line"></span><br><span class="line">import com.fufu.config.DS;</span><br><span class="line">import com.fufu.entity.BlogVisitor;</span><br><span class="line">import com.fufu.entity.User;</span><br><span class="line">import com.fufu.entity.UserInfo;</span><br><span class="line">import com.fufu.mapper.BlogVisitorMapper;</span><br><span class="line">import com.fufu.mapper.UserAuthMapper;</span><br><span class="line">import com.fufu.mapper.UserInfoMapper;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">@Transactional</span><br><span class="line">public class LoginService &#123;</span><br><span class="line">    @Autowired private UserAuthMapper userAuthMapper;</span><br><span class="line"></span><br><span class="line">    //shiro鉴权</span><br><span class="line">    @DS(&quot;datasource1&quot;)</span><br><span class="line">    public User findByUsername(String username) &#123;</span><br><span class="line">        return userAuthMapper.findByUsername(username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>mapper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.mapper;</span><br><span class="line"></span><br><span class="line">import com.fufu.entity.User;</span><br><span class="line">import org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line">@Mapper</span><br><span class="line">public interface UserAuthMapper&#123;</span><br><span class="line">    User findByUsername(String username);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="mybatis的mapper-xml"><a href="#mybatis的mapper-xml" class="headerlink" title="mybatis的mapper.xml"></a>mybatis的mapper.xml</h3><ul><li><p>UserAuthMapper.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class="line">&lt;mapper namespace=&quot;com.fufu.mapper.UserAuthMapper&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;resultMap id=&quot;userMap&quot; type=&quot;com.fufu.entity.User&quot;&gt;</span><br><span class="line">        &lt;id property=&quot;uid&quot; column=&quot;uid&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;username&quot; column=&quot;user_name&quot;/&gt;</span><br><span class="line">        &lt;result property=&quot;password&quot; column=&quot;pass_word&quot;/&gt;</span><br><span class="line">        &lt;collection property=&quot;roles&quot; ofType=&quot;com.fufu.entity.Role&quot;&gt;</span><br><span class="line">            &lt;id property=&quot;rid&quot; column=&quot;rid&quot;/&gt;</span><br><span class="line">            &lt;result property=&quot;name&quot; column=&quot;role_name&quot;/&gt;</span><br><span class="line">            &lt;collection property=&quot;permissions&quot; ofType=&quot;com.fufu.entity.Permission&quot;&gt;</span><br><span class="line">                &lt;id property=&quot;pid&quot; column=&quot;pid&quot;/&gt;</span><br><span class="line">                &lt;result property=&quot;name&quot; column=&quot;permission_name&quot;/&gt;</span><br><span class="line">            &lt;/collection&gt;</span><br><span class="line">        &lt;/collection&gt;</span><br><span class="line">    &lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">    &lt;select id=&quot;findByUsername&quot; parameterType=&quot;string&quot; resultMap=&quot;userMap&quot;&gt;</span><br><span class="line">        SELECT *</span><br><span class="line">        FROM login_user u,login_role r,login_permission p</span><br><span class="line">        WHERE u.rid=r.rid</span><br><span class="line">        AND p.rid=r.rid</span><br><span class="line">        AND u.user_name=#&#123;username&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="jsp视图"><a href="#jsp视图" class="headerlink" title="jsp视图"></a>jsp视图</h3><p><img src="/images/shiro视图层.jpg" alt="&quot;图片描述&quot;"></p><ul><li><p>新建webapp目录，结构如图</p></li><li><p>index.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;fufu登录管理系统&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;欢迎登录，$&#123;user.username&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;a href=&lt;%=request.getContextPath() +&quot;/admin&quot; %&gt;&gt;admin权限访问&lt;/a&gt;</span><br><span class="line">    &lt;a href=&lt;%=request.getContextPath() +&quot;/test&quot; %&gt;&gt;guest权限访问&lt;/a&gt;</span><br><span class="line">    &lt;input type = &quot;button&quot; value = &quot;登出&quot; onclick=&quot;javascript:window.location.href=&apos;/logout&apos;;&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>login.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;欢迎登录！&lt;/h1&gt;</span><br><span class="line">&lt;form action=&quot;/loginUser&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>unauthorized.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Error&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">无相应权限!</span><br><span class="line">&lt;input type = &quot;button&quot; value = &quot;重新登录&quot; onclick=&quot;javascript:window.location.href=&apos;/logout&apos;;&quot;&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="与此同时，添加SpringBoot配置文件配置"><a href="#与此同时，添加SpringBoot配置文件配置" class="headerlink" title="与此同时，添加SpringBoot配置文件配置"></a>与此同时，添加SpringBoot配置文件配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">    mvc:</span><br><span class="line">        view:</span><br><span class="line">          prefix: /pages/</span><br><span class="line">          suffix: .jsp</span><br></pre></td></tr></table></figure><h3 id="数据库层面"><a href="#数据库层面" class="headerlink" title="数据库层面"></a>数据库层面</h3><ul><li><p>三个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : localhost</span><br><span class="line">Source Server Version : 50610</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : mytest1</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50610</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2018-11-26 15:20:59</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for `login_user`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `login_user`;</span><br><span class="line">CREATE TABLE `login_user` (</span><br><span class="line">  `uid` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `pass_word` varchar(255) DEFAULT NULL,</span><br><span class="line">  `rid` bigint(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`uid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of login_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `login_user` VALUES (&apos;1&apos;, &apos;admin&apos;, &apos;df655ad8d3229f3269fad2a8bab59b6c&apos;, &apos;1&apos;);</span><br><span class="line">INSERT INTO `login_user` VALUES (&apos;2&apos;, &apos;guest&apos;, &apos;7c6104076beb13d44ff28e371c8da8b4&apos;, &apos;2&apos;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : localhost</span><br><span class="line">Source Server Version : 50610</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : mytest1</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50610</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2018-11-26 15:21:06</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for `login_role`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `login_role`;</span><br><span class="line">CREATE TABLE `login_role` (</span><br><span class="line">  `rid` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`rid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of login_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `login_role` VALUES (&apos;1&apos;, &apos;admin&apos;);</span><br><span class="line">INSERT INTO `login_role` VALUES (&apos;2&apos;, &apos;guest&apos;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : localhost</span><br><span class="line">Source Server Version : 50610</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : mytest1</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50610</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2018-11-26 15:21:11</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for `login_permission`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `login_permission`;</span><br><span class="line">CREATE TABLE `login_permission` (</span><br><span class="line">  `pid` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `permission_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `rid` bigint(20) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`pid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of login_permission</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `login_permission` VALUES (&apos;1&apos;, &apos;query&apos;, &apos;1&apos;);</span><br><span class="line">INSERT INTO `login_permission` VALUES (&apos;2&apos;, &apos;delete&apos;, &apos;1&apos;);</span><br><span class="line">INSERT INTO `login_permission` VALUES (&apos;3&apos;, &apos;update&apos;, &apos;1&apos;);</span><br><span class="line">INSERT INTO `login_permission` VALUES (&apos;4&apos;, &apos;create&apos;, &apos;1&apos;);</span><br><span class="line">INSERT INTO `login_permission` VALUES (&apos;5&apos;, &apos;query&apos;, &apos;2&apos;);</span><br></pre></td></tr></table></figure></li><li><p>这里的login_user表的密码需要自己用单元测试进行加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.httprequest;</span><br><span class="line"></span><br><span class="line">import com.fufu.SpringBootDemoApplication;</span><br><span class="line">import org.apache.shiro.crypto.hash.SimpleHash;</span><br><span class="line">import org.apache.shiro.util.ByteSource;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest(classes = SpringBootDemoApplication.class)</span><br><span class="line">public class SpringBootDemoApplicationTests &#123;</span><br><span class="line">    @Test</span><br><span class="line">    public void passwordMD5() &#123;</span><br><span class="line">        String hashAlgorithName = &quot;MD5&quot;;</span><br><span class="line">        String password = &quot;123&quot;;</span><br><span class="line">        int hashIterations = 1024;//加密次数</span><br><span class="line">        ByteSource credentialsSalt = ByteSource.Util.bytes(&quot;guest&quot;);</span><br><span class="line">        Object obj = new SimpleHash(hashAlgorithName, password, credentialsSalt, hashIterations);</span><br><span class="line">        System.out.println(obj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>我们可以用@RequiresRoles(“guest”)来指定访问角色，可以通过ShiroConfiguration里的shiroFilter过滤器来进行过滤，代码里面已经有角色和权限配置的示例了</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/images/shiro效果图1.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/shiro效果图2.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/shiro效果图4.png" alt="&quot;图片描述&quot;"></p><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot：整合mybatis-generate &amp;&amp; 多数据源多事务 &amp;&amp; Druid sql监控</title>
    <link href="https://qq1028951741.github.io/2018/11/23/Spring%20Boot%EF%BC%9A%E6%95%B4%E5%90%88mybatis-generate%20&amp;&amp;%20%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%A4%9A%E4%BA%8B%E5%8A%A1%20&amp;&amp;%20Druid%20sql%E7%9B%91%E6%8E%A7/"/>
    <id>https://qq1028951741.github.io/2018/11/23/Spring Boot：整合mybatis-generate &amp;&amp; 多数据源多事务 &amp;&amp; Druid sql监控/</id>
    <published>2018-11-23T02:18:13.000Z</published>
    <updated>2018-11-26T09:43:09.029Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="Spring-Boot：整合mybatis-generate-amp-amp-多数据源多事务-amp-amp-Druid-sql监控"><a href="#Spring-Boot：整合mybatis-generate-amp-amp-多数据源多事务-amp-amp-Druid-sql监控" class="headerlink" title="Spring Boot：整合mybatis-generate &amp;&amp; 多数据源多事务 &amp;&amp; Druid sql监控"></a>Spring Boot：整合mybatis-generate &amp;&amp; 多数据源多事务 &amp;&amp; Druid sql监控</h2><h3 id="开头贴上整个项目目前为止的pom-xml"><a href="#开头贴上整个项目目前为止的pom-xml" class="headerlink" title="开头贴上整个项目目前为止的pom.xml"></a>开头贴上整个项目目前为止的pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">    &lt;groupId&gt;com.fufu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springbootdemo&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">    &lt;name&gt;springbootdemo&lt;/name&gt;</span><br><span class="line">    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.0.1.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line">    &lt;properties&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">        &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- springboot-aop包,AOP切面注解,Aspectd等相关注解 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.4&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- json --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.8&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- swagger2 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 分页插件 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- alibaba的druid数据库连接池 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.9&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.datatype&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-datatype-joda&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jackson-module-parameter-names&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.3.13.RELEASE&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h3 id="整合mybatis-generate"><a href="#整合mybatis-generate" class="headerlink" title="整合mybatis-generate"></a>整合mybatis-generate</h3><ul><li><p>这里 <code>pom.xml</code> 里只要在build-plugin下加上generator就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">       &lt;plugins&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">           &lt;plugin&gt;</span><br><span class="line">               &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">               &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">               &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">           &lt;/plugin&gt;</span><br><span class="line">       &lt;/plugins&gt;</span><br><span class="line">   &lt;/build&gt;</span><br></pre></td></tr></table></figure></li><li><p>在resources下新建文件generatorConfig.xml，文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包--&gt;</span><br><span class="line">    &lt;classPathEntry  location=&quot;D:\software\apache-tomcat-7.0.52\lib\mysql-connector-java-5.1.23.jar&quot;/&gt;</span><br><span class="line">    &lt;context id=&quot;DB2Tables&quot;  targetRuntime=&quot;MyBatis3&quot;&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line">        &lt;!--数据库链接URL，用户名、密码 --&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://127.0.0.1/mytest2&quot; userId=&quot;root&quot; password=&quot;orcl&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line">        &lt;!-- 生成模型的包名和位置--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.fufu.entity&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!-- 生成映射文件的包名和位置--&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mappering&quot; targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line">        &lt;!-- 生成DAO的包名和位置--&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.fufu.mapper&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line">        &lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt;</span><br><span class="line">        &lt;table tableName=&quot;user_info&quot; domainObjectName=&quot;UserInfo&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt;&lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></li><li><p>这里多数据源的也可以参考我的目录结果，多建个generator目录，需要的时候复制到外面的generatorConfig.xml文件就可以了</p><p><img src="/images/resources目录结构.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>idea启动配置</p><p><img src="/images/mybatis-generate配置.jpg" alt="&quot;图片描述&quot;"></p></li><li><p>这里要注意不要重复生成，重复生成会在**Mapper.xml添加重复的sql，这个很难发现</p></li></ul><h3 id="接下来是多数据源、多事务和Druid整合"><a href="#接下来是多数据源、多事务和Druid整合" class="headerlink" title="接下来是多数据源、多事务和Druid整合"></a>接下来是多数据源、多事务和Druid整合</h3><ul><li><p>因为要配置多数据源，所以要把DataSourceAutoConfiguration.class去掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在启动类上加上</span><br><span class="line">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建DataSourceConfig类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceBuilder;</span><br><span class="line">import com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line">import com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line">import org.springframework.transaction.PlatformTransactionManager;</span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 多数据源配置类</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class DataSourceConfig &#123;</span><br><span class="line">    //数据源1</span><br><span class="line">    @Bean(name = &quot;datasource1&quot;)</span><br><span class="line">    @ConfigurationProperties(prefix = &quot;spring.datasource.primary&quot;) // application.properteis中对应属性的前缀</span><br><span class="line">    public DataSource dataSource1() &#123;</span><br><span class="line">        return DruidDataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //数据源2</span><br><span class="line">    @Bean(name = &quot;datasource2&quot;)</span><br><span class="line">    @ConfigurationProperties(prefix = &quot;spring.datasource.slave&quot;) // application.properteis中对应属性的前缀</span><br><span class="line">    public DataSource dataSource2() &#123;</span><br><span class="line">        return DruidDataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //druid</span><br><span class="line">    @Bean</span><br><span class="line">    public ServletRegistrationBean druidStatViewServlet() &#123;</span><br><span class="line">        ServletRegistrationBean registrationBean = new ServletRegistrationBean(new StatViewServlet(), &quot;/druid/*&quot;);</span><br><span class="line">        registrationBean.addInitParameter(&quot;allow&quot;, &quot;127.0.0.1&quot;); // IP白名单 (没有配置或者为空，则允许所有访问)</span><br><span class="line">        registrationBean.addInitParameter(&quot;deny&quot;, &quot;&quot;); // IP黑名单 (存在共同时，deny优先于allow)</span><br><span class="line">        registrationBean.addInitParameter(&quot;loginUsername&quot;, &quot;admin&quot;);</span><br><span class="line">        registrationBean.addInitParameter(&quot;loginPassword&quot;, &quot;admin&quot;);</span><br><span class="line">        registrationBean.addInitParameter(&quot;resetEnable&quot;, &quot;false&quot;);</span><br><span class="line">        return registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public FilterRegistrationBean druidWebStatViewFilter() &#123;</span><br><span class="line">        FilterRegistrationBean registrationBean = new FilterRegistrationBean(new WebStatFilter());</span><br><span class="line">        registrationBean.addInitParameter(&quot;urlPatterns&quot;, &quot;/*&quot;);</span><br><span class="line">        registrationBean.addInitParameter(&quot;exclusions&quot;, &quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;);</span><br><span class="line">        return registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 动态数据源: 通过AOP在不同数据源之间动态切换</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Primary</span><br><span class="line">    @Bean(name = &quot;dynamicDataSource&quot;)</span><br><span class="line">    public DataSource dynamicDataSource() &#123;</span><br><span class="line">        DynamicDataSource dynamicDataSource = new DynamicDataSource();</span><br><span class="line">        // 默认数据源</span><br><span class="line">        dynamicDataSource.setDefaultTargetDataSource(dataSource1());</span><br><span class="line">        // 配置多数据源</span><br><span class="line">        Map&lt;Object, Object&gt; dsMap = new HashMap();</span><br><span class="line">        dsMap.put(&quot;datasource1&quot;, dataSource1());</span><br><span class="line">        dsMap.put(&quot;datasource2&quot;, dataSource2());</span><br><span class="line"></span><br><span class="line">        dynamicDataSource.setTargetDataSources(dsMap);</span><br><span class="line">        return dynamicDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 配置@Transactional注解事物</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public PlatformTransactionManager transactionManager() &#123;</span><br><span class="line">        return new DataSourceTransactionManager(dynamicDataSource());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建DataSourceContextHolder类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">public class DataSourceContextHolder &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 默认数据源</span><br><span class="line">     */</span><br><span class="line">    public static final String DEFAULT_DS = &quot;datasource1&quot;;</span><br><span class="line"></span><br><span class="line">    private static final ThreadLocal&lt;String&gt; contextHolder = new ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    // 设置数据源名</span><br><span class="line">    public static void setDB(String dbType) &#123;</span><br><span class="line">        System.out.println(&quot;切换到&#123;&quot;+dbType+&quot;&#125;数据源&quot;);</span><br><span class="line">        contextHolder.set(dbType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 获取数据源名</span><br><span class="line">    public static String getDB() &#123;</span><br><span class="line">        return (contextHolder.get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 清除数据源名</span><br><span class="line">    public static void clearDB() &#123;</span><br><span class="line">        contextHolder.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建DS注解动态切换数据源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import java.lang.annotation.ElementType;</span><br><span class="line">import java.lang.annotation.Retention;</span><br><span class="line">import java.lang.annotation.RetentionPolicy;</span><br><span class="line">import java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 自定义注解</span><br><span class="line"> */</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="line">@Target(&#123;ElementType.METHOD&#125;)</span><br><span class="line">public @interface DS &#123;</span><br><span class="line">    String value() default &quot;datasource1&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建DynamicDataSource类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line">public class DynamicDataSource extends AbstractRoutingDataSource &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected Object determineCurrentLookupKey() &#123;</span><br><span class="line">        System.out.println(&quot;数据源为&quot;+DataSourceContextHolder.getDB());</span><br><span class="line">        return DataSourceContextHolder.getDB();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建DynamicDataSourceAspect类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.config;</span><br><span class="line"></span><br><span class="line">import org.aspectj.lang.JoinPoint;</span><br><span class="line">import org.aspectj.lang.annotation.After;</span><br><span class="line">import org.aspectj.lang.annotation.Aspect;</span><br><span class="line">import org.aspectj.lang.annotation.Before;</span><br><span class="line">import org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line">import org.springframework.core.annotation.Order;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 自定义注解 + AOP的方式实现数据源动态切换。</span><br><span class="line"> */</span><br><span class="line">@Aspect</span><br><span class="line">@Component</span><br><span class="line">@Order(0)</span><br><span class="line">public class DynamicDataSourceAspect &#123;</span><br><span class="line"></span><br><span class="line">    @Before(&quot;@annotation(DS)&quot;)</span><br><span class="line">    public void beforeSwitchDS(JoinPoint point)&#123;</span><br><span class="line">        //获得当前访问的class</span><br><span class="line">        Class&lt;?&gt; className = point.getTarget().getClass();</span><br><span class="line">        //获得访问的方法名</span><br><span class="line">        String methodName = point.getSignature().getName();</span><br><span class="line">        //得到方法的参数的类型</span><br><span class="line">        Class[] argClass = ((MethodSignature)point.getSignature()).getParameterTypes();</span><br><span class="line">        String dataSource = DataSourceContextHolder.DEFAULT_DS;</span><br><span class="line">        try &#123;</span><br><span class="line">            // 得到访问的方法对象</span><br><span class="line">            Method method = className.getMethod(methodName, argClass);</span><br><span class="line">            // 判断是否存在@DS注解</span><br><span class="line">            if (method.isAnnotationPresent(DS.class)) &#123;</span><br><span class="line">                DS annotation = method.getAnnotation(DS.class);</span><br><span class="line">                // 取出注解中的数据源名</span><br><span class="line">                dataSource = annotation.value();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        // 切换数据源</span><br><span class="line">        DataSourceContextHolder.setDB(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @After(&quot;@annotation(DS)&quot;)</span><br><span class="line">    public void afterSwitchDS(JoinPoint point)&#123;</span><br><span class="line">        DataSourceContextHolder.clearDB();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>这里说下我踩过的坑吧，DataSourceConfig.java中的数据源配置需要设置一个@Primary作为默认数据源</p></li><li><p>还有DynamicDataSourceAspect.java数据源切换的时候，需要加个@Order(0)，不然事务开启时，数据源也会切换失败！</p></li><li><p>这是我的Controller层</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.controller;</span><br><span class="line"></span><br><span class="line">import com.fufu.entity.BlogVisitor;</span><br><span class="line">import com.fufu.entity.UserInfo;</span><br><span class="line">import com.fufu.service.RestfulService;</span><br><span class="line">import com.fufu.tools.JsonUtil;</span><br><span class="line">import com.github.pagehelper.PageHelper;</span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParam;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@EnableTransactionManagement</span><br><span class="line">@RequestMapping(value = &quot;/blogvisitor&quot;)</span><br><span class="line">public class RestfulController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    RestfulService restfulService;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;添加访客&quot;, notes=&quot;添加访客&quot;)</span><br><span class="line">    @PostMapping(value = &quot;/add&quot;, produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;)</span><br><span class="line">    public String addBlogVisitor(@RequestBody BlogVisitor blogVisitor) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            restfulService.addBlogVisitor(blogVisitor);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;保存访问者失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;data&quot;,blogVisitor).putData(&quot;msg&quot;, &quot;保存访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;删除访客&quot;, notes=&quot;删除访客&quot;)</span><br><span class="line">    @ApiImplicitParam(name = &quot;id&quot;, value = &quot;访客id&quot;, required = true, dataType = &quot;Long&quot;)</span><br><span class="line">    @GetMapping(value = &quot;/delete&quot;, produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;)</span><br><span class="line">    public String deleteBlogVisitor(Long id) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            restfulService.deleteBlogVisitor(id);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;删除访问者失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;msg&quot;, &quot;删除访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;更新访客&quot;, notes=&quot;更新访客&quot;)</span><br><span class="line">    @PostMapping(value = &quot;/update&quot;, produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;)</span><br><span class="line">    public String updateBlogVisitor(@RequestBody BlogVisitor blogVisitor) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            restfulService.updateBlogVisitor(blogVisitor);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;更新访问者失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;msg&quot;, &quot;更新访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;查询访客列表&quot;, notes=&quot;查询访客列表&quot;)</span><br><span class="line">    @GetMapping(value = &quot;/qry&quot;)</span><br><span class="line">    public String qryBlogVisitorList(@RequestParam(defaultValue = &quot;1&quot;) Integer pageNum, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize) &#123;</span><br><span class="line">        PageHelper.startPage(pageNum,pageSize); //pageNum表示页数, pageSize表示每页的大小</span><br><span class="line">        PageHelper.orderBy(&quot;visit_time DESC&quot;); //进行分页结果的排序，visit_time为字段名，排序规则DESC/ASC</span><br><span class="line">        List&lt;BlogVisitor&gt; resultList = null;</span><br><span class="line">        PageInfo pageInfo = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            resultList = restfulService.qryBlogVisitorList();</span><br><span class="line">            pageInfo = new PageInfo&lt;BlogVisitor&gt;(resultList);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询访问者失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        if(resultList == null)</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询不到数据!&quot;).pushData();</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;data&quot;,pageInfo).putData(&quot;msg&quot;, &quot;查询访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;查询用戶列表&quot;, notes=&quot;查询用戶列表&quot;)</span><br><span class="line">    @GetMapping(value = &quot;/qryUser&quot;)</span><br><span class="line">    public String qryUserList(@RequestParam(defaultValue = &quot;1&quot;) Integer pageNum, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize) &#123;</span><br><span class="line">        PageHelper.startPage(pageNum,pageSize); //pageNum表示页数, pageSize表示每页的大小</span><br><span class="line">        List&lt;UserInfo&gt; resultList = null;</span><br><span class="line">        PageInfo pageInfo = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            resultList = restfulService.qryUserList();</span><br><span class="line">            pageInfo = new PageInfo&lt;UserInfo&gt;(resultList);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询用戶失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        if(resultList == null)</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询不到数据!&quot;).pushData();</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;data&quot;,pageInfo).putData(&quot;msg&quot;, &quot;查询用戶成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ApiOperation(value=&quot;添加用户&quot;, notes=&quot;添加用户&quot;)</span><br><span class="line">    @PostMapping(value = &quot;/addUser&quot;, produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;)</span><br><span class="line">    public String addUser(@RequestBody UserInfo userInfo) &#123;</span><br><span class="line">            restfulService.addUserInfo(userInfo);</span><br><span class="line">//            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;保存访问者失败!&quot;).pushData();</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;data&quot;,userInfo).putData(&quot;msg&quot;, &quot;保存访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Service层</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package com.fufu.service;</span><br><span class="line"></span><br><span class="line">import com.fufu.config.DS;</span><br><span class="line">import com.fufu.entity.BlogVisitor;</span><br><span class="line">import com.fufu.entity.UserInfo;</span><br><span class="line">import com.fufu.mapper.BlogVisitorMapper;</span><br><span class="line">import com.fufu.mapper.UserInfoMapper;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">@Transactional</span><br><span class="line">public class RestfulService &#123;</span><br><span class="line">    @Autowired private BlogVisitorMapper blogVisitorMapper;</span><br><span class="line">    @Autowired private UserInfoMapper userInfoMapper;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource1&quot;)</span><br><span class="line">    public void addBlogVisitor(BlogVisitor blogVisitor) &#123;</span><br><span class="line">        blogVisitor.setVisitorName(&quot;i am tester&quot;);</span><br><span class="line">        blogVisitorMapper.insert(blogVisitor);</span><br><span class="line">        throw new ArithmeticException(&quot;heiheihei&quot;);//事务测试</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource1&quot;)</span><br><span class="line">    public void deleteBlogVisitor(Long id) &#123;</span><br><span class="line">        blogVisitorMapper.deleteByPrimaryKey(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource1&quot;)</span><br><span class="line">    public void updateBlogVisitor(BlogVisitor blogVisitor) &#123;</span><br><span class="line">        blogVisitorMapper.updateByPrimaryKey(blogVisitor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource1&quot;)</span><br><span class="line">    public List&lt;BlogVisitor&gt; qryBlogVisitorList() &#123;</span><br><span class="line">        return blogVisitorMapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource2&quot;)</span><br><span class="line">    public List&lt;UserInfo&gt; qryUserList()throws Exception &#123;</span><br><span class="line">        return userInfoMapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @DS(&quot;datasource2&quot;)</span><br><span class="line">    public void addUserInfo(UserInfo userInfo)&#123;</span><br><span class="line">        userInfo.setUserName(&quot;i am master&quot;);</span><br><span class="line">        userInfoMapper.insert(userInfo);</span><br><span class="line">//        throw new RuntimeException(&quot;heiheihei&quot;);//事务测试</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>SpringBoot配置文件 application.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8080</span><br><span class="line"></span><br><span class="line">#  datasource:</span><br><span class="line">#    #使用druid连接池</span><br><span class="line">#    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">#    db1:</span><br><span class="line">#      jdbc-url: jdbc:mysql://127.0.0.1:3306/mytest1?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br><span class="line">#      username: root</span><br><span class="line">#      password: orcl</span><br><span class="line">#      driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">#    db2:</span><br><span class="line">#      jdbc-url: jdbc:mysql://127.0.0.1:3306/mytest2?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><br><span class="line">#      username: root</span><br><span class="line">#      password: orcl</span><br><span class="line">#      driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line"></span><br><span class="line">## 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别</span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:/mappering/*.xml  #注意：一定要对应mapper映射xml文件的所在路径</span><br><span class="line">  type-aliases-package: com.fufu.mapper</span><br><span class="line">#  config-locations: classpath:mybatis/mybatis-config.xml</span><br><span class="line"></span><br><span class="line">#pagehelper</span><br><span class="line">pagehelper:</span><br><span class="line">  helperDialect: mysql</span><br><span class="line">  reasonable: true</span><br><span class="line">  supportMethodsArguments: true</span><br><span class="line">  params: count=countSql</span><br><span class="line">  returnPageInfo: check</span><br><span class="line"></span><br><span class="line"># Spring configuration</span><br><span class="line">spring:</span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">    time-zone: GMT+8</span><br><span class="line">  thymeleaf:</span><br><span class="line">    cache: false</span><br><span class="line">  mvc:</span><br><span class="line">    view:</span><br><span class="line">      prefix: /pages/</span><br><span class="line">      suffix: .jsp</span><br><span class="line">  #Multi DataSource Config</span><br><span class="line">  datasource:</span><br><span class="line">    primary:</span><br><span class="line">      url: jdbc:mysql://localhost:3306/mytest1</span><br><span class="line">      username: root</span><br><span class="line">      password: orcl</span><br><span class="line">      driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">      ###################以下为druid增加的配置###########################</span><br><span class="line">      type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">      # 下面为连接池的补充设置，应用到上面所有数据源中</span><br><span class="line">      # 初始化大小，最小，最大</span><br><span class="line">      initialSize: 5</span><br><span class="line">      minIdle: 5</span><br><span class="line">      maxActive: 20</span><br><span class="line">      # 配置获取连接等待超时的时间</span><br><span class="line">      maxWait: 60000</span><br><span class="line">      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">      timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">      # 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">      minEvictableIdleTimeMillis: 300000</span><br><span class="line">      validationQuery: SELECT 1 FROM DUAL</span><br><span class="line">      testWhileIdle: true</span><br><span class="line">      testOnBorrow: false</span><br><span class="line">      testOnReturn: false</span><br><span class="line">      # 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">      poolPreparedStatements: true</span><br><span class="line">      maxPoolPreparedStatementPerConnectionSize: 20</span><br><span class="line">      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙，此处是filter修改的地方</span><br><span class="line">      filters:</span><br><span class="line">        commons-log.connection-logger-name: stat,wall,log4j</span><br><span class="line">      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span><br><span class="line">      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span><br><span class="line">      # 合并多个DruidDataSource的监控数据</span><br><span class="line">      useGlobalDataSourceStat: true</span><br><span class="line">    slave:</span><br><span class="line">      url: jdbc:mysql://localhost:3306/mytest2</span><br><span class="line">      username: root</span><br><span class="line">      password: orcl</span><br><span class="line">      driver-class-name: com.mysql.jdbc.Driver</span><br><span class="line">      ###################以下为druid增加的配置###########################</span><br><span class="line">      type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">      # 下面为连接池的补充设置，应用到上面所有数据源中</span><br><span class="line">      # 初始化大小，最小，最大</span><br><span class="line">      initialSize: 5</span><br><span class="line">      minIdle: 5</span><br><span class="line">      maxActive: 20</span><br><span class="line">      # 配置获取连接等待超时的时间</span><br><span class="line">      maxWait: 60000</span><br><span class="line">      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">      timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">      # 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">      minEvictableIdleTimeMillis: 300000</span><br><span class="line">      validationQuery: SELECT 1 FROM DUAL</span><br><span class="line">      testWhileIdle: true</span><br><span class="line">      testOnBorrow: false</span><br><span class="line">      testOnReturn: false</span><br><span class="line">      # 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">      poolPreparedStatements: true</span><br><span class="line">      maxPoolPreparedStatementPerConnectionSize: 20</span><br><span class="line">      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙，此处是filter修改的地方</span><br><span class="line">      filters:</span><br><span class="line">        commons-log.connection-logger-name: stat,wall,log4j</span><br><span class="line">      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span><br><span class="line">      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span><br><span class="line">      # 合并多个DruidDataSource的监控数据</span><br><span class="line">      useGlobalDataSourceStat: true</span><br><span class="line">#  jpa:</span><br><span class="line">#    show-sql: true</span><br><span class="line">#    hibernate:</span><br><span class="line">#      ddl-auto: update</span><br><span class="line">#    properties:</span><br><span class="line">#      hibernate:</span><br><span class="line">#        dialect: org.hibernate.dialect.PostgreSQLDialect</span><br></pre></td></tr></table></figure></li><li><p>druid浏览器访问: <code>http://localhost:8080/druid/</code>  </p></li><li><p>这里可能有同学有疑问，druid怎么就整合好了，druid整合其实很简单，pom.xml添加依赖，修改SpringBoot配置文件支持druid，最后则是DataSourceConfig里面配置两个druid初始化参数bean，我的druid的Springboot配置也就是application.yml，是适合SpringBoot 2.0的，如果配置不对应会在 <code>http://localhost:8080/druid/</code>   里的显示找不到数据源。</p></li><li><p>druid效果图</p><p><img src="/images/druid效果图1.jpg" alt="&quot;图片描述&quot;"></p><p><img src="/images/druid效果图2.jpg" alt="&quot;图片描述&quot;"></p></li></ul><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><blockquote><p>这篇文章aop切换数据源主要参考自 <code>https://blog.csdn.net/xiaosheng_papa/article/details/80218006</code>  ，其中一个不足是切面那没加@Order，会导致数据源切换失败，并且没法实现多事务，并在这基础上增加了druid多数据源监控。</p></blockquote><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>关于SpringBoot找不到dataSource or dataSourceClassName or jdbcUrl</title>
    <link href="https://qq1028951741.github.io/2018/11/19/%E5%85%B3%E4%BA%8ESpringBoot%E6%89%BE%E4%B8%8D%E5%88%B0dataSource%20or%20dataSourceClassName%20or%20jdbcUrl/"/>
    <id>https://qq1028951741.github.io/2018/11/19/关于SpringBoot找不到dataSource or dataSourceClassName or jdbcUrl/</id>
    <published>2018-11-19T02:18:13.000Z</published>
    <updated>2018-11-26T09:42:18.302Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="关于SpringBoot找不到dataSource-or-dataSourceClassName-or-jdbcUrl"><a href="#关于SpringBoot找不到dataSource-or-dataSourceClassName-or-jdbcUrl" class="headerlink" title="关于SpringBoot找不到dataSource or dataSourceClassName or jdbcUrl"></a>关于SpringBoot找不到dataSource or dataSourceClassName or jdbcUrl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">配置多个数据源启动报错，error querying database. Cause: java.lang.IllegalArgumentException: dataSource or dataSourceClassName or jdbcUrl is required，</span><br><span class="line"></span><br><span class="line">主要原因是在1.0 配置数据源的过程中主要是写成：spring.datasource.url 和spring.datasource.driverClassName。</span><br><span class="line"></span><br><span class="line">而在2.0升级之后需要变更成：spring.datasource.jdbc-url和spring.datasource.driver-class-name即可解决！</span><br></pre></td></tr></table></figure><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot： SpringBoot：添加在mybatis基础上添加分页功能</title>
    <link href="https://qq1028951741.github.io/2018/11/18/SpringBoot%EF%BC%9A%E6%B7%BB%E5%8A%A0%E5%9C%A8mybatis%E5%9F%BA%E7%A1%80%E4%B8%8A%E6%B7%BB%E5%8A%A0%E5%88%86%E9%A1%B5%E5%8A%9F%E8%83%BD/"/>
    <id>https://qq1028951741.github.io/2018/11/18/SpringBoot：添加在mybatis基础上添加分页功能/</id>
    <published>2018-11-18T02:18:13.000Z</published>
    <updated>2018-11-26T09:42:57.837Z</updated>
    
    <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要=""><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""></the></excerpt></p><h2 id="SpringBoot：添加在mybatis基础上添加分页功能"><a href="#SpringBoot：添加在mybatis基础上添加分页功能" class="headerlink" title="SpringBoot：添加在mybatis基础上添加分页功能"></a>SpringBoot：添加在mybatis基础上添加分页功能</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 分页插件 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.2.5&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="在启动类SpringBootDemoApplication里面添加"><a href="#在启动类SpringBootDemoApplication里面添加" class="headerlink" title="在启动类SpringBootDemoApplication里面添加"></a>在启动类SpringBootDemoApplication里面添加</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">    public PageHelper pageHelper() &#123;</span><br><span class="line">        System.out.println(&quot;MyBatisConfiguration.pageHelper()&quot;);</span><br><span class="line">        PageHelper pageHelper = new PageHelper();</span><br><span class="line">        Properties p = new Properties();</span><br><span class="line">        p.setProperty(&quot;offsetAsPageNum&quot;, &quot;true&quot;);</span><br><span class="line">        p.setProperty(&quot;rowBoundsWithCount&quot;, &quot;true&quot;);</span><br><span class="line">        p.setProperty(&quot;reasonable&quot;, &quot;true&quot;);</span><br><span class="line">        pageHelper.setProperties(p);</span><br><span class="line">        return pageHelper;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="然后再我们的查询接口里加上"><a href="#然后再我们的查询接口里加上" class="headerlink" title="然后再我们的查询接口里加上"></a>然后再我们的查询接口里加上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PageHelper.startPage(pageNum,pageSize); //pageNum表示页数, pageSize表示每页的大小</span><br><span class="line">PageHelper.orderBy(&quot;visit_time DESC &quot;); //进行分页结果的排序，visit_time为字段名，排序规则DESC/ASC</span><br><span class="line">pageInfo = new PageInfo&lt;BlogVisitor&gt;(resultList);//pageInfo是用来包装查询结果，使得有分页信息返回给调用者</span><br></pre></td></tr></table></figure><h3 id="接口示例"><a href="#接口示例" class="headerlink" title="接口示例"></a>接口示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@ApiOperation(value=&quot;查询访客列表&quot;, notes=&quot;查询访客列表&quot;)</span><br><span class="line">    @GetMapping(value = &quot;/qry&quot;)</span><br><span class="line">    public String qryBlogVisitorList(@RequestParam(defaultValue = &quot;1&quot;) Integer pageNum, @RequestParam(defaultValue = &quot;10&quot;) Integer pageSize) &#123;</span><br><span class="line">        PageHelper.startPage(pageNum,pageSize); //pageNum表示页数, pageSize表示每页的大小</span><br><span class="line">        PageHelper.orderBy(&quot;visit_time DESC &quot;); //进行分页结果的排序，visit_time为字段名，排序规则DESC/ASC</span><br><span class="line">        List&lt;BlogVisitor&gt; resultList = null;</span><br><span class="line">        PageInfo pageInfo = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            resultList = restfulService.qryBlogVisitorList();</span><br><span class="line">            pageInfo = new PageInfo&lt;BlogVisitor&gt;(resultList);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询访问者失败!&quot;).pushData();</span><br><span class="line">        &#125;</span><br><span class="line">        if(resultList == null)</span><br><span class="line">            return JsonUtil.getInstance().putData(&quot;ret&quot;, -1).putData(&quot;msg&quot;, &quot;查询不到数据!&quot;).pushData();</span><br><span class="line">        return JsonUtil.getInstance().putData(&quot;ret&quot;, 1).putData(&quot;data&quot;,pageInfo).putData(&quot;msg&quot;, &quot;查询访问者成功!&quot;).pushData();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>源码：https://github.com/qq1028951741/springbootdemo or 右上角github进去，springbootdemo项目，如果对您有帮助，麻烦点下star，谢谢</code></p></blockquote><hr><blockquote class="blockquote-center"><p>人生两苦：想要却不得，拥有却失去。  –褚禄山<br>            珍惜当下,与君共勉~</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;
    
    </summary>
    
      <category term="SpringBoot整合系列" scheme="https://qq1028951741.github.io/categories/SpringBoot%E6%95%B4%E5%90%88%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="SpringBoot" scheme="https://qq1028951741.github.io/tags/SpringBoot/"/>
    
  </entry>
  
</feed>
