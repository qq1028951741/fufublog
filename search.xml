<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[http请求工具类]]></title>
    <url>%2F2018%2F11%2F16%2Fhttp%E8%AF%B7%E6%B1%82%E5%B7%A5%E5%85%B7%E7%B1%BB%2F</url>
    <content type="text"><![CDATA[http请求工具类 这个一个能自己配置请求url、请求方法、请求的媒体类型信息、请求的参数的http工具类 HttpUtil类1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556package com.fufu.httprequest.tools;import java.io.BufferedReader;import java.io.DataOutputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.List;import java.util.Map;public class HttpUtil &#123; public static String httpRequest(String generalUrl,String requestMethod, String contentType, String params) throws Exception &#123; String encoding = &quot;UTF-8&quot;; if (generalUrl.contains(&quot;nlp&quot;)) &#123; encoding = &quot;GBK&quot;; &#125; URL url = new URL(generalUrl); // 打开和URL之间的连接 HttpURLConnection connection = (HttpURLConnection) url.openConnection(); connection.setRequestMethod(requestMethod); // 设置通用的请求属性 connection.setRequestProperty(&quot;Content-Type&quot;, contentType); connection.setRequestProperty(&quot;Connection&quot;, &quot;Keep-Alive&quot;); connection.setUseCaches(false); connection.setDoOutput(true); connection.setDoInput(true); // 得到请求的输出流对象 DataOutputStream out = new DataOutputStream(connection.getOutputStream()); out.write(params.getBytes(encoding)); out.flush(); out.close(); // 建立实际的连接 connection.connect(); // 获取所有响应头字段 Map&lt;String, List&lt;String&gt;&gt; headers = connection.getHeaderFields(); // 遍历所有的响应头字段// for (String key : headers.keySet()) &#123;// System.err.println(key + &quot;---&gt;&quot; + headers.get(key));// &#125; // 定义 BufferedReader输入流来读取URL的响应 BufferedReader in = null; in = new BufferedReader( new InputStreamReader(connection.getInputStream(), encoding)); String result = &quot;&quot;; String getLine; while ((getLine = in.readLine()) != null) &#123; result += getLine; &#125; in.close();// System.err.println(&quot;result:&quot; + result); return result; &#125;&#125; test方法12345678910111213141516171819202122232425package com.fufu.httprequest;import com.fufu.httprequest.tools.HttpUtil;import net.sf.json.JSONObject;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringRunner;@RunWith(SpringRunner.class)@SpringBootTestpublic class HttprequestApplicationTests &#123; @Test public void contextLoads() &#123; try &#123; String result = HttpUtil.httpRequest(&quot;http://localhost:8080/robotservice/visitorRecord/qryVisitedUnit&quot;,&quot;POST&quot;,&quot;application/x-www-form-urlencoded&quot;,&quot;telNum=1555&quot;); JSONObject jobj = JSONObject.fromObject(result); System.out.println(jobj.toString()); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>开发日常记录</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java 中 byte[\]、File、InputStream 互相转换]]></title>
    <url>%2F2018%2F11%2F16%2Fjava%20%E4%B8%AD%20byte%5B%5D%E3%80%81File%E3%80%81InputStream%20%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[java 中 byte[]、File、InputStream 互相转换 将File、FileInputStream 转换为byte数组： 1234567File file = new File(&quot;test.txt&quot;);InputStream input = new FileInputStream(file);byte[] byt = new byte[input.available()];input.read(byt); 将byte数组转换为InputStream： 123byte[] byt = new byte[1024];InputStream input = new ByteArrayInputStream(byt); 将byte数组转换为File : 1234567File file = new File(&apos;&apos;);OutputStream output = new FileOutputStream(file);BufferedOutputStream bufferedOutput = new BufferedOutputStream(output);bufferedOutput.write(byt); 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>开发日常记录</category>
      </categories>
      <tags>
        <tag>byte</tag>
        <tag>File</tag>
        <tag>InputStream</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图片base64编码转MultipartFile]]></title>
    <url>%2F2018%2F11%2F15%2F%E5%9B%BE%E7%89%87base64%E7%BC%96%E7%A0%81%E8%BD%ACMultipartFile%2F</url>
    <content type="text"><![CDATA[图片base64编码转MultipartFiletips:图片base64编码传到后端还需要经过url编码，否则会出现+号丢失新建BASE64DecodedMultipartFile类实现MultipartFile123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package com.*.tools;import org.springframework.web.multipart.MultipartFile;import java.io.*;public class BASE64DecodedMultipartFile implements MultipartFile &#123; private final byte[] imgContent; private final String header; public BASE64DecodedMultipartFile(byte[] imgContent, String header) &#123; this.imgContent = imgContent; this.header = header.split(&quot;;&quot;)[0]; &#125; @Override public String getName() &#123; // TODO - implementation depends on your requirements return System.currentTimeMillis() + Math.random() + &quot;.&quot; + header.split(&quot;/&quot;)[1]; &#125; @Override public String getOriginalFilename() &#123; // TODO - implementation depends on your requirements return System.currentTimeMillis() + (int)Math.random() * 10000 + &quot;.&quot; + header.split(&quot;/&quot;)[1]; &#125; @Override public String getContentType() &#123; // TODO - implementation depends on your requirements return header.split(&quot;:&quot;)[1]; &#125; @Override public boolean isEmpty() &#123; return imgContent == null || imgContent.length == 0; &#125; @Override public long getSize() &#123; return imgContent.length; &#125; @Override public byte[] getBytes() throws IOException &#123; return imgContent; &#125; @Override public InputStream getInputStream() throws IOException &#123; return new ByteArrayInputStream(imgContent); &#125; @Override public void transferTo(File dest) throws IOException, IllegalStateException &#123; new FileOutputStream(dest).write(imgContent); &#125;&#125; 新建tools.java，在里面里添加123456789101112131415161718 //base64转Multipartpublic static MultipartFile base64ToMultipart(String base64) &#123; try &#123; String[] baseStrs = base64.split(&quot;,&quot;); BASE64Decoder decoder = new BASE64Decoder(); byte[] b = new byte[0]; b = decoder.decodeBuffer(baseStrs[1]); for(int i = 0; i &lt; b.length; ++i) &#123; if (b[i] &lt; 0) &#123; b[i] += 256; &#125; &#125; return new BASE64DecodedMultipartFile(b, baseStrs[0]); &#125; catch (IOException e) &#123; e.printStackTrace(); return null; &#125;&#125; 代码调用1MultipartFile file = tools.base64ToMultipart(&quot;你的图片base64编码，这之前要先urldecode&quot;); 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>开发日常记录</category>
      </categories>
      <tags>
        <tag>编码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速利用hexo搭建blog？]]></title>
    <url>%2F2018%2F11%2F10%2Fhexo1%2F</url>
    <content type="text"><![CDATA[如何快速利用hexo搭建blog？安装需要的工具 安装nodejs，最新版本自带npm，然后cmd，查看node -v，若有相应版本，则安装成功。 npm默认的源的下载速度可能很慢，建议使用淘宝镜像替换。 npm config set registry &quot;https://registry.npm.taobao.org&quot; 安装git 安装hexo 新建hexo文件夹 空白处右键git bash here 键入npm install hexo -g #-g表示全局安装, npm默认为当前项目安装 查看hexo version，有相应信息，则安装成功 让hexo跑起来~ 在hexo文件夹右键git bash here 执行hexo init，执行完生成如下目录结构 1234567891011.├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json 执行npm install安装hexo所需模块 执行hexo generate生成静态文件 执行hexo s本地部署 访问http://localhost:4000/ Congratulations~~~ 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>hexo-blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我是一个栗子]]></title>
    <url>%2F2018%2F11%2F10%2F%E6%88%91%E6%98%AF%E4%B8%80%E4%B8%AA%E6%A0%97%E5%AD%90%2F</url>
    <content type="text"><![CDATA[网站:This is an example link.]]></content>
      <categories>
        <category>栗子</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>栗子</tag>
        <tag>我也是一个栗子</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[让hexo-blog更像一个blog]]></title>
    <url>%2F2018%2F11%2F10%2Fhexo2%2F</url>
    <content type="text"><![CDATA[让hexo-blog更像一个blog hexo自带的blog样本可能不太满足我们对一个blog的追求，所以我们可以对站点配置和主题配置文件进行相应修改 我们先给hexo-选择一个主题可以从https://github.com/hexojs/hexo/wiki/Themes 选择一个喜欢的主题，到对应github复制地址，git clone到hexo文件夹 git clone git@github.com:litten/hexo-theme-yilia.git themes/yilia 配置文件位置12345678910111213.├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题| ├── 主题名 #主题名| ├── _config.yml 我是主题配置文件├── _config.yml #全局配置文件 我是站点配置文件└── package.json 以上站点配置文件和主题配置文件位置 配置文件配置 站点配置文件 改博客title，描述，汉化，时区，主题 12345678910111213# Site blog信息设置title: 燃情岁月subtitle: 嘿嘿嘿description: fufublogkeywords:author: fufualanguage: zh-CNtimezone: Asia/Shanghai #广州貌似没有 用上海了# Extensions 主题设置## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 主题配置文件 这里主要改了主题风格和侧边栏显示位置、菜单改成了中文 1234567891011121314151617181920# Schemes 这里是四种主题风格选择#scheme: Muse#scheme: Mist#scheme: Piscesscheme: Gemini#侧边栏位置设置sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). #position: left position: right#菜单设置 menu: 主页: / || home #archives: /archives 目录: /categories || th 标签: /tags || tags #commonweal: /404.html 关于我: /about || user# Enable/Disable menu icons / item badges.# ||后面是图标指向 为菜单加点料 hexo文件夹中右击git bash here 依次键入hexo new page tags、hexo new page categories、hexo new page about 12345678910111213. ├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里 | ├── _posts #文章 | ├── about #关于我 | ├── categories #目录 | ├── index.md #markdown文件 | ├── images #图片 | └── tags #标签 ├── themes #主题 | ├── 主题名 #主题名 | ├── _config.yml 我是主题配置文件 ├── _config.yml #全局配置文件 我是站点配置文件 └── package.json 以categories为例，修改index.md，type一定要有 123456---title: 目录date: 2018-11-10 09:57:57type: &quot;categories&quot;comments: false--- 这是about的index.md 123456---title: 关于我date: 2018-11-10 09:59:15comments: false---我就是我，不一样的烟火~ 关于新增一篇文章这边有两种方法 git bash，键入hexo new 我是一个栗子 或直接在_posts新建.md文件 修改.md文件，栗子 12345678910---title: 我是一个栗子date: 2018-11-10 10:18:13categories:- 栗子tags:- hexo---&lt;Excerpt in index | 首页摘要&gt; &lt;!-- more --&gt;&lt;The rest of contents | 余下全文&gt; 下面你想怎么markdown就怎么markdown more是为了在首页可以不显示整篇文章 来个blog头像 主题配置文件配置 123avatar: #这个是主题source下的image文件夹 url: /images/header.jpg 效果图 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>hexo-blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将hexo-blog部署到github]]></title>
    <url>%2F2018%2F11%2F10%2Fhexo3%2F</url>
    <content type="text"><![CDATA[将hexo-blog部署到github注册github创建仓库Create a new repository 记住自己取的repository name 将hexo和github关联起来 hexo文件夹，鼠标右键，点击Git Base Here，键入 12git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot; 新建一个文件存放生成的ssh密匙文件，鼠标右键，点击Git Base Here 1ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot; 生成两个文件id_rsa和id_rsa.pub 在github上添加公匙 用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。 修改hexo站点配置文件 123456789# Deployment 注释## Docs: https://hexo.io/docs/deployment.htmldeploy: # 类型 type: git # 仓库 repo: git@github.com:你的用户名/你的用户名.github.io.git # 分支 branch: master 部署hexo到github123456# 清空静态页面hexo clean# 生成静态页面hexo generate# 部署 hexo deploy 访问 https://你的用户名.github.io/ ，也可去仓库那看看自己的链接 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>hexo-blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为hexo-blog增加评论功能]]></title>
    <url>%2F2018%2F11%2F10%2Fhexo4%2F</url>
    <content type="text"><![CDATA[为hexo-blog增加评论功能 如果一个博客活着不是为了相互交流，那么我们开始吧，评论功能主要用LeanCloud+Valine集成的。 先注册LeanCloud网址：https://leancloud.cn/ LeanCloud操作 创建应用 进入设置，安全中心选项设置安全域名 存储选项中创建Class，相当于一个放评论的数据库表 进入设置，应用key选项，记下appid和appkey Valine这边hexo相关主题已经有相应配置 具体参考 在hexo中的使用https://valine.js.org/hexo.html 所以只需修改我们hexo中主题的配置文件 123456789101112valine: enable: true appid: appkey: notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 友善发言的人运气不会太差~ --小黄即 avatar: mm # gravatar style 头像设置看上面那个网址 #avatar: wavatar guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size visitor: true 部署git bash 键入 hexo d -g ,访问 http://你的用户名.github.io/ 效果图 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>hexo-blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[美化hexo-blog]]></title>
    <url>%2F2018%2F11%2F10%2Fhexo5%2F</url>
    <content type="text"><![CDATA[屏蔽blog网页底部强力驱动主题配置文件配置如下 123456789101112copyright:powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: falsetheme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false 更改底部footer图标 找到喜欢的图标 https:/www.thinkcmf.com/font/font_awesome/icons.html 主题配置文件修改 123footer: icon: name: star-o 每个图标都有对应的class，如下 1&lt;i class=&quot;fa fa-star-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 我们取class fa fa-后面的名字填写在主题配置文件相应位置 让图标跳动起来 查看 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _partials 下的footer.swig 文件的 &lt;span class=&quot;with-love&quot; id=&quot;animate&quot;&gt; 在一下位置修改custom.styl 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _custom 新增 12345678910111213// 自定义页脚跳动样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#animate &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 113, 168);&#125; #animate 取自 第二小点的id 增加底部访客统计功能123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _partials 在_partials目录下找到footer.swig文件，在文件最上面加上 &lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; 在powered-by前加上 1234567891011&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-smile-o&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 欢迎光临，您是第 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; 位访客&lt;/span&gt;&lt;/div&gt;&lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;&lt;div class=&quot;powered-by&quot;&gt;&lt;i class=&quot;fa fa-hand-o-right&quot;&gt;&lt;/i&gt;&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 次&lt;/span&gt;&lt;/div&gt; 效果图 添加文章版权声明 在目录 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _macro 下新增文件my-copyright.swig 123456789101112131415161718192021222324252627282930313233&#123;% if page.copyright %&#125;&lt;div class=&quot;my_post_copyright&quot;&gt; &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:mm:ss&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class=&quot;copy-path&quot; title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot; aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard(&apos;.fa-clipboard&apos;); clipboard.on(&apos;success&apos;, $(function()&#123; $(&quot;.fa-clipboard&quot;).click(function()&#123; swal(&#123; title: &quot;&quot;, text: &apos;复制成功&apos;, html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 在目录 123456789. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _common | ├── components | ├── post 新增文件my-post-copyright.styl 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #333333; // title color font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #0593d3; // link color text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _macro 下的post.swig ，end post body后添加 12345678 &#123;#####################&#125; &#123;### END POST BODY ###&#125; &#123;#####################&#125;&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 在 123456789. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _common | ├── components | ├── post 里的post.styl 文件尾添加 1@import &quot;my-post-copyright&quot; 我一般新建文章是在 123. ├── source ├── _posts 下的.md文件直接添加版权声明开启，栗子 123456789---title: 我是一个栗子date: 2018-11-10 10:18:13categories:- 栗子tags:- hexocopyright: true #新增,开启--- 修改标签图标 目录 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _macro 把post.swig 中的 rel=”tag”&gt;# 的#替换成 ，图标可以上文章前面的网址找，替换完后要重启server 文章末尾添加文章结束提示 目录 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _macro 新建passage-end-tag.swig 文件 ，内容 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------&lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt; this is end, thank you for reading &lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt;-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 修改同目录下post.swig文件 ，放在end post body后面，我这边放在版权声明后面 12345678910111213&#123;#####################&#125; &#123;### END POST BODY ###&#125; &#123;#####################&#125;&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt;&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125; &lt;/div&gt; 效果图 鼠标点击出现爱心效果 目录 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── js | ├── src 新建love.js，内容 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566(function(window,document,undefined)&#123;var hearts = [];window.requestAnimationFrame = (function()&#123;return window.requestAnimationFrame ||window.webkitRequestAnimationFrame ||window.mozRequestAnimationFrame ||window.oRequestAnimationFrame ||window.msRequestAnimationFrame ||function (callback)&#123;setTimeout(callback,1000/60);&#125;&#125;)();init();function init()&#123;css(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;);attachEvent();gameloop();&#125;function gameloop()&#123;for(var i=0;i&lt;hearts.length;i++)&#123;if(hearts[i].alpha &lt;=0)&#123;document.body.removeChild(hearts[i].el);hearts.splice(i,1);continue;&#125;hearts[i].y--;hearts[i].scale += 0.004;hearts[i].alpha -= 0.013;hearts[i].el.style.cssText = &quot;left:&quot;+hearts[i].x+&quot;px;top:&quot;+hearts[i].y+&quot;px;opacity:&quot;+hearts[i].alpha+&quot;;transform:scale(&quot;+hearts[i].scale+&quot;,&quot;+hearts[i].scale+&quot;) rotate(45deg);background:&quot;+hearts[i].color;&#125;requestAnimationFrame(gameloop);&#125;function attachEvent()&#123;var old = typeof window.onclick===&quot;function&quot; &amp;&amp; window.onclick;window.onclick = function(event)&#123;old &amp;&amp; old();createHeart(event);&#125;&#125;function createHeart(event)&#123;var d = document.createElement(&quot;div&quot;);d.className = &quot;heart&quot;;hearts.push(&#123;el : d,x : event.clientX - 5,y : event.clientY - 5,scale : 1,alpha : 1,color : randomColor()&#125;);document.body.appendChild(d);&#125;function css(css)&#123;var style = document.createElement(&quot;style&quot;);style.type=&quot;text/css&quot;;try&#123;style.appendChild(document.createTextNode(css));&#125;catch(ex)&#123;style.styleSheet.cssText = css;&#125;document.getElementsByTagName(&apos;head&apos;)[0].appendChild(style);&#125;function randomColor()&#123;return &quot;rgb(&quot;+(~~(Math.random()*255))+&quot;,&quot;+(~~(Math.random()*255))+&quot;,&quot;+(~~(Math.random()*255))+&quot;)&quot;;&#125;&#125;)(window,document); 目录 12345. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout _layout.swig文件末尾添加一下 12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 为blog设置一只小可爱 git bash键入 npm install -save hexo-helper-live2d 去github地址 https://github.com/xiazeyu/live2d-widget-models 选择自己想要的model，比如我选了个黑猫model live2d-widget-model-hijiki，需要 npm install --save live2d-widget-model-hijiki 安装模块 随后在站点配置文件里加入 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false debug: false model: use: live2d-widget-model-hijiki display: position: right width: 100 height: 100 mobile: show: true 设置网站图标 在网址 https://www.easyicon.net/找一张（32*32）的ico图标 把图标放在 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── images 修改主题配置文件 12345favicon: small: /images/favicon-16x16-next.png medium: /images/你下载的图标.ico apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg 设置背景图片目录 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _custom 下 custom.styl 文件 新增这些，这个配置可以保证图片全屏显示，有的文章的配置会有显示不全屏的情况 12345678910111213@media screen and (min-width:1200px) &#123; body &#123; background-image:url(/images/background.jpg); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%; &#125; #footer a &#123; color:#eee; &#125;&#125; 设置可交互背景 进入 theme/next 执行命令 git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest 下载动态js文件 配置主题配置文件canvas_nest 为true 添加github图标链接 链接图标选择地址 http://tholman.com/github-corners/ 把代码复制到目录 12345. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout 下的_layout.swig 文件中的 &lt;div class=&quot;headband&quot;&gt;&lt;/div&gt; 下面，并把href指向修改为你的github地址 设置圆形动态头像 设置头像前面已经说过了 接下在目录 123456789. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _common | ├── components | ├── sidebar 下的sidebar-author.styl 新增 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 设置代码块样式 目录 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _custom 下文件custom.styl 新增 123456789101112131415//代码块` `样式code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 测试，我是一行快乐的代码块 网页底部添加blog运行时长 目录 123456. ├── source ├── themes #主题 | ├── next #主题名 | ├── layout | ├── _partials 下footer.swig文件头部添加 1234567891011121314151617181920212223242526&lt;div id=&quot;days&quot;&gt;&lt;/div&gt;&lt;script&gt;function show_date_time()&#123;window.setTimeout(&quot;show_date_time()&quot;, 1000);BirthDay=new Date(&quot;05/27/2017 15:13:14&quot;);today=new Date();timeold=(today.getTime()-BirthDay.getTime());sectimeold=timeold/1000secondsold=Math.floor(sectimeold);msPerDay=24*60*60*1000e_daysold=timeold/msPerDaydaysold=Math.floor(e_daysold);e_hrsold=(e_daysold-daysold)*24;hrsold=setzero(Math.floor(e_hrsold));e_minsold=(e_hrsold-hrsold)*60;minsold=setzero(Math.floor((e_hrsold-hrsold)*60));seconds=setzero(Math.floor((e_minsold-minsold)*60));document.getElementById(&apos;days&apos;).innerHTML=&quot;已运行&quot;+daysold+&quot;天&quot;+hrsold+&quot;小时&quot;+minsold+&quot;分&quot;+seconds+&quot;秒&quot;;&#125;function setzero(i)&#123;if (i&lt;10)&#123;i=&quot;0&quot; + i&#125;;return i;&#125;show_date_time();&lt;/script&gt; 接下来我是在原本的访客记录位置下添加 &lt;div id=&quot;days&quot;&gt;&lt;/div&gt; 添加文章图片点击放大功能 目录 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── js | ├── src 中文件post-details.js最后面添加 123456789101112131415161718192021222324252627//----点击 图片放大js----------------function createImgEventFullScreen() &#123; var imgs = $(&quot;.post-body&quot;).find(&quot;img&quot;); console.log(imgs); for(var i = 0;i &lt; imgs.length;i++) &#123; // $(imgs[i]).click(createCover(imgs[i])); imgs[i].onclick= function(e) &#123; var src = e.srcElement.currentSrc; createCover(src) &#125; &#125; function createCover (src) &#123; console.log(src); var cover = $(&quot;&lt;div id=&apos;fullScreenCover&apos; class=&apos;zhou-cover-img-container&apos;&gt;&lt;img class=&apos;zhou-cover-img&apos; src=&apos;&quot;+src+&quot;&apos;/&gt;&lt;/div&gt;&quot;); $(&quot;#fullScreenCover&quot;).remove(); $(&quot;body&quot;).append(cover); $(&quot;body&quot;).addClass(&quot;zhou-no-scroll&quot;); $(&quot;#fullScreenCover&quot;).click(function()&#123; $(&quot;#fullScreenCover&quot;).remove(); $(&quot;body&quot;).removeClass(&quot;zhou-no-scroll&quot;); &#125;) &#125;&#125;setTimeout(function()&#123; createImgEventFullScreen();&#125;,1000) 目录 1234567. ├── source ├── themes #主题 | ├── next #主题名 | ├── source | ├── css | ├── _custom 中文件custom.styl最后添加 1234567891011121314151617181920.zhou-cover-img-container&#123; position: fixed; top: 10%; left: 10%; width: 80%; height: 80%; z-index: 10002; text-align: center; background-color: #000;&#125;.zhou-cover-img&#123; left: 0; height: 100%; width: 100%; position: absolute; top: 0; bottom: 0;&#125; 目录 12345. ├── source ├── node_modules | ├── hexo-blog-encrypt | ├── lib 中修改blog-encrypt.js ，在 $(&#39;#encrypt-blog&#39;).html(content); 后面加上 createImgEventFullScreen(); ….blog美化先到这里吧，感觉有点被榨干了，虽然说还有些高阶优化，后面再补充吧，以上。效果图 更多效果请移步，blog：https://qq1028951741.github.io/ 人生两苦：想要却不得，拥有却失去。 –褚禄山 珍惜当下,与君共勉~]]></content>
      <categories>
        <category>hexo-blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
